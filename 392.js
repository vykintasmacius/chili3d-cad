"use strict";(self.webpackChunkchili3d=self.webpackChunkchili3d||[]).push([["392"],{2702:function(e,t,r){r.r(t),r.d(t,{IndexedDBStorage:()=>IndexedDBStorage});var o=r(8909);let IndexedDBStorage=class IndexedDBStorage{version=4;async get(e,t,r){let o=await this.open(e,t,this.version);try{return await IndexedDBStorage.get(o,t,r)}finally{o.close()}}async put(e,t,r,o){let s=await this.open(e,t,this.version);try{return await IndexedDBStorage.put(s,t,r,o)}finally{s.close()}}async delete(e,t,r){let o=await this.open(e,t,this.version);try{return await IndexedDBStorage.delete(o,t,r)}finally{o.close()}}async page(e,t,r){let o=await this.open(e,t,this.version);try{return await IndexedDBStorage.getPage(o,t,r)}finally{o.close()}}open(e,t,r,s){let n=window.indexedDB.open(e,r);return new Promise((t,r)=>{n.onsuccess=r=>{o.Yd.info(`open ${e} success`),t(r.target.result)},n.onerror=t=>{o.Yd.error(`open ${e} error`),r(t)},n.onupgradeneeded=t=>{o.Yd.info(`upgrade ${e}`);let r=t.target.result;[o.gT.DocumentTable,o.gT.RecentTable].forEach(e=>{r.objectStoreNames.contains(e)||(o.Yd.info(`create store ${e}`),r.createObjectStore(e,s))})}})}static get(e,t,r){let s=e.transaction([t],"readonly").objectStore(t).get(r);return new Promise((e,r)=>{s.onsuccess=r=>{o.Yd.info(`${t} store get object success`),e(r.target.result)},s.onerror=e=>{o.Yd.error(`${t} store get object error`),r(e)}})}static getPage(e,t,r,s=20){let n=[],a=0,c=!1,i=e.transaction([t],"readonly").objectStore(t).openCursor();return new Promise((e,d)=>{i.onsuccess=i=>{let d=i.target.result;d&&a!==s?!c&&r*s>0?(c=!0,d.advance(r*s)):(n.push(d.value),a++,d.continue()):(o.Yd.info(`${t} store get objects success`),e(n))},i.onerror=e=>{o.Yd.error(`${t} store get objects error`),d(e)}})}static delete(e,t,r){let s=e.transaction([t],"readwrite").objectStore(t).delete(r);return new Promise((e,r)=>{s.onsuccess=()=>{o.Yd.info(`${t} store delete object success`),e(!0)},s.onerror=e=>{o.Yd.error(`${t} store delete object error`),r(e)}})}static put(e,t,r,s){let n=e.transaction([t],"readwrite").objectStore(t).put(s,r);return new Promise((e,r)=>{n.onsuccess=()=>{o.Yd.info(`${t} store put object success`),e(!0)},n.onerror=e=>{o.Yd.error(`${t} store put object error`),r(e)}})}}}}]);
//# sourceMappingURL=392.js.map