{"version":3,"file":"33.js","sources":["webpack://chili3d/./packages/chili-wasm/lib/chili-wasm.js","webpack://chili3d/./packages/chili-wasm/src/wasm.ts","webpack://chili3d/./packages/chili-wasm/src/geometry.ts","webpack://chili3d/./packages/chili-wasm/src/mesher.ts","webpack://chili3d/./packages/chili-wasm/src/shape.ts","webpack://chili3d/./packages/chili-wasm/src/curve.ts","webpack://chili3d/./packages/chili-wasm/src/surface.ts","webpack://chili3d/./packages/chili-wasm/src/helper.ts","webpack://chili3d/./packages/chili-wasm/src/converter.ts","webpack://chili3d/./packages/chili-wasm/src/factory.ts"],"sourcesContent":["var Module = (() => {\r\n    return async function (moduleArg = {}) {\r\n        var moduleRtn;\r\n\r\n        var Module = moduleArg;\r\n        var readyPromiseResolve, readyPromiseReject;\r\n        var readyPromise = new Promise((resolve, reject) => {\r\n            readyPromiseResolve = resolve;\r\n            readyPromiseReject = reject;\r\n        });\r\n        var ENVIRONMENT_IS_WEB = true;\r\n        var ENVIRONMENT_IS_WORKER = false;\r\n        var arguments_ = [];\r\n        var thisProgram = \"./this.program\";\r\n        var quit_ = (status, toThrow) => {\r\n            throw toThrow;\r\n        };\r\n        var _scriptName = import.meta.url;\r\n        var scriptDirectory = \"\";\r\n        function locateFile(path) {\r\n            if (Module[\"locateFile\"]) {\r\n                return Module[\"locateFile\"](path, scriptDirectory);\r\n            }\r\n            return scriptDirectory + path;\r\n        }\r\n        var readAsync, readBinary;\r\n        if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\r\n            try {\r\n                scriptDirectory = new URL(\".\", _scriptName).href;\r\n            } catch {}\r\n            {\r\n                readAsync = async (url) => {\r\n                    var response = await fetch(url, { credentials: \"same-origin\" });\r\n                    if (response.ok) {\r\n                        return response.arrayBuffer();\r\n                    }\r\n                    throw new Error(response.status + \" : \" + response.url);\r\n                };\r\n            }\r\n        } else {\r\n        }\r\n        var out = console.log.bind(console);\r\n        var err = console.error.bind(console);\r\n        var wasmBinary;\r\n        var wasmMemory;\r\n        var ABORT = false;\r\n        var EXITSTATUS;\r\n        function assert(condition, text) {\r\n            if (!condition) {\r\n                abort(text);\r\n            }\r\n        }\r\n        var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAP64, HEAPU64, HEAPF64;\r\n        var runtimeInitialized = false;\r\n        function updateMemoryViews() {\r\n            var b = wasmMemory.buffer;\r\n            HEAP8 = new Int8Array(b);\r\n            HEAP16 = new Int16Array(b);\r\n            HEAPU8 = new Uint8Array(b);\r\n            HEAPU16 = new Uint16Array(b);\r\n            HEAP32 = new Int32Array(b);\r\n            HEAPU32 = new Uint32Array(b);\r\n            HEAPF32 = new Float32Array(b);\r\n            HEAPF64 = new Float64Array(b);\r\n            HEAP64 = new BigInt64Array(b);\r\n            HEAPU64 = new BigUint64Array(b);\r\n        }\r\n        function preRun() {\r\n            if (Module[\"preRun\"]) {\r\n                if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [Module[\"preRun\"]];\r\n                while (Module[\"preRun\"].length) {\r\n                    addOnPreRun(Module[\"preRun\"].shift());\r\n                }\r\n            }\r\n            callRuntimeCallbacks(onPreRuns);\r\n        }\r\n        function initRuntime() {\r\n            runtimeInitialized = true;\r\n            if (!Module[\"noFSInit\"] && !FS.initialized) FS.init();\r\n            TTY.init();\r\n            wasmExports[\"ka\"]();\r\n            FS.ignorePermissions = false;\r\n        }\r\n        function postRun() {\r\n            if (Module[\"postRun\"]) {\r\n                if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [Module[\"postRun\"]];\r\n                while (Module[\"postRun\"].length) {\r\n                    addOnPostRun(Module[\"postRun\"].shift());\r\n                }\r\n            }\r\n            callRuntimeCallbacks(onPostRuns);\r\n        }\r\n        var runDependencies = 0;\r\n        var dependenciesFulfilled = null;\r\n        function getUniqueRunDependency(id) {\r\n            return id;\r\n        }\r\n        function addRunDependency(id) {\r\n            runDependencies++;\r\n            Module[\"monitorRunDependencies\"]?.(runDependencies);\r\n        }\r\n        function removeRunDependency(id) {\r\n            runDependencies--;\r\n            Module[\"monitorRunDependencies\"]?.(runDependencies);\r\n            if (runDependencies == 0) {\r\n                if (dependenciesFulfilled) {\r\n                    var callback = dependenciesFulfilled;\r\n                    dependenciesFulfilled = null;\r\n                    callback();\r\n                }\r\n            }\r\n        }\r\n        function abort(what) {\r\n            Module[\"onAbort\"]?.(what);\r\n            what = \"Aborted(\" + what + \")\";\r\n            err(what);\r\n            ABORT = true;\r\n            what += \". Build with -sASSERTIONS for more info.\";\r\n            var e = new WebAssembly.RuntimeError(what);\r\n            readyPromiseReject(e);\r\n            throw e;\r\n        }\r\n        var wasmBinaryFile;\r\n        function findWasmBinary() {\r\n            if (Module[\"locateFile\"]) {\r\n                return locateFile(\"chili-wasm.wasm\");\r\n            }\r\n            return new URL(\"chili-wasm.wasm\", import.meta.url).href;\r\n        }\r\n        function getBinarySync(file) {\r\n            if (file == wasmBinaryFile && wasmBinary) {\r\n                return new Uint8Array(wasmBinary);\r\n            }\r\n            if (readBinary) {\r\n                return readBinary(file);\r\n            }\r\n            throw \"both async and sync fetching of the wasm failed\";\r\n        }\r\n        async function getWasmBinary(binaryFile) {\r\n            if (!wasmBinary) {\r\n                try {\r\n                    var response = await readAsync(binaryFile);\r\n                    return new Uint8Array(response);\r\n                } catch {}\r\n            }\r\n            return getBinarySync(binaryFile);\r\n        }\r\n        async function instantiateArrayBuffer(binaryFile, imports) {\r\n            try {\r\n                var binary = await getWasmBinary(binaryFile);\r\n                var instance = await WebAssembly.instantiate(binary, imports);\r\n                return instance;\r\n            } catch (reason) {\r\n                err(`failed to asynchronously prepare wasm: ${reason}`);\r\n                abort(reason);\r\n            }\r\n        }\r\n        async function instantiateAsync(binary, binaryFile, imports) {\r\n            if (!binary && typeof WebAssembly.instantiateStreaming == \"function\") {\r\n                try {\r\n                    var response = fetch(binaryFile, { credentials: \"same-origin\" });\r\n                    var instantiationResult = await WebAssembly.instantiateStreaming(response, imports);\r\n                    return instantiationResult;\r\n                } catch (reason) {\r\n                    err(`wasm streaming compile failed: ${reason}`);\r\n                    err(\"falling back to ArrayBuffer instantiation\");\r\n                }\r\n            }\r\n            return instantiateArrayBuffer(binaryFile, imports);\r\n        }\r\n        function getWasmImports() {\r\n            return { a: wasmImports };\r\n        }\r\n        async function createWasm() {\r\n            function receiveInstance(instance, module) {\r\n                wasmExports = instance.exports;\r\n                wasmExports = applySignatureConversions(wasmExports);\r\n                wasmMemory = wasmExports[\"ja\"];\r\n                updateMemoryViews();\r\n                wasmTable = wasmExports[\"oa\"];\r\n                removeRunDependency(\"wasm-instantiate\");\r\n                return wasmExports;\r\n            }\r\n            addRunDependency(\"wasm-instantiate\");\r\n            function receiveInstantiationResult(result) {\r\n                return receiveInstance(result[\"instance\"]);\r\n            }\r\n            var info = getWasmImports();\r\n            if (Module[\"instantiateWasm\"]) {\r\n                return new Promise((resolve, reject) => {\r\n                    Module[\"instantiateWasm\"](info, (mod, inst) => {\r\n                        resolve(receiveInstance(mod, inst));\r\n                    });\r\n                });\r\n            }\r\n            wasmBinaryFile ??= findWasmBinary();\r\n            try {\r\n                var result = await instantiateAsync(wasmBinary, wasmBinaryFile, info);\r\n                var exports = receiveInstantiationResult(result);\r\n                return exports;\r\n            } catch (e) {\r\n                readyPromiseReject(e);\r\n                return Promise.reject(e);\r\n            }\r\n        }\r\n        class ExitStatus {\r\n            name = \"ExitStatus\";\r\n            constructor(status) {\r\n                this.message = `Program terminated with exit(${status})`;\r\n                this.status = status;\r\n            }\r\n        }\r\n        var callRuntimeCallbacks = (callbacks) => {\r\n            while (callbacks.length > 0) {\r\n                callbacks.shift()(Module);\r\n            }\r\n        };\r\n        var onPostRuns = [];\r\n        var addOnPostRun = (cb) => onPostRuns.push(cb);\r\n        var onPreRuns = [];\r\n        var addOnPreRun = (cb) => onPreRuns.push(cb);\r\n        var noExitRuntime = true;\r\n        class ExceptionInfo {\r\n            constructor(excPtr) {\r\n                this.excPtr = excPtr;\r\n                this.ptr = excPtr - 24;\r\n            }\r\n            set_type(type) {\r\n                HEAPU32[((this.ptr + 4) >>> 2) >>> 0] = type;\r\n            }\r\n            get_type() {\r\n                return HEAPU32[((this.ptr + 4) >>> 2) >>> 0];\r\n            }\r\n            set_destructor(destructor) {\r\n                HEAPU32[((this.ptr + 8) >>> 2) >>> 0] = destructor;\r\n            }\r\n            get_destructor() {\r\n                return HEAPU32[((this.ptr + 8) >>> 2) >>> 0];\r\n            }\r\n            set_caught(caught) {\r\n                caught = caught ? 1 : 0;\r\n                HEAP8[(this.ptr + 12) >>> 0] = caught;\r\n            }\r\n            get_caught() {\r\n                return HEAP8[(this.ptr + 12) >>> 0] != 0;\r\n            }\r\n            set_rethrown(rethrown) {\r\n                rethrown = rethrown ? 1 : 0;\r\n                HEAP8[(this.ptr + 13) >>> 0] = rethrown;\r\n            }\r\n            get_rethrown() {\r\n                return HEAP8[(this.ptr + 13) >>> 0] != 0;\r\n            }\r\n            init(type, destructor) {\r\n                this.set_adjusted_ptr(0);\r\n                this.set_type(type);\r\n                this.set_destructor(destructor);\r\n            }\r\n            set_adjusted_ptr(adjustedPtr) {\r\n                HEAPU32[((this.ptr + 16) >>> 2) >>> 0] = adjustedPtr;\r\n            }\r\n            get_adjusted_ptr() {\r\n                return HEAPU32[((this.ptr + 16) >>> 2) >>> 0];\r\n            }\r\n        }\r\n        var exceptionLast = 0;\r\n        var uncaughtExceptionCount = 0;\r\n        var INT53_MAX = 9007199254740992;\r\n        var INT53_MIN = -9007199254740992;\r\n        var bigintToI53Checked = (num) => (num < INT53_MIN || num > INT53_MAX ? NaN : Number(num));\r\n        function ___cxa_throw(ptr, type, destructor) {\r\n            ptr >>>= 0;\r\n            type >>>= 0;\r\n            destructor >>>= 0;\r\n            var info = new ExceptionInfo(ptr);\r\n            info.init(type, destructor);\r\n            exceptionLast = ptr;\r\n            uncaughtExceptionCount++;\r\n            throw exceptionLast;\r\n        }\r\n        var PATH = {\r\n            isAbs: (path) => path.charAt(0) === \"/\",\r\n            splitPath: (filename) => {\r\n                var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\r\n                return splitPathRe.exec(filename).slice(1);\r\n            },\r\n            normalizeArray: (parts, allowAboveRoot) => {\r\n                var up = 0;\r\n                for (var i = parts.length - 1; i >= 0; i--) {\r\n                    var last = parts[i];\r\n                    if (last === \".\") {\r\n                        parts.splice(i, 1);\r\n                    } else if (last === \"..\") {\r\n                        parts.splice(i, 1);\r\n                        up++;\r\n                    } else if (up) {\r\n                        parts.splice(i, 1);\r\n                        up--;\r\n                    }\r\n                }\r\n                if (allowAboveRoot) {\r\n                    for (; up; up--) {\r\n                        parts.unshift(\"..\");\r\n                    }\r\n                }\r\n                return parts;\r\n            },\r\n            normalize: (path) => {\r\n                var isAbsolute = PATH.isAbs(path),\r\n                    trailingSlash = path.slice(-1) === \"/\";\r\n                path = PATH.normalizeArray(\r\n                    path.split(\"/\").filter((p) => !!p),\r\n                    !isAbsolute,\r\n                ).join(\"/\");\r\n                if (!path && !isAbsolute) {\r\n                    path = \".\";\r\n                }\r\n                if (path && trailingSlash) {\r\n                    path += \"/\";\r\n                }\r\n                return (isAbsolute ? \"/\" : \"\") + path;\r\n            },\r\n            dirname: (path) => {\r\n                var result = PATH.splitPath(path),\r\n                    root = result[0],\r\n                    dir = result[1];\r\n                if (!root && !dir) {\r\n                    return \".\";\r\n                }\r\n                if (dir) {\r\n                    dir = dir.slice(0, -1);\r\n                }\r\n                return root + dir;\r\n            },\r\n            basename: (path) => path && path.match(/([^\\/]+|\\/)\\/*$/)[1],\r\n            join: (...paths) => PATH.normalize(paths.join(\"/\")),\r\n            join2: (l, r) => PATH.normalize(l + \"/\" + r),\r\n        };\r\n        var initRandomFill = () => (view) => crypto.getRandomValues(view);\r\n        var randomFill = (view) => {\r\n            (randomFill = initRandomFill())(view);\r\n        };\r\n        var PATH_FS = {\r\n            resolve: (...args) => {\r\n                var resolvedPath = \"\",\r\n                    resolvedAbsolute = false;\r\n                for (var i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\r\n                    var path = i >= 0 ? args[i] : FS.cwd();\r\n                    if (typeof path != \"string\") {\r\n                        throw new TypeError(\"Arguments to path.resolve must be strings\");\r\n                    } else if (!path) {\r\n                        return \"\";\r\n                    }\r\n                    resolvedPath = path + \"/\" + resolvedPath;\r\n                    resolvedAbsolute = PATH.isAbs(path);\r\n                }\r\n                resolvedPath = PATH.normalizeArray(\r\n                    resolvedPath.split(\"/\").filter((p) => !!p),\r\n                    !resolvedAbsolute,\r\n                ).join(\"/\");\r\n                return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\";\r\n            },\r\n            relative: (from, to) => {\r\n                from = PATH_FS.resolve(from).slice(1);\r\n                to = PATH_FS.resolve(to).slice(1);\r\n                function trim(arr) {\r\n                    var start = 0;\r\n                    for (; start < arr.length; start++) {\r\n                        if (arr[start] !== \"\") break;\r\n                    }\r\n                    var end = arr.length - 1;\r\n                    for (; end >= 0; end--) {\r\n                        if (arr[end] !== \"\") break;\r\n                    }\r\n                    if (start > end) return [];\r\n                    return arr.slice(start, end - start + 1);\r\n                }\r\n                var fromParts = trim(from.split(\"/\"));\r\n                var toParts = trim(to.split(\"/\"));\r\n                var length = Math.min(fromParts.length, toParts.length);\r\n                var samePartsLength = length;\r\n                for (var i = 0; i < length; i++) {\r\n                    if (fromParts[i] !== toParts[i]) {\r\n                        samePartsLength = i;\r\n                        break;\r\n                    }\r\n                }\r\n                var outputParts = [];\r\n                for (var i = samePartsLength; i < fromParts.length; i++) {\r\n                    outputParts.push(\"..\");\r\n                }\r\n                outputParts = outputParts.concat(toParts.slice(samePartsLength));\r\n                return outputParts.join(\"/\");\r\n            },\r\n        };\r\n        var UTF8Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder() : undefined;\r\n        var UTF8ArrayToString = (heapOrArray, idx = 0, maxBytesToRead = NaN) => {\r\n            idx >>>= 0;\r\n            var endIdx = idx + maxBytesToRead;\r\n            var endPtr = idx;\r\n            while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\r\n            if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\r\n                return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\r\n            }\r\n            var str = \"\";\r\n            while (idx < endPtr) {\r\n                var u0 = heapOrArray[idx++];\r\n                if (!(u0 & 128)) {\r\n                    str += String.fromCharCode(u0);\r\n                    continue;\r\n                }\r\n                var u1 = heapOrArray[idx++] & 63;\r\n                if ((u0 & 224) == 192) {\r\n                    str += String.fromCharCode(((u0 & 31) << 6) | u1);\r\n                    continue;\r\n                }\r\n                var u2 = heapOrArray[idx++] & 63;\r\n                if ((u0 & 240) == 224) {\r\n                    u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\r\n                } else {\r\n                    u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\r\n                }\r\n                if (u0 < 65536) {\r\n                    str += String.fromCharCode(u0);\r\n                } else {\r\n                    var ch = u0 - 65536;\r\n                    str += String.fromCharCode(55296 | (ch >> 10), 56320 | (ch & 1023));\r\n                }\r\n            }\r\n            return str;\r\n        };\r\n        var FS_stdin_getChar_buffer = [];\r\n        var lengthBytesUTF8 = (str) => {\r\n            var len = 0;\r\n            for (var i = 0; i < str.length; ++i) {\r\n                var c = str.charCodeAt(i);\r\n                if (c <= 127) {\r\n                    len++;\r\n                } else if (c <= 2047) {\r\n                    len += 2;\r\n                } else if (c >= 55296 && c <= 57343) {\r\n                    len += 4;\r\n                    ++i;\r\n                } else {\r\n                    len += 3;\r\n                }\r\n            }\r\n            return len;\r\n        };\r\n        var stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {\r\n            outIdx >>>= 0;\r\n            if (!(maxBytesToWrite > 0)) return 0;\r\n            var startIdx = outIdx;\r\n            var endIdx = outIdx + maxBytesToWrite - 1;\r\n            for (var i = 0; i < str.length; ++i) {\r\n                var u = str.charCodeAt(i);\r\n                if (u >= 55296 && u <= 57343) {\r\n                    var u1 = str.charCodeAt(++i);\r\n                    u = (65536 + ((u & 1023) << 10)) | (u1 & 1023);\r\n                }\r\n                if (u <= 127) {\r\n                    if (outIdx >= endIdx) break;\r\n                    heap[outIdx++ >>> 0] = u;\r\n                } else if (u <= 2047) {\r\n                    if (outIdx + 1 >= endIdx) break;\r\n                    heap[outIdx++ >>> 0] = 192 | (u >> 6);\r\n                    heap[outIdx++ >>> 0] = 128 | (u & 63);\r\n                } else if (u <= 65535) {\r\n                    if (outIdx + 2 >= endIdx) break;\r\n                    heap[outIdx++ >>> 0] = 224 | (u >> 12);\r\n                    heap[outIdx++ >>> 0] = 128 | ((u >> 6) & 63);\r\n                    heap[outIdx++ >>> 0] = 128 | (u & 63);\r\n                } else {\r\n                    if (outIdx + 3 >= endIdx) break;\r\n                    heap[outIdx++ >>> 0] = 240 | (u >> 18);\r\n                    heap[outIdx++ >>> 0] = 128 | ((u >> 12) & 63);\r\n                    heap[outIdx++ >>> 0] = 128 | ((u >> 6) & 63);\r\n                    heap[outIdx++ >>> 0] = 128 | (u & 63);\r\n                }\r\n            }\r\n            heap[outIdx >>> 0] = 0;\r\n            return outIdx - startIdx;\r\n        };\r\n        var intArrayFromString = (stringy, dontAddNull, length) => {\r\n            var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\r\n            var u8array = new Array(len);\r\n            var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\r\n            if (dontAddNull) u8array.length = numBytesWritten;\r\n            return u8array;\r\n        };\r\n        var FS_stdin_getChar = () => {\r\n            if (!FS_stdin_getChar_buffer.length) {\r\n                var result = null;\r\n                if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\r\n                    result = window.prompt(\"Input: \");\r\n                    if (result !== null) {\r\n                        result += \"\\n\";\r\n                    }\r\n                } else {\r\n                }\r\n                if (!result) {\r\n                    return null;\r\n                }\r\n                FS_stdin_getChar_buffer = intArrayFromString(result, true);\r\n            }\r\n            return FS_stdin_getChar_buffer.shift();\r\n        };\r\n        var TTY = {\r\n            ttys: [],\r\n            init() {},\r\n            shutdown() {},\r\n            register(dev, ops) {\r\n                TTY.ttys[dev] = { input: [], output: [], ops };\r\n                FS.registerDevice(dev, TTY.stream_ops);\r\n            },\r\n            stream_ops: {\r\n                open(stream) {\r\n                    var tty = TTY.ttys[stream.node.rdev];\r\n                    if (!tty) {\r\n                        throw new FS.ErrnoError(43);\r\n                    }\r\n                    stream.tty = tty;\r\n                    stream.seekable = false;\r\n                },\r\n                close(stream) {\r\n                    stream.tty.ops.fsync(stream.tty);\r\n                },\r\n                fsync(stream) {\r\n                    stream.tty.ops.fsync(stream.tty);\r\n                },\r\n                read(stream, buffer, offset, length, pos) {\r\n                    if (!stream.tty || !stream.tty.ops.get_char) {\r\n                        throw new FS.ErrnoError(60);\r\n                    }\r\n                    var bytesRead = 0;\r\n                    for (var i = 0; i < length; i++) {\r\n                        var result;\r\n                        try {\r\n                            result = stream.tty.ops.get_char(stream.tty);\r\n                        } catch (e) {\r\n                            throw new FS.ErrnoError(29);\r\n                        }\r\n                        if (result === undefined && bytesRead === 0) {\r\n                            throw new FS.ErrnoError(6);\r\n                        }\r\n                        if (result === null || result === undefined) break;\r\n                        bytesRead++;\r\n                        buffer[offset + i] = result;\r\n                    }\r\n                    if (bytesRead) {\r\n                        stream.node.atime = Date.now();\r\n                    }\r\n                    return bytesRead;\r\n                },\r\n                write(stream, buffer, offset, length, pos) {\r\n                    if (!stream.tty || !stream.tty.ops.put_char) {\r\n                        throw new FS.ErrnoError(60);\r\n                    }\r\n                    try {\r\n                        for (var i = 0; i < length; i++) {\r\n                            stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\r\n                        }\r\n                    } catch (e) {\r\n                        throw new FS.ErrnoError(29);\r\n                    }\r\n                    if (length) {\r\n                        stream.node.mtime = stream.node.ctime = Date.now();\r\n                    }\r\n                    return i;\r\n                },\r\n            },\r\n            default_tty_ops: {\r\n                get_char(tty) {\r\n                    return FS_stdin_getChar();\r\n                },\r\n                put_char(tty, val) {\r\n                    if (val === null || val === 10) {\r\n                        out(UTF8ArrayToString(tty.output));\r\n                        tty.output = [];\r\n                    } else {\r\n                        if (val != 0) tty.output.push(val);\r\n                    }\r\n                },\r\n                fsync(tty) {\r\n                    if (tty.output?.length > 0) {\r\n                        out(UTF8ArrayToString(tty.output));\r\n                        tty.output = [];\r\n                    }\r\n                },\r\n                ioctl_tcgets(tty) {\r\n                    return {\r\n                        c_iflag: 25856,\r\n                        c_oflag: 5,\r\n                        c_cflag: 191,\r\n                        c_lflag: 35387,\r\n                        c_cc: [\r\n                            3, 28, 127, 21, 4, 0, 1, 0, 17, 19, 26, 0, 18, 15, 23, 22, 0, 0, 0, 0, 0, 0, 0,\r\n                            0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n                        ],\r\n                    };\r\n                },\r\n                ioctl_tcsets(tty, optional_actions, data) {\r\n                    return 0;\r\n                },\r\n                ioctl_tiocgwinsz(tty) {\r\n                    return [24, 80];\r\n                },\r\n            },\r\n            default_tty1_ops: {\r\n                put_char(tty, val) {\r\n                    if (val === null || val === 10) {\r\n                        err(UTF8ArrayToString(tty.output));\r\n                        tty.output = [];\r\n                    } else {\r\n                        if (val != 0) tty.output.push(val);\r\n                    }\r\n                },\r\n                fsync(tty) {\r\n                    if (tty.output?.length > 0) {\r\n                        err(UTF8ArrayToString(tty.output));\r\n                        tty.output = [];\r\n                    }\r\n                },\r\n            },\r\n        };\r\n        var mmapAlloc = (size) => {\r\n            abort();\r\n        };\r\n        var MEMFS = {\r\n            ops_table: null,\r\n            mount(mount) {\r\n                return MEMFS.createNode(null, \"/\", 16895, 0);\r\n            },\r\n            createNode(parent, name, mode, dev) {\r\n                if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\r\n                    throw new FS.ErrnoError(63);\r\n                }\r\n                MEMFS.ops_table ||= {\r\n                    dir: {\r\n                        node: {\r\n                            getattr: MEMFS.node_ops.getattr,\r\n                            setattr: MEMFS.node_ops.setattr,\r\n                            lookup: MEMFS.node_ops.lookup,\r\n                            mknod: MEMFS.node_ops.mknod,\r\n                            rename: MEMFS.node_ops.rename,\r\n                            unlink: MEMFS.node_ops.unlink,\r\n                            rmdir: MEMFS.node_ops.rmdir,\r\n                            readdir: MEMFS.node_ops.readdir,\r\n                            symlink: MEMFS.node_ops.symlink,\r\n                        },\r\n                        stream: { llseek: MEMFS.stream_ops.llseek },\r\n                    },\r\n                    file: {\r\n                        node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr },\r\n                        stream: {\r\n                            llseek: MEMFS.stream_ops.llseek,\r\n                            read: MEMFS.stream_ops.read,\r\n                            write: MEMFS.stream_ops.write,\r\n                            mmap: MEMFS.stream_ops.mmap,\r\n                            msync: MEMFS.stream_ops.msync,\r\n                        },\r\n                    },\r\n                    link: {\r\n                        node: {\r\n                            getattr: MEMFS.node_ops.getattr,\r\n                            setattr: MEMFS.node_ops.setattr,\r\n                            readlink: MEMFS.node_ops.readlink,\r\n                        },\r\n                        stream: {},\r\n                    },\r\n                    chrdev: {\r\n                        node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr },\r\n                        stream: FS.chrdev_stream_ops,\r\n                    },\r\n                };\r\n                var node = FS.createNode(parent, name, mode, dev);\r\n                if (FS.isDir(node.mode)) {\r\n                    node.node_ops = MEMFS.ops_table.dir.node;\r\n                    node.stream_ops = MEMFS.ops_table.dir.stream;\r\n                    node.contents = {};\r\n                } else if (FS.isFile(node.mode)) {\r\n                    node.node_ops = MEMFS.ops_table.file.node;\r\n                    node.stream_ops = MEMFS.ops_table.file.stream;\r\n                    node.usedBytes = 0;\r\n                    node.contents = null;\r\n                } else if (FS.isLink(node.mode)) {\r\n                    node.node_ops = MEMFS.ops_table.link.node;\r\n                    node.stream_ops = MEMFS.ops_table.link.stream;\r\n                } else if (FS.isChrdev(node.mode)) {\r\n                    node.node_ops = MEMFS.ops_table.chrdev.node;\r\n                    node.stream_ops = MEMFS.ops_table.chrdev.stream;\r\n                }\r\n                node.atime = node.mtime = node.ctime = Date.now();\r\n                if (parent) {\r\n                    parent.contents[name] = node;\r\n                    parent.atime = parent.mtime = parent.ctime = node.atime;\r\n                }\r\n                return node;\r\n            },\r\n            getFileDataAsTypedArray(node) {\r\n                if (!node.contents) return new Uint8Array(0);\r\n                if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);\r\n                return new Uint8Array(node.contents);\r\n            },\r\n            expandFileStorage(node, newCapacity) {\r\n                var prevCapacity = node.contents ? node.contents.length : 0;\r\n                if (prevCapacity >= newCapacity) return;\r\n                var CAPACITY_DOUBLING_MAX = 1024 * 1024;\r\n                newCapacity = Math.max(\r\n                    newCapacity,\r\n                    (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125)) >>> 0,\r\n                );\r\n                if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\r\n                var oldContents = node.contents;\r\n                node.contents = new Uint8Array(newCapacity);\r\n                if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\r\n            },\r\n            resizeFileStorage(node, newSize) {\r\n                if (node.usedBytes == newSize) return;\r\n                if (newSize == 0) {\r\n                    node.contents = null;\r\n                    node.usedBytes = 0;\r\n                } else {\r\n                    var oldContents = node.contents;\r\n                    node.contents = new Uint8Array(newSize);\r\n                    if (oldContents) {\r\n                        node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\r\n                    }\r\n                    node.usedBytes = newSize;\r\n                }\r\n            },\r\n            node_ops: {\r\n                getattr(node) {\r\n                    var attr = {};\r\n                    attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\r\n                    attr.ino = node.id;\r\n                    attr.mode = node.mode;\r\n                    attr.nlink = 1;\r\n                    attr.uid = 0;\r\n                    attr.gid = 0;\r\n                    attr.rdev = node.rdev;\r\n                    if (FS.isDir(node.mode)) {\r\n                        attr.size = 4096;\r\n                    } else if (FS.isFile(node.mode)) {\r\n                        attr.size = node.usedBytes;\r\n                    } else if (FS.isLink(node.mode)) {\r\n                        attr.size = node.link.length;\r\n                    } else {\r\n                        attr.size = 0;\r\n                    }\r\n                    attr.atime = new Date(node.atime);\r\n                    attr.mtime = new Date(node.mtime);\r\n                    attr.ctime = new Date(node.ctime);\r\n                    attr.blksize = 4096;\r\n                    attr.blocks = Math.ceil(attr.size / attr.blksize);\r\n                    return attr;\r\n                },\r\n                setattr(node, attr) {\r\n                    for (const key of [\"mode\", \"atime\", \"mtime\", \"ctime\"]) {\r\n                        if (attr[key] != null) {\r\n                            node[key] = attr[key];\r\n                        }\r\n                    }\r\n                    if (attr.size !== undefined) {\r\n                        MEMFS.resizeFileStorage(node, attr.size);\r\n                    }\r\n                },\r\n                lookup(parent, name) {\r\n                    throw MEMFS.doesNotExistError;\r\n                },\r\n                mknod(parent, name, mode, dev) {\r\n                    return MEMFS.createNode(parent, name, mode, dev);\r\n                },\r\n                rename(old_node, new_dir, new_name) {\r\n                    var new_node;\r\n                    try {\r\n                        new_node = FS.lookupNode(new_dir, new_name);\r\n                    } catch (e) {}\r\n                    if (new_node) {\r\n                        if (FS.isDir(old_node.mode)) {\r\n                            for (var i in new_node.contents) {\r\n                                throw new FS.ErrnoError(55);\r\n                            }\r\n                        }\r\n                        FS.hashRemoveNode(new_node);\r\n                    }\r\n                    delete old_node.parent.contents[old_node.name];\r\n                    new_dir.contents[new_name] = old_node;\r\n                    old_node.name = new_name;\r\n                    new_dir.ctime =\r\n                        new_dir.mtime =\r\n                        old_node.parent.ctime =\r\n                        old_node.parent.mtime =\r\n                            Date.now();\r\n                },\r\n                unlink(parent, name) {\r\n                    delete parent.contents[name];\r\n                    parent.ctime = parent.mtime = Date.now();\r\n                },\r\n                rmdir(parent, name) {\r\n                    var node = FS.lookupNode(parent, name);\r\n                    for (var i in node.contents) {\r\n                        throw new FS.ErrnoError(55);\r\n                    }\r\n                    delete parent.contents[name];\r\n                    parent.ctime = parent.mtime = Date.now();\r\n                },\r\n                readdir(node) {\r\n                    return [\".\", \"..\", ...Object.keys(node.contents)];\r\n                },\r\n                symlink(parent, newname, oldpath) {\r\n                    var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\r\n                    node.link = oldpath;\r\n                    return node;\r\n                },\r\n                readlink(node) {\r\n                    if (!FS.isLink(node.mode)) {\r\n                        throw new FS.ErrnoError(28);\r\n                    }\r\n                    return node.link;\r\n                },\r\n            },\r\n            stream_ops: {\r\n                read(stream, buffer, offset, length, position) {\r\n                    var contents = stream.node.contents;\r\n                    if (position >= stream.node.usedBytes) return 0;\r\n                    var size = Math.min(stream.node.usedBytes - position, length);\r\n                    if (size > 8 && contents.subarray) {\r\n                        buffer.set(contents.subarray(position, position + size), offset);\r\n                    } else {\r\n                        for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\r\n                    }\r\n                    return size;\r\n                },\r\n                write(stream, buffer, offset, length, position, canOwn) {\r\n                    if (buffer.buffer === HEAP8.buffer) {\r\n                        canOwn = false;\r\n                    }\r\n                    if (!length) return 0;\r\n                    var node = stream.node;\r\n                    node.mtime = node.ctime = Date.now();\r\n                    if (buffer.subarray && (!node.contents || node.contents.subarray)) {\r\n                        if (canOwn) {\r\n                            node.contents = buffer.subarray(offset, offset + length);\r\n                            node.usedBytes = length;\r\n                            return length;\r\n                        } else if (node.usedBytes === 0 && position === 0) {\r\n                            node.contents = buffer.slice(offset, offset + length);\r\n                            node.usedBytes = length;\r\n                            return length;\r\n                        } else if (position + length <= node.usedBytes) {\r\n                            node.contents.set(buffer.subarray(offset, offset + length), position);\r\n                            return length;\r\n                        }\r\n                    }\r\n                    MEMFS.expandFileStorage(node, position + length);\r\n                    if (node.contents.subarray && buffer.subarray) {\r\n                        node.contents.set(buffer.subarray(offset, offset + length), position);\r\n                    } else {\r\n                        for (var i = 0; i < length; i++) {\r\n                            node.contents[position + i] = buffer[offset + i];\r\n                        }\r\n                    }\r\n                    node.usedBytes = Math.max(node.usedBytes, position + length);\r\n                    return length;\r\n                },\r\n                llseek(stream, offset, whence) {\r\n                    var position = offset;\r\n                    if (whence === 1) {\r\n                        position += stream.position;\r\n                    } else if (whence === 2) {\r\n                        if (FS.isFile(stream.node.mode)) {\r\n                            position += stream.node.usedBytes;\r\n                        }\r\n                    }\r\n                    if (position < 0) {\r\n                        throw new FS.ErrnoError(28);\r\n                    }\r\n                    return position;\r\n                },\r\n                mmap(stream, length, position, prot, flags) {\r\n                    if (!FS.isFile(stream.node.mode)) {\r\n                        throw new FS.ErrnoError(43);\r\n                    }\r\n                    var ptr;\r\n                    var allocated;\r\n                    var contents = stream.node.contents;\r\n                    if (!(flags & 2) && contents && contents.buffer === HEAP8.buffer) {\r\n                        allocated = false;\r\n                        ptr = contents.byteOffset;\r\n                    } else {\r\n                        allocated = true;\r\n                        ptr = mmapAlloc(length);\r\n                        if (!ptr) {\r\n                            throw new FS.ErrnoError(48);\r\n                        }\r\n                        if (contents) {\r\n                            if (position > 0 || position + length < contents.length) {\r\n                                if (contents.subarray) {\r\n                                    contents = contents.subarray(position, position + length);\r\n                                } else {\r\n                                    contents = Array.prototype.slice.call(\r\n                                        contents,\r\n                                        position,\r\n                                        position + length,\r\n                                    );\r\n                                }\r\n                            }\r\n                            HEAP8.set(contents, ptr >>> 0);\r\n                        }\r\n                    }\r\n                    return { ptr, allocated };\r\n                },\r\n                msync(stream, buffer, offset, length, mmapFlags) {\r\n                    MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\r\n                    return 0;\r\n                },\r\n            },\r\n        };\r\n        var asyncLoad = async (url) => {\r\n            var arrayBuffer = await readAsync(url);\r\n            return new Uint8Array(arrayBuffer);\r\n        };\r\n        var FS_createDataFile = (...args) => FS.createDataFile(...args);\r\n        var preloadPlugins = [];\r\n        var FS_handledByPreloadPlugin = (byteArray, fullname, finish, onerror) => {\r\n            if (typeof Browser != \"undefined\") Browser.init();\r\n            var handled = false;\r\n            preloadPlugins.forEach((plugin) => {\r\n                if (handled) return;\r\n                if (plugin[\"canHandle\"](fullname)) {\r\n                    plugin[\"handle\"](byteArray, fullname, finish, onerror);\r\n                    handled = true;\r\n                }\r\n            });\r\n            return handled;\r\n        };\r\n        var FS_createPreloadedFile = (\r\n            parent,\r\n            name,\r\n            url,\r\n            canRead,\r\n            canWrite,\r\n            onload,\r\n            onerror,\r\n            dontCreateFile,\r\n            canOwn,\r\n            preFinish,\r\n        ) => {\r\n            var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\r\n            var dep = getUniqueRunDependency(`cp ${fullname}`);\r\n            function processData(byteArray) {\r\n                function finish(byteArray) {\r\n                    preFinish?.();\r\n                    if (!dontCreateFile) {\r\n                        FS_createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\r\n                    }\r\n                    onload?.();\r\n                    removeRunDependency(dep);\r\n                }\r\n                if (\r\n                    FS_handledByPreloadPlugin(byteArray, fullname, finish, () => {\r\n                        onerror?.();\r\n                        removeRunDependency(dep);\r\n                    })\r\n                ) {\r\n                    return;\r\n                }\r\n                finish(byteArray);\r\n            }\r\n            addRunDependency(dep);\r\n            if (typeof url == \"string\") {\r\n                asyncLoad(url).then(processData, onerror);\r\n            } else {\r\n                processData(url);\r\n            }\r\n        };\r\n        var FS_modeStringToFlags = (str) => {\r\n            var flagModes = {\r\n                r: 0,\r\n                \"r+\": 2,\r\n                w: 512 | 64 | 1,\r\n                \"w+\": 512 | 64 | 2,\r\n                a: 1024 | 64 | 1,\r\n                \"a+\": 1024 | 64 | 2,\r\n            };\r\n            var flags = flagModes[str];\r\n            if (typeof flags == \"undefined\") {\r\n                throw new Error(`Unknown file open mode: ${str}`);\r\n            }\r\n            return flags;\r\n        };\r\n        var FS_getMode = (canRead, canWrite) => {\r\n            var mode = 0;\r\n            if (canRead) mode |= 292 | 73;\r\n            if (canWrite) mode |= 146;\r\n            return mode;\r\n        };\r\n        var FS = {\r\n            root: null,\r\n            mounts: [],\r\n            devices: {},\r\n            streams: [],\r\n            nextInode: 1,\r\n            nameTable: null,\r\n            currentPath: \"/\",\r\n            initialized: false,\r\n            ignorePermissions: true,\r\n            filesystems: null,\r\n            syncFSRequests: 0,\r\n            readFiles: {},\r\n            ErrnoError: class {\r\n                name = \"ErrnoError\";\r\n                constructor(errno) {\r\n                    this.errno = errno;\r\n                }\r\n            },\r\n            FSStream: class {\r\n                shared = {};\r\n                get object() {\r\n                    return this.node;\r\n                }\r\n                set object(val) {\r\n                    this.node = val;\r\n                }\r\n                get isRead() {\r\n                    return (this.flags & 2097155) !== 1;\r\n                }\r\n                get isWrite() {\r\n                    return (this.flags & 2097155) !== 0;\r\n                }\r\n                get isAppend() {\r\n                    return this.flags & 1024;\r\n                }\r\n                get flags() {\r\n                    return this.shared.flags;\r\n                }\r\n                set flags(val) {\r\n                    this.shared.flags = val;\r\n                }\r\n                get position() {\r\n                    return this.shared.position;\r\n                }\r\n                set position(val) {\r\n                    this.shared.position = val;\r\n                }\r\n            },\r\n            FSNode: class {\r\n                node_ops = {};\r\n                stream_ops = {};\r\n                readMode = 292 | 73;\r\n                writeMode = 146;\r\n                mounted = null;\r\n                constructor(parent, name, mode, rdev) {\r\n                    if (!parent) {\r\n                        parent = this;\r\n                    }\r\n                    this.parent = parent;\r\n                    this.mount = parent.mount;\r\n                    this.id = FS.nextInode++;\r\n                    this.name = name;\r\n                    this.mode = mode;\r\n                    this.rdev = rdev;\r\n                    this.atime = this.mtime = this.ctime = Date.now();\r\n                }\r\n                get read() {\r\n                    return (this.mode & this.readMode) === this.readMode;\r\n                }\r\n                set read(val) {\r\n                    val ? (this.mode |= this.readMode) : (this.mode &= ~this.readMode);\r\n                }\r\n                get write() {\r\n                    return (this.mode & this.writeMode) === this.writeMode;\r\n                }\r\n                set write(val) {\r\n                    val ? (this.mode |= this.writeMode) : (this.mode &= ~this.writeMode);\r\n                }\r\n                get isFolder() {\r\n                    return FS.isDir(this.mode);\r\n                }\r\n                get isDevice() {\r\n                    return FS.isChrdev(this.mode);\r\n                }\r\n            },\r\n            lookupPath(path, opts = {}) {\r\n                if (!path) {\r\n                    throw new FS.ErrnoError(44);\r\n                }\r\n                opts.follow_mount ??= true;\r\n                if (!PATH.isAbs(path)) {\r\n                    path = FS.cwd() + \"/\" + path;\r\n                }\r\n                linkloop: for (var nlinks = 0; nlinks < 40; nlinks++) {\r\n                    var parts = path.split(\"/\").filter((p) => !!p);\r\n                    var current = FS.root;\r\n                    var current_path = \"/\";\r\n                    for (var i = 0; i < parts.length; i++) {\r\n                        var islast = i === parts.length - 1;\r\n                        if (islast && opts.parent) {\r\n                            break;\r\n                        }\r\n                        if (parts[i] === \".\") {\r\n                            continue;\r\n                        }\r\n                        if (parts[i] === \"..\") {\r\n                            current_path = PATH.dirname(current_path);\r\n                            if (FS.isRoot(current)) {\r\n                                path = current_path + \"/\" + parts.slice(i + 1).join(\"/\");\r\n                                continue linkloop;\r\n                            } else {\r\n                                current = current.parent;\r\n                            }\r\n                            continue;\r\n                        }\r\n                        current_path = PATH.join2(current_path, parts[i]);\r\n                        try {\r\n                            current = FS.lookupNode(current, parts[i]);\r\n                        } catch (e) {\r\n                            if (e?.errno === 44 && islast && opts.noent_okay) {\r\n                                return { path: current_path };\r\n                            }\r\n                            throw e;\r\n                        }\r\n                        if (FS.isMountpoint(current) && (!islast || opts.follow_mount)) {\r\n                            current = current.mounted.root;\r\n                        }\r\n                        if (FS.isLink(current.mode) && (!islast || opts.follow)) {\r\n                            if (!current.node_ops.readlink) {\r\n                                throw new FS.ErrnoError(52);\r\n                            }\r\n                            var link = current.node_ops.readlink(current);\r\n                            if (!PATH.isAbs(link)) {\r\n                                link = PATH.dirname(current_path) + \"/\" + link;\r\n                            }\r\n                            path = link + \"/\" + parts.slice(i + 1).join(\"/\");\r\n                            continue linkloop;\r\n                        }\r\n                    }\r\n                    return { path: current_path, node: current };\r\n                }\r\n                throw new FS.ErrnoError(32);\r\n            },\r\n            getPath(node) {\r\n                var path;\r\n                while (true) {\r\n                    if (FS.isRoot(node)) {\r\n                        var mount = node.mount.mountpoint;\r\n                        if (!path) return mount;\r\n                        return mount[mount.length - 1] !== \"/\" ? `${mount}/${path}` : mount + path;\r\n                    }\r\n                    path = path ? `${node.name}/${path}` : node.name;\r\n                    node = node.parent;\r\n                }\r\n            },\r\n            hashName(parentid, name) {\r\n                var hash = 0;\r\n                for (var i = 0; i < name.length; i++) {\r\n                    hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\r\n                }\r\n                return ((parentid + hash) >>> 0) % FS.nameTable.length;\r\n            },\r\n            hashAddNode(node) {\r\n                var hash = FS.hashName(node.parent.id, node.name);\r\n                node.name_next = FS.nameTable[hash];\r\n                FS.nameTable[hash] = node;\r\n            },\r\n            hashRemoveNode(node) {\r\n                var hash = FS.hashName(node.parent.id, node.name);\r\n                if (FS.nameTable[hash] === node) {\r\n                    FS.nameTable[hash] = node.name_next;\r\n                } else {\r\n                    var current = FS.nameTable[hash];\r\n                    while (current) {\r\n                        if (current.name_next === node) {\r\n                            current.name_next = node.name_next;\r\n                            break;\r\n                        }\r\n                        current = current.name_next;\r\n                    }\r\n                }\r\n            },\r\n            lookupNode(parent, name) {\r\n                var errCode = FS.mayLookup(parent);\r\n                if (errCode) {\r\n                    throw new FS.ErrnoError(errCode);\r\n                }\r\n                var hash = FS.hashName(parent.id, name);\r\n                for (var node = FS.nameTable[hash]; node; node = node.name_next) {\r\n                    var nodeName = node.name;\r\n                    if (node.parent.id === parent.id && nodeName === name) {\r\n                        return node;\r\n                    }\r\n                }\r\n                return FS.lookup(parent, name);\r\n            },\r\n            createNode(parent, name, mode, rdev) {\r\n                var node = new FS.FSNode(parent, name, mode, rdev);\r\n                FS.hashAddNode(node);\r\n                return node;\r\n            },\r\n            destroyNode(node) {\r\n                FS.hashRemoveNode(node);\r\n            },\r\n            isRoot(node) {\r\n                return node === node.parent;\r\n            },\r\n            isMountpoint(node) {\r\n                return !!node.mounted;\r\n            },\r\n            isFile(mode) {\r\n                return (mode & 61440) === 32768;\r\n            },\r\n            isDir(mode) {\r\n                return (mode & 61440) === 16384;\r\n            },\r\n            isLink(mode) {\r\n                return (mode & 61440) === 40960;\r\n            },\r\n            isChrdev(mode) {\r\n                return (mode & 61440) === 8192;\r\n            },\r\n            isBlkdev(mode) {\r\n                return (mode & 61440) === 24576;\r\n            },\r\n            isFIFO(mode) {\r\n                return (mode & 61440) === 4096;\r\n            },\r\n            isSocket(mode) {\r\n                return (mode & 49152) === 49152;\r\n            },\r\n            flagsToPermissionString(flag) {\r\n                var perms = [\"r\", \"w\", \"rw\"][flag & 3];\r\n                if (flag & 512) {\r\n                    perms += \"w\";\r\n                }\r\n                return perms;\r\n            },\r\n            nodePermissions(node, perms) {\r\n                if (FS.ignorePermissions) {\r\n                    return 0;\r\n                }\r\n                if (perms.includes(\"r\") && !(node.mode & 292)) {\r\n                    return 2;\r\n                } else if (perms.includes(\"w\") && !(node.mode & 146)) {\r\n                    return 2;\r\n                } else if (perms.includes(\"x\") && !(node.mode & 73)) {\r\n                    return 2;\r\n                }\r\n                return 0;\r\n            },\r\n            mayLookup(dir) {\r\n                if (!FS.isDir(dir.mode)) return 54;\r\n                var errCode = FS.nodePermissions(dir, \"x\");\r\n                if (errCode) return errCode;\r\n                if (!dir.node_ops.lookup) return 2;\r\n                return 0;\r\n            },\r\n            mayCreate(dir, name) {\r\n                if (!FS.isDir(dir.mode)) {\r\n                    return 54;\r\n                }\r\n                try {\r\n                    var node = FS.lookupNode(dir, name);\r\n                    return 20;\r\n                } catch (e) {}\r\n                return FS.nodePermissions(dir, \"wx\");\r\n            },\r\n            mayDelete(dir, name, isdir) {\r\n                var node;\r\n                try {\r\n                    node = FS.lookupNode(dir, name);\r\n                } catch (e) {\r\n                    return e.errno;\r\n                }\r\n                var errCode = FS.nodePermissions(dir, \"wx\");\r\n                if (errCode) {\r\n                    return errCode;\r\n                }\r\n                if (isdir) {\r\n                    if (!FS.isDir(node.mode)) {\r\n                        return 54;\r\n                    }\r\n                    if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\r\n                        return 10;\r\n                    }\r\n                } else {\r\n                    if (FS.isDir(node.mode)) {\r\n                        return 31;\r\n                    }\r\n                }\r\n                return 0;\r\n            },\r\n            mayOpen(node, flags) {\r\n                if (!node) {\r\n                    return 44;\r\n                }\r\n                if (FS.isLink(node.mode)) {\r\n                    return 32;\r\n                } else if (FS.isDir(node.mode)) {\r\n                    if (FS.flagsToPermissionString(flags) !== \"r\" || flags & (512 | 64)) {\r\n                        return 31;\r\n                    }\r\n                }\r\n                return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\r\n            },\r\n            checkOpExists(op, err) {\r\n                if (!op) {\r\n                    throw new FS.ErrnoError(err);\r\n                }\r\n                return op;\r\n            },\r\n            MAX_OPEN_FDS: 4096,\r\n            nextfd() {\r\n                for (var fd = 0; fd <= FS.MAX_OPEN_FDS; fd++) {\r\n                    if (!FS.streams[fd]) {\r\n                        return fd;\r\n                    }\r\n                }\r\n                throw new FS.ErrnoError(33);\r\n            },\r\n            getStreamChecked(fd) {\r\n                var stream = FS.getStream(fd);\r\n                if (!stream) {\r\n                    throw new FS.ErrnoError(8);\r\n                }\r\n                return stream;\r\n            },\r\n            getStream: (fd) => FS.streams[fd],\r\n            createStream(stream, fd = -1) {\r\n                stream = Object.assign(new FS.FSStream(), stream);\r\n                if (fd == -1) {\r\n                    fd = FS.nextfd();\r\n                }\r\n                stream.fd = fd;\r\n                FS.streams[fd] = stream;\r\n                return stream;\r\n            },\r\n            closeStream(fd) {\r\n                FS.streams[fd] = null;\r\n            },\r\n            dupStream(origStream, fd = -1) {\r\n                var stream = FS.createStream(origStream, fd);\r\n                stream.stream_ops?.dup?.(stream);\r\n                return stream;\r\n            },\r\n            doSetAttr(stream, node, attr) {\r\n                var setattr = stream?.stream_ops.setattr;\r\n                var arg = setattr ? stream : node;\r\n                setattr ??= node.node_ops.setattr;\r\n                FS.checkOpExists(setattr, 63);\r\n                setattr(arg, attr);\r\n            },\r\n            chrdev_stream_ops: {\r\n                open(stream) {\r\n                    var device = FS.getDevice(stream.node.rdev);\r\n                    stream.stream_ops = device.stream_ops;\r\n                    stream.stream_ops.open?.(stream);\r\n                },\r\n                llseek() {\r\n                    throw new FS.ErrnoError(70);\r\n                },\r\n            },\r\n            major: (dev) => dev >> 8,\r\n            minor: (dev) => dev & 255,\r\n            makedev: (ma, mi) => (ma << 8) | mi,\r\n            registerDevice(dev, ops) {\r\n                FS.devices[dev] = { stream_ops: ops };\r\n            },\r\n            getDevice: (dev) => FS.devices[dev],\r\n            getMounts(mount) {\r\n                var mounts = [];\r\n                var check = [mount];\r\n                while (check.length) {\r\n                    var m = check.pop();\r\n                    mounts.push(m);\r\n                    check.push(...m.mounts);\r\n                }\r\n                return mounts;\r\n            },\r\n            syncfs(populate, callback) {\r\n                if (typeof populate == \"function\") {\r\n                    callback = populate;\r\n                    populate = false;\r\n                }\r\n                FS.syncFSRequests++;\r\n                if (FS.syncFSRequests > 1) {\r\n                    err(\r\n                        `warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`,\r\n                    );\r\n                }\r\n                var mounts = FS.getMounts(FS.root.mount);\r\n                var completed = 0;\r\n                function doCallback(errCode) {\r\n                    FS.syncFSRequests--;\r\n                    return callback(errCode);\r\n                }\r\n                function done(errCode) {\r\n                    if (errCode) {\r\n                        if (!done.errored) {\r\n                            done.errored = true;\r\n                            return doCallback(errCode);\r\n                        }\r\n                        return;\r\n                    }\r\n                    if (++completed >= mounts.length) {\r\n                        doCallback(null);\r\n                    }\r\n                }\r\n                mounts.forEach((mount) => {\r\n                    if (!mount.type.syncfs) {\r\n                        return done(null);\r\n                    }\r\n                    mount.type.syncfs(mount, populate, done);\r\n                });\r\n            },\r\n            mount(type, opts, mountpoint) {\r\n                var root = mountpoint === \"/\";\r\n                var pseudo = !mountpoint;\r\n                var node;\r\n                if (root && FS.root) {\r\n                    throw new FS.ErrnoError(10);\r\n                } else if (!root && !pseudo) {\r\n                    var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\r\n                    mountpoint = lookup.path;\r\n                    node = lookup.node;\r\n                    if (FS.isMountpoint(node)) {\r\n                        throw new FS.ErrnoError(10);\r\n                    }\r\n                    if (!FS.isDir(node.mode)) {\r\n                        throw new FS.ErrnoError(54);\r\n                    }\r\n                }\r\n                var mount = { type, opts, mountpoint, mounts: [] };\r\n                var mountRoot = type.mount(mount);\r\n                mountRoot.mount = mount;\r\n                mount.root = mountRoot;\r\n                if (root) {\r\n                    FS.root = mountRoot;\r\n                } else if (node) {\r\n                    node.mounted = mount;\r\n                    if (node.mount) {\r\n                        node.mount.mounts.push(mount);\r\n                    }\r\n                }\r\n                return mountRoot;\r\n            },\r\n            unmount(mountpoint) {\r\n                var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\r\n                if (!FS.isMountpoint(lookup.node)) {\r\n                    throw new FS.ErrnoError(28);\r\n                }\r\n                var node = lookup.node;\r\n                var mount = node.mounted;\r\n                var mounts = FS.getMounts(mount);\r\n                Object.keys(FS.nameTable).forEach((hash) => {\r\n                    var current = FS.nameTable[hash];\r\n                    while (current) {\r\n                        var next = current.name_next;\r\n                        if (mounts.includes(current.mount)) {\r\n                            FS.destroyNode(current);\r\n                        }\r\n                        current = next;\r\n                    }\r\n                });\r\n                node.mounted = null;\r\n                var idx = node.mount.mounts.indexOf(mount);\r\n                node.mount.mounts.splice(idx, 1);\r\n            },\r\n            lookup(parent, name) {\r\n                return parent.node_ops.lookup(parent, name);\r\n            },\r\n            mknod(path, mode, dev) {\r\n                var lookup = FS.lookupPath(path, { parent: true });\r\n                var parent = lookup.node;\r\n                var name = PATH.basename(path);\r\n                if (!name) {\r\n                    throw new FS.ErrnoError(28);\r\n                }\r\n                if (name === \".\" || name === \"..\") {\r\n                    throw new FS.ErrnoError(20);\r\n                }\r\n                var errCode = FS.mayCreate(parent, name);\r\n                if (errCode) {\r\n                    throw new FS.ErrnoError(errCode);\r\n                }\r\n                if (!parent.node_ops.mknod) {\r\n                    throw new FS.ErrnoError(63);\r\n                }\r\n                return parent.node_ops.mknod(parent, name, mode, dev);\r\n            },\r\n            statfs(path) {\r\n                return FS.statfsNode(FS.lookupPath(path, { follow: true }).node);\r\n            },\r\n            statfsStream(stream) {\r\n                return FS.statfsNode(stream.node);\r\n            },\r\n            statfsNode(node) {\r\n                var rtn = {\r\n                    bsize: 4096,\r\n                    frsize: 4096,\r\n                    blocks: 1e6,\r\n                    bfree: 5e5,\r\n                    bavail: 5e5,\r\n                    files: FS.nextInode,\r\n                    ffree: FS.nextInode - 1,\r\n                    fsid: 42,\r\n                    flags: 2,\r\n                    namelen: 255,\r\n                };\r\n                if (node.node_ops.statfs) {\r\n                    Object.assign(rtn, node.node_ops.statfs(node.mount.opts.root));\r\n                }\r\n                return rtn;\r\n            },\r\n            create(path, mode = 438) {\r\n                mode &= 4095;\r\n                mode |= 32768;\r\n                return FS.mknod(path, mode, 0);\r\n            },\r\n            mkdir(path, mode = 511) {\r\n                mode &= 511 | 512;\r\n                mode |= 16384;\r\n                return FS.mknod(path, mode, 0);\r\n            },\r\n            mkdirTree(path, mode) {\r\n                var dirs = path.split(\"/\");\r\n                var d = \"\";\r\n                for (var dir of dirs) {\r\n                    if (!dir) continue;\r\n                    if (d || PATH.isAbs(path)) d += \"/\";\r\n                    d += dir;\r\n                    try {\r\n                        FS.mkdir(d, mode);\r\n                    } catch (e) {\r\n                        if (e.errno != 20) throw e;\r\n                    }\r\n                }\r\n            },\r\n            mkdev(path, mode, dev) {\r\n                if (typeof dev == \"undefined\") {\r\n                    dev = mode;\r\n                    mode = 438;\r\n                }\r\n                mode |= 8192;\r\n                return FS.mknod(path, mode, dev);\r\n            },\r\n            symlink(oldpath, newpath) {\r\n                if (!PATH_FS.resolve(oldpath)) {\r\n                    throw new FS.ErrnoError(44);\r\n                }\r\n                var lookup = FS.lookupPath(newpath, { parent: true });\r\n                var parent = lookup.node;\r\n                if (!parent) {\r\n                    throw new FS.ErrnoError(44);\r\n                }\r\n                var newname = PATH.basename(newpath);\r\n                var errCode = FS.mayCreate(parent, newname);\r\n                if (errCode) {\r\n                    throw new FS.ErrnoError(errCode);\r\n                }\r\n                if (!parent.node_ops.symlink) {\r\n                    throw new FS.ErrnoError(63);\r\n                }\r\n                return parent.node_ops.symlink(parent, newname, oldpath);\r\n            },\r\n            rename(old_path, new_path) {\r\n                var old_dirname = PATH.dirname(old_path);\r\n                var new_dirname = PATH.dirname(new_path);\r\n                var old_name = PATH.basename(old_path);\r\n                var new_name = PATH.basename(new_path);\r\n                var lookup, old_dir, new_dir;\r\n                lookup = FS.lookupPath(old_path, { parent: true });\r\n                old_dir = lookup.node;\r\n                lookup = FS.lookupPath(new_path, { parent: true });\r\n                new_dir = lookup.node;\r\n                if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\r\n                if (old_dir.mount !== new_dir.mount) {\r\n                    throw new FS.ErrnoError(75);\r\n                }\r\n                var old_node = FS.lookupNode(old_dir, old_name);\r\n                var relative = PATH_FS.relative(old_path, new_dirname);\r\n                if (relative.charAt(0) !== \".\") {\r\n                    throw new FS.ErrnoError(28);\r\n                }\r\n                relative = PATH_FS.relative(new_path, old_dirname);\r\n                if (relative.charAt(0) !== \".\") {\r\n                    throw new FS.ErrnoError(55);\r\n                }\r\n                var new_node;\r\n                try {\r\n                    new_node = FS.lookupNode(new_dir, new_name);\r\n                } catch (e) {}\r\n                if (old_node === new_node) {\r\n                    return;\r\n                }\r\n                var isdir = FS.isDir(old_node.mode);\r\n                var errCode = FS.mayDelete(old_dir, old_name, isdir);\r\n                if (errCode) {\r\n                    throw new FS.ErrnoError(errCode);\r\n                }\r\n                errCode = new_node\r\n                    ? FS.mayDelete(new_dir, new_name, isdir)\r\n                    : FS.mayCreate(new_dir, new_name);\r\n                if (errCode) {\r\n                    throw new FS.ErrnoError(errCode);\r\n                }\r\n                if (!old_dir.node_ops.rename) {\r\n                    throw new FS.ErrnoError(63);\r\n                }\r\n                if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {\r\n                    throw new FS.ErrnoError(10);\r\n                }\r\n                if (new_dir !== old_dir) {\r\n                    errCode = FS.nodePermissions(old_dir, \"w\");\r\n                    if (errCode) {\r\n                        throw new FS.ErrnoError(errCode);\r\n                    }\r\n                }\r\n                FS.hashRemoveNode(old_node);\r\n                try {\r\n                    old_dir.node_ops.rename(old_node, new_dir, new_name);\r\n                    old_node.parent = new_dir;\r\n                } catch (e) {\r\n                    throw e;\r\n                } finally {\r\n                    FS.hashAddNode(old_node);\r\n                }\r\n            },\r\n            rmdir(path) {\r\n                var lookup = FS.lookupPath(path, { parent: true });\r\n                var parent = lookup.node;\r\n                var name = PATH.basename(path);\r\n                var node = FS.lookupNode(parent, name);\r\n                var errCode = FS.mayDelete(parent, name, true);\r\n                if (errCode) {\r\n                    throw new FS.ErrnoError(errCode);\r\n                }\r\n                if (!parent.node_ops.rmdir) {\r\n                    throw new FS.ErrnoError(63);\r\n                }\r\n                if (FS.isMountpoint(node)) {\r\n                    throw new FS.ErrnoError(10);\r\n                }\r\n                parent.node_ops.rmdir(parent, name);\r\n                FS.destroyNode(node);\r\n            },\r\n            readdir(path) {\r\n                var lookup = FS.lookupPath(path, { follow: true });\r\n                var node = lookup.node;\r\n                var readdir = FS.checkOpExists(node.node_ops.readdir, 54);\r\n                return readdir(node);\r\n            },\r\n            unlink(path) {\r\n                var lookup = FS.lookupPath(path, { parent: true });\r\n                var parent = lookup.node;\r\n                if (!parent) {\r\n                    throw new FS.ErrnoError(44);\r\n                }\r\n                var name = PATH.basename(path);\r\n                var node = FS.lookupNode(parent, name);\r\n                var errCode = FS.mayDelete(parent, name, false);\r\n                if (errCode) {\r\n                    throw new FS.ErrnoError(errCode);\r\n                }\r\n                if (!parent.node_ops.unlink) {\r\n                    throw new FS.ErrnoError(63);\r\n                }\r\n                if (FS.isMountpoint(node)) {\r\n                    throw new FS.ErrnoError(10);\r\n                }\r\n                parent.node_ops.unlink(parent, name);\r\n                FS.destroyNode(node);\r\n            },\r\n            readlink(path) {\r\n                var lookup = FS.lookupPath(path);\r\n                var link = lookup.node;\r\n                if (!link) {\r\n                    throw new FS.ErrnoError(44);\r\n                }\r\n                if (!link.node_ops.readlink) {\r\n                    throw new FS.ErrnoError(28);\r\n                }\r\n                return link.node_ops.readlink(link);\r\n            },\r\n            stat(path, dontFollow) {\r\n                var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n                var node = lookup.node;\r\n                var getattr = FS.checkOpExists(node.node_ops.getattr, 63);\r\n                return getattr(node);\r\n            },\r\n            fstat(fd) {\r\n                var stream = FS.getStreamChecked(fd);\r\n                var node = stream.node;\r\n                var getattr = stream.stream_ops.getattr;\r\n                var arg = getattr ? stream : node;\r\n                getattr ??= node.node_ops.getattr;\r\n                FS.checkOpExists(getattr, 63);\r\n                return getattr(arg);\r\n            },\r\n            lstat(path) {\r\n                return FS.stat(path, true);\r\n            },\r\n            doChmod(stream, node, mode, dontFollow) {\r\n                FS.doSetAttr(stream, node, {\r\n                    mode: (mode & 4095) | (node.mode & ~4095),\r\n                    ctime: Date.now(),\r\n                    dontFollow,\r\n                });\r\n            },\r\n            chmod(path, mode, dontFollow) {\r\n                var node;\r\n                if (typeof path == \"string\") {\r\n                    var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n                    node = lookup.node;\r\n                } else {\r\n                    node = path;\r\n                }\r\n                FS.doChmod(null, node, mode, dontFollow);\r\n            },\r\n            lchmod(path, mode) {\r\n                FS.chmod(path, mode, true);\r\n            },\r\n            fchmod(fd, mode) {\r\n                var stream = FS.getStreamChecked(fd);\r\n                FS.doChmod(stream, stream.node, mode, false);\r\n            },\r\n            doChown(stream, node, dontFollow) {\r\n                FS.doSetAttr(stream, node, { timestamp: Date.now(), dontFollow });\r\n            },\r\n            chown(path, uid, gid, dontFollow) {\r\n                var node;\r\n                if (typeof path == \"string\") {\r\n                    var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n                    node = lookup.node;\r\n                } else {\r\n                    node = path;\r\n                }\r\n                FS.doChown(null, node, dontFollow);\r\n            },\r\n            lchown(path, uid, gid) {\r\n                FS.chown(path, uid, gid, true);\r\n            },\r\n            fchown(fd, uid, gid) {\r\n                var stream = FS.getStreamChecked(fd);\r\n                FS.doChown(stream, stream.node, false);\r\n            },\r\n            doTruncate(stream, node, len) {\r\n                if (FS.isDir(node.mode)) {\r\n                    throw new FS.ErrnoError(31);\r\n                }\r\n                if (!FS.isFile(node.mode)) {\r\n                    throw new FS.ErrnoError(28);\r\n                }\r\n                var errCode = FS.nodePermissions(node, \"w\");\r\n                if (errCode) {\r\n                    throw new FS.ErrnoError(errCode);\r\n                }\r\n                FS.doSetAttr(stream, node, { size: len, timestamp: Date.now() });\r\n            },\r\n            truncate(path, len) {\r\n                if (len < 0) {\r\n                    throw new FS.ErrnoError(28);\r\n                }\r\n                var node;\r\n                if (typeof path == \"string\") {\r\n                    var lookup = FS.lookupPath(path, { follow: true });\r\n                    node = lookup.node;\r\n                } else {\r\n                    node = path;\r\n                }\r\n                FS.doTruncate(null, node, len);\r\n            },\r\n            ftruncate(fd, len) {\r\n                var stream = FS.getStreamChecked(fd);\r\n                if (len < 0 || (stream.flags & 2097155) === 0) {\r\n                    throw new FS.ErrnoError(28);\r\n                }\r\n                FS.doTruncate(stream, stream.node, len);\r\n            },\r\n            utime(path, atime, mtime) {\r\n                var lookup = FS.lookupPath(path, { follow: true });\r\n                var node = lookup.node;\r\n                var setattr = FS.checkOpExists(node.node_ops.setattr, 63);\r\n                setattr(node, { atime, mtime });\r\n            },\r\n            open(path, flags, mode = 438) {\r\n                if (path === \"\") {\r\n                    throw new FS.ErrnoError(44);\r\n                }\r\n                flags = typeof flags == \"string\" ? FS_modeStringToFlags(flags) : flags;\r\n                if (flags & 64) {\r\n                    mode = (mode & 4095) | 32768;\r\n                } else {\r\n                    mode = 0;\r\n                }\r\n                var node;\r\n                var isDirPath;\r\n                if (typeof path == \"object\") {\r\n                    node = path;\r\n                } else {\r\n                    isDirPath = path.endsWith(\"/\");\r\n                    var lookup = FS.lookupPath(path, { follow: !(flags & 131072), noent_okay: true });\r\n                    node = lookup.node;\r\n                    path = lookup.path;\r\n                }\r\n                var created = false;\r\n                if (flags & 64) {\r\n                    if (node) {\r\n                        if (flags & 128) {\r\n                            throw new FS.ErrnoError(20);\r\n                        }\r\n                    } else if (isDirPath) {\r\n                        throw new FS.ErrnoError(31);\r\n                    } else {\r\n                        node = FS.mknod(path, mode | 511, 0);\r\n                        created = true;\r\n                    }\r\n                }\r\n                if (!node) {\r\n                    throw new FS.ErrnoError(44);\r\n                }\r\n                if (FS.isChrdev(node.mode)) {\r\n                    flags &= ~512;\r\n                }\r\n                if (flags & 65536 && !FS.isDir(node.mode)) {\r\n                    throw new FS.ErrnoError(54);\r\n                }\r\n                if (!created) {\r\n                    var errCode = FS.mayOpen(node, flags);\r\n                    if (errCode) {\r\n                        throw new FS.ErrnoError(errCode);\r\n                    }\r\n                }\r\n                if (flags & 512 && !created) {\r\n                    FS.truncate(node, 0);\r\n                }\r\n                flags &= ~(128 | 512 | 131072);\r\n                var stream = FS.createStream({\r\n                    node,\r\n                    path: FS.getPath(node),\r\n                    flags,\r\n                    seekable: true,\r\n                    position: 0,\r\n                    stream_ops: node.stream_ops,\r\n                    ungotten: [],\r\n                    error: false,\r\n                });\r\n                if (stream.stream_ops.open) {\r\n                    stream.stream_ops.open(stream);\r\n                }\r\n                if (created) {\r\n                    FS.chmod(node, mode & 511);\r\n                }\r\n                if (Module[\"logReadFiles\"] && !(flags & 1)) {\r\n                    if (!(path in FS.readFiles)) {\r\n                        FS.readFiles[path] = 1;\r\n                    }\r\n                }\r\n                return stream;\r\n            },\r\n            close(stream) {\r\n                if (FS.isClosed(stream)) {\r\n                    throw new FS.ErrnoError(8);\r\n                }\r\n                if (stream.getdents) stream.getdents = null;\r\n                try {\r\n                    if (stream.stream_ops.close) {\r\n                        stream.stream_ops.close(stream);\r\n                    }\r\n                } catch (e) {\r\n                    throw e;\r\n                } finally {\r\n                    FS.closeStream(stream.fd);\r\n                }\r\n                stream.fd = null;\r\n            },\r\n            isClosed(stream) {\r\n                return stream.fd === null;\r\n            },\r\n            llseek(stream, offset, whence) {\r\n                if (FS.isClosed(stream)) {\r\n                    throw new FS.ErrnoError(8);\r\n                }\r\n                if (!stream.seekable || !stream.stream_ops.llseek) {\r\n                    throw new FS.ErrnoError(70);\r\n                }\r\n                if (whence != 0 && whence != 1 && whence != 2) {\r\n                    throw new FS.ErrnoError(28);\r\n                }\r\n                stream.position = stream.stream_ops.llseek(stream, offset, whence);\r\n                stream.ungotten = [];\r\n                return stream.position;\r\n            },\r\n            read(stream, buffer, offset, length, position) {\r\n                if (length < 0 || position < 0) {\r\n                    throw new FS.ErrnoError(28);\r\n                }\r\n                if (FS.isClosed(stream)) {\r\n                    throw new FS.ErrnoError(8);\r\n                }\r\n                if ((stream.flags & 2097155) === 1) {\r\n                    throw new FS.ErrnoError(8);\r\n                }\r\n                if (FS.isDir(stream.node.mode)) {\r\n                    throw new FS.ErrnoError(31);\r\n                }\r\n                if (!stream.stream_ops.read) {\r\n                    throw new FS.ErrnoError(28);\r\n                }\r\n                var seeking = typeof position != \"undefined\";\r\n                if (!seeking) {\r\n                    position = stream.position;\r\n                } else if (!stream.seekable) {\r\n                    throw new FS.ErrnoError(70);\r\n                }\r\n                var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\r\n                if (!seeking) stream.position += bytesRead;\r\n                return bytesRead;\r\n            },\r\n            write(stream, buffer, offset, length, position, canOwn) {\r\n                if (length < 0 || position < 0) {\r\n                    throw new FS.ErrnoError(28);\r\n                }\r\n                if (FS.isClosed(stream)) {\r\n                    throw new FS.ErrnoError(8);\r\n                }\r\n                if ((stream.flags & 2097155) === 0) {\r\n                    throw new FS.ErrnoError(8);\r\n                }\r\n                if (FS.isDir(stream.node.mode)) {\r\n                    throw new FS.ErrnoError(31);\r\n                }\r\n                if (!stream.stream_ops.write) {\r\n                    throw new FS.ErrnoError(28);\r\n                }\r\n                if (stream.seekable && stream.flags & 1024) {\r\n                    FS.llseek(stream, 0, 2);\r\n                }\r\n                var seeking = typeof position != \"undefined\";\r\n                if (!seeking) {\r\n                    position = stream.position;\r\n                } else if (!stream.seekable) {\r\n                    throw new FS.ErrnoError(70);\r\n                }\r\n                var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\r\n                if (!seeking) stream.position += bytesWritten;\r\n                return bytesWritten;\r\n            },\r\n            mmap(stream, length, position, prot, flags) {\r\n                if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\r\n                    throw new FS.ErrnoError(2);\r\n                }\r\n                if ((stream.flags & 2097155) === 1) {\r\n                    throw new FS.ErrnoError(2);\r\n                }\r\n                if (!stream.stream_ops.mmap) {\r\n                    throw new FS.ErrnoError(43);\r\n                }\r\n                if (!length) {\r\n                    throw new FS.ErrnoError(28);\r\n                }\r\n                return stream.stream_ops.mmap(stream, length, position, prot, flags);\r\n            },\r\n            msync(stream, buffer, offset, length, mmapFlags) {\r\n                if (!stream.stream_ops.msync) {\r\n                    return 0;\r\n                }\r\n                return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\r\n            },\r\n            ioctl(stream, cmd, arg) {\r\n                if (!stream.stream_ops.ioctl) {\r\n                    throw new FS.ErrnoError(59);\r\n                }\r\n                return stream.stream_ops.ioctl(stream, cmd, arg);\r\n            },\r\n            readFile(path, opts = {}) {\r\n                opts.flags = opts.flags || 0;\r\n                opts.encoding = opts.encoding || \"binary\";\r\n                if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\r\n                    throw new Error(`Invalid encoding type \"${opts.encoding}\"`);\r\n                }\r\n                var ret;\r\n                var stream = FS.open(path, opts.flags);\r\n                var stat = FS.stat(path);\r\n                var length = stat.size;\r\n                var buf = new Uint8Array(length);\r\n                FS.read(stream, buf, 0, length, 0);\r\n                if (opts.encoding === \"utf8\") {\r\n                    ret = UTF8ArrayToString(buf);\r\n                } else if (opts.encoding === \"binary\") {\r\n                    ret = buf;\r\n                }\r\n                FS.close(stream);\r\n                return ret;\r\n            },\r\n            writeFile(path, data, opts = {}) {\r\n                opts.flags = opts.flags || 577;\r\n                var stream = FS.open(path, opts.flags, opts.mode);\r\n                if (typeof data == \"string\") {\r\n                    var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\r\n                    var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\r\n                    FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\r\n                } else if (ArrayBuffer.isView(data)) {\r\n                    FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\r\n                } else {\r\n                    throw new Error(\"Unsupported data type\");\r\n                }\r\n                FS.close(stream);\r\n            },\r\n            cwd: () => FS.currentPath,\r\n            chdir(path) {\r\n                var lookup = FS.lookupPath(path, { follow: true });\r\n                if (lookup.node === null) {\r\n                    throw new FS.ErrnoError(44);\r\n                }\r\n                if (!FS.isDir(lookup.node.mode)) {\r\n                    throw new FS.ErrnoError(54);\r\n                }\r\n                var errCode = FS.nodePermissions(lookup.node, \"x\");\r\n                if (errCode) {\r\n                    throw new FS.ErrnoError(errCode);\r\n                }\r\n                FS.currentPath = lookup.path;\r\n            },\r\n            createDefaultDirectories() {\r\n                FS.mkdir(\"/tmp\");\r\n                FS.mkdir(\"/home\");\r\n                FS.mkdir(\"/home/web_user\");\r\n            },\r\n            createDefaultDevices() {\r\n                FS.mkdir(\"/dev\");\r\n                FS.registerDevice(FS.makedev(1, 3), {\r\n                    read: () => 0,\r\n                    write: (stream, buffer, offset, length, pos) => length,\r\n                    llseek: () => 0,\r\n                });\r\n                FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\r\n                TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\r\n                TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\r\n                FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\r\n                FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\r\n                var randomBuffer = new Uint8Array(1024),\r\n                    randomLeft = 0;\r\n                var randomByte = () => {\r\n                    if (randomLeft === 0) {\r\n                        randomFill(randomBuffer);\r\n                        randomLeft = randomBuffer.byteLength;\r\n                    }\r\n                    return randomBuffer[--randomLeft];\r\n                };\r\n                FS.createDevice(\"/dev\", \"random\", randomByte);\r\n                FS.createDevice(\"/dev\", \"urandom\", randomByte);\r\n                FS.mkdir(\"/dev/shm\");\r\n                FS.mkdir(\"/dev/shm/tmp\");\r\n            },\r\n            createSpecialDirectories() {\r\n                FS.mkdir(\"/proc\");\r\n                var proc_self = FS.mkdir(\"/proc/self\");\r\n                FS.mkdir(\"/proc/self/fd\");\r\n                FS.mount(\r\n                    {\r\n                        mount() {\r\n                            var node = FS.createNode(proc_self, \"fd\", 16895, 73);\r\n                            node.stream_ops = { llseek: MEMFS.stream_ops.llseek };\r\n                            node.node_ops = {\r\n                                lookup(parent, name) {\r\n                                    var fd = +name;\r\n                                    var stream = FS.getStreamChecked(fd);\r\n                                    var ret = {\r\n                                        parent: null,\r\n                                        mount: { mountpoint: \"fake\" },\r\n                                        node_ops: { readlink: () => stream.path },\r\n                                        id: fd + 1,\r\n                                    };\r\n                                    ret.parent = ret;\r\n                                    return ret;\r\n                                },\r\n                                readdir() {\r\n                                    return Array.from(FS.streams.entries())\r\n                                        .filter(([k, v]) => v)\r\n                                        .map(([k, v]) => k.toString());\r\n                                },\r\n                            };\r\n                            return node;\r\n                        },\r\n                    },\r\n                    {},\r\n                    \"/proc/self/fd\",\r\n                );\r\n            },\r\n            createStandardStreams(input, output, error) {\r\n                if (input) {\r\n                    FS.createDevice(\"/dev\", \"stdin\", input);\r\n                } else {\r\n                    FS.symlink(\"/dev/tty\", \"/dev/stdin\");\r\n                }\r\n                if (output) {\r\n                    FS.createDevice(\"/dev\", \"stdout\", null, output);\r\n                } else {\r\n                    FS.symlink(\"/dev/tty\", \"/dev/stdout\");\r\n                }\r\n                if (error) {\r\n                    FS.createDevice(\"/dev\", \"stderr\", null, error);\r\n                } else {\r\n                    FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\r\n                }\r\n                var stdin = FS.open(\"/dev/stdin\", 0);\r\n                var stdout = FS.open(\"/dev/stdout\", 1);\r\n                var stderr = FS.open(\"/dev/stderr\", 1);\r\n            },\r\n            staticInit() {\r\n                FS.nameTable = new Array(4096);\r\n                FS.mount(MEMFS, {}, \"/\");\r\n                FS.createDefaultDirectories();\r\n                FS.createDefaultDevices();\r\n                FS.createSpecialDirectories();\r\n                FS.filesystems = { MEMFS };\r\n            },\r\n            init(input, output, error) {\r\n                FS.initialized = true;\r\n                input ??= Module[\"stdin\"];\r\n                output ??= Module[\"stdout\"];\r\n                error ??= Module[\"stderr\"];\r\n                FS.createStandardStreams(input, output, error);\r\n            },\r\n            quit() {\r\n                FS.initialized = false;\r\n                for (var stream of FS.streams) {\r\n                    if (stream) {\r\n                        FS.close(stream);\r\n                    }\r\n                }\r\n            },\r\n            findObject(path, dontResolveLastLink) {\r\n                var ret = FS.analyzePath(path, dontResolveLastLink);\r\n                if (!ret.exists) {\r\n                    return null;\r\n                }\r\n                return ret.object;\r\n            },\r\n            analyzePath(path, dontResolveLastLink) {\r\n                try {\r\n                    var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\r\n                    path = lookup.path;\r\n                } catch (e) {}\r\n                var ret = {\r\n                    isRoot: false,\r\n                    exists: false,\r\n                    error: 0,\r\n                    name: null,\r\n                    path: null,\r\n                    object: null,\r\n                    parentExists: false,\r\n                    parentPath: null,\r\n                    parentObject: null,\r\n                };\r\n                try {\r\n                    var lookup = FS.lookupPath(path, { parent: true });\r\n                    ret.parentExists = true;\r\n                    ret.parentPath = lookup.path;\r\n                    ret.parentObject = lookup.node;\r\n                    ret.name = PATH.basename(path);\r\n                    lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\r\n                    ret.exists = true;\r\n                    ret.path = lookup.path;\r\n                    ret.object = lookup.node;\r\n                    ret.name = lookup.node.name;\r\n                    ret.isRoot = lookup.path === \"/\";\r\n                } catch (e) {\r\n                    ret.error = e.errno;\r\n                }\r\n                return ret;\r\n            },\r\n            createPath(parent, path, canRead, canWrite) {\r\n                parent = typeof parent == \"string\" ? parent : FS.getPath(parent);\r\n                var parts = path.split(\"/\").reverse();\r\n                while (parts.length) {\r\n                    var part = parts.pop();\r\n                    if (!part) continue;\r\n                    var current = PATH.join2(parent, part);\r\n                    try {\r\n                        FS.mkdir(current);\r\n                    } catch (e) {\r\n                        if (e.errno != 20) throw e;\r\n                    }\r\n                    parent = current;\r\n                }\r\n                return current;\r\n            },\r\n            createFile(parent, name, properties, canRead, canWrite) {\r\n                var path = PATH.join2(typeof parent == \"string\" ? parent : FS.getPath(parent), name);\r\n                var mode = FS_getMode(canRead, canWrite);\r\n                return FS.create(path, mode);\r\n            },\r\n            createDataFile(parent, name, data, canRead, canWrite, canOwn) {\r\n                var path = name;\r\n                if (parent) {\r\n                    parent = typeof parent == \"string\" ? parent : FS.getPath(parent);\r\n                    path = name ? PATH.join2(parent, name) : parent;\r\n                }\r\n                var mode = FS_getMode(canRead, canWrite);\r\n                var node = FS.create(path, mode);\r\n                if (data) {\r\n                    if (typeof data == \"string\") {\r\n                        var arr = new Array(data.length);\r\n                        for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\r\n                        data = arr;\r\n                    }\r\n                    FS.chmod(node, mode | 146);\r\n                    var stream = FS.open(node, 577);\r\n                    FS.write(stream, data, 0, data.length, 0, canOwn);\r\n                    FS.close(stream);\r\n                    FS.chmod(node, mode);\r\n                }\r\n            },\r\n            createDevice(parent, name, input, output) {\r\n                var path = PATH.join2(typeof parent == \"string\" ? parent : FS.getPath(parent), name);\r\n                var mode = FS_getMode(!!input, !!output);\r\n                FS.createDevice.major ??= 64;\r\n                var dev = FS.makedev(FS.createDevice.major++, 0);\r\n                FS.registerDevice(dev, {\r\n                    open(stream) {\r\n                        stream.seekable = false;\r\n                    },\r\n                    close(stream) {\r\n                        if (output?.buffer?.length) {\r\n                            output(10);\r\n                        }\r\n                    },\r\n                    read(stream, buffer, offset, length, pos) {\r\n                        var bytesRead = 0;\r\n                        for (var i = 0; i < length; i++) {\r\n                            var result;\r\n                            try {\r\n                                result = input();\r\n                            } catch (e) {\r\n                                throw new FS.ErrnoError(29);\r\n                            }\r\n                            if (result === undefined && bytesRead === 0) {\r\n                                throw new FS.ErrnoError(6);\r\n                            }\r\n                            if (result === null || result === undefined) break;\r\n                            bytesRead++;\r\n                            buffer[offset + i] = result;\r\n                        }\r\n                        if (bytesRead) {\r\n                            stream.node.atime = Date.now();\r\n                        }\r\n                        return bytesRead;\r\n                    },\r\n                    write(stream, buffer, offset, length, pos) {\r\n                        for (var i = 0; i < length; i++) {\r\n                            try {\r\n                                output(buffer[offset + i]);\r\n                            } catch (e) {\r\n                                throw new FS.ErrnoError(29);\r\n                            }\r\n                        }\r\n                        if (length) {\r\n                            stream.node.mtime = stream.node.ctime = Date.now();\r\n                        }\r\n                        return i;\r\n                    },\r\n                });\r\n                return FS.mkdev(path, mode, dev);\r\n            },\r\n            forceLoadFile(obj) {\r\n                if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\r\n                if (typeof XMLHttpRequest != \"undefined\") {\r\n                    throw new Error(\r\n                        \"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\",\r\n                    );\r\n                } else {\r\n                    try {\r\n                        obj.contents = readBinary(obj.url);\r\n                        obj.usedBytes = obj.contents.length;\r\n                    } catch (e) {\r\n                        throw new FS.ErrnoError(29);\r\n                    }\r\n                }\r\n            },\r\n            createLazyFile(parent, name, url, canRead, canWrite) {\r\n                class LazyUint8Array {\r\n                    lengthKnown = false;\r\n                    chunks = [];\r\n                    get(idx) {\r\n                        if (idx > this.length - 1 || idx < 0) {\r\n                            return undefined;\r\n                        }\r\n                        var chunkOffset = idx % this.chunkSize;\r\n                        var chunkNum = (idx / this.chunkSize) | 0;\r\n                        return this.getter(chunkNum)[chunkOffset];\r\n                    }\r\n                    setDataGetter(getter) {\r\n                        this.getter = getter;\r\n                    }\r\n                    cacheLength() {\r\n                        var xhr = new XMLHttpRequest();\r\n                        xhr.open(\"HEAD\", url, false);\r\n                        xhr.send(null);\r\n                        if (!((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304))\r\n                            throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n                        var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\r\n                        var header;\r\n                        var hasByteServing =\r\n                            (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\r\n                        var usesGzip =\r\n                            (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\r\n                        var chunkSize = 1024 * 1024;\r\n                        if (!hasByteServing) chunkSize = datalength;\r\n                        var doXHR = (from, to) => {\r\n                            if (from > to)\r\n                                throw new Error(\r\n                                    \"invalid range (\" + from + \", \" + to + \") or no bytes requested!\",\r\n                                );\r\n                            if (to > datalength - 1)\r\n                                throw new Error(\r\n                                    \"only \" + datalength + \" bytes available! programmer error!\",\r\n                                );\r\n                            var xhr = new XMLHttpRequest();\r\n                            xhr.open(\"GET\", url, false);\r\n                            if (datalength !== chunkSize)\r\n                                xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\r\n                            xhr.responseType = \"arraybuffer\";\r\n                            if (xhr.overrideMimeType) {\r\n                                xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n                            }\r\n                            xhr.send(null);\r\n                            if (!((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304))\r\n                                throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n                            if (xhr.response !== undefined) {\r\n                                return new Uint8Array(xhr.response || []);\r\n                            }\r\n                            return intArrayFromString(xhr.responseText || \"\", true);\r\n                        };\r\n                        var lazyArray = this;\r\n                        lazyArray.setDataGetter((chunkNum) => {\r\n                            var start = chunkNum * chunkSize;\r\n                            var end = (chunkNum + 1) * chunkSize - 1;\r\n                            end = Math.min(end, datalength - 1);\r\n                            if (typeof lazyArray.chunks[chunkNum] == \"undefined\") {\r\n                                lazyArray.chunks[chunkNum] = doXHR(start, end);\r\n                            }\r\n                            if (typeof lazyArray.chunks[chunkNum] == \"undefined\")\r\n                                throw new Error(\"doXHR failed!\");\r\n                            return lazyArray.chunks[chunkNum];\r\n                        });\r\n                        if (usesGzip || !datalength) {\r\n                            chunkSize = datalength = 1;\r\n                            datalength = this.getter(0).length;\r\n                            chunkSize = datalength;\r\n                            out(\r\n                                \"LazyFiles on gzip forces download of the whole file when length is accessed\",\r\n                            );\r\n                        }\r\n                        this._length = datalength;\r\n                        this._chunkSize = chunkSize;\r\n                        this.lengthKnown = true;\r\n                    }\r\n                    get length() {\r\n                        if (!this.lengthKnown) {\r\n                            this.cacheLength();\r\n                        }\r\n                        return this._length;\r\n                    }\r\n                    get chunkSize() {\r\n                        if (!this.lengthKnown) {\r\n                            this.cacheLength();\r\n                        }\r\n                        return this._chunkSize;\r\n                    }\r\n                }\r\n                if (typeof XMLHttpRequest != \"undefined\") {\r\n                    if (!ENVIRONMENT_IS_WORKER)\r\n                        throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\r\n                    var lazyArray = new LazyUint8Array();\r\n                    var properties = { isDevice: false, contents: lazyArray };\r\n                } else {\r\n                    var properties = { isDevice: false, url };\r\n                }\r\n                var node = FS.createFile(parent, name, properties, canRead, canWrite);\r\n                if (properties.contents) {\r\n                    node.contents = properties.contents;\r\n                } else if (properties.url) {\r\n                    node.contents = null;\r\n                    node.url = properties.url;\r\n                }\r\n                Object.defineProperties(node, {\r\n                    usedBytes: {\r\n                        get: function () {\r\n                            return this.contents.length;\r\n                        },\r\n                    },\r\n                });\r\n                var stream_ops = {};\r\n                var keys = Object.keys(node.stream_ops);\r\n                keys.forEach((key) => {\r\n                    var fn = node.stream_ops[key];\r\n                    stream_ops[key] = (...args) => {\r\n                        FS.forceLoadFile(node);\r\n                        return fn(...args);\r\n                    };\r\n                });\r\n                function writeChunks(stream, buffer, offset, length, position) {\r\n                    var contents = stream.node.contents;\r\n                    if (position >= contents.length) return 0;\r\n                    var size = Math.min(contents.length - position, length);\r\n                    if (contents.slice) {\r\n                        for (var i = 0; i < size; i++) {\r\n                            buffer[offset + i] = contents[position + i];\r\n                        }\r\n                    } else {\r\n                        for (var i = 0; i < size; i++) {\r\n                            buffer[offset + i] = contents.get(position + i);\r\n                        }\r\n                    }\r\n                    return size;\r\n                }\r\n                stream_ops.read = (stream, buffer, offset, length, position) => {\r\n                    FS.forceLoadFile(node);\r\n                    return writeChunks(stream, buffer, offset, length, position);\r\n                };\r\n                stream_ops.mmap = (stream, length, position, prot, flags) => {\r\n                    FS.forceLoadFile(node);\r\n                    var ptr = mmapAlloc(length);\r\n                    if (!ptr) {\r\n                        throw new FS.ErrnoError(48);\r\n                    }\r\n                    writeChunks(stream, HEAP8, ptr, length, position);\r\n                    return { ptr, allocated: true };\r\n                };\r\n                node.stream_ops = stream_ops;\r\n                return node;\r\n            },\r\n        };\r\n        var UTF8ToString = (ptr, maxBytesToRead) => {\r\n            ptr >>>= 0;\r\n            return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\r\n        };\r\n        var SYSCALLS = {\r\n            DEFAULT_POLLMASK: 5,\r\n            calculateAt(dirfd, path, allowEmpty) {\r\n                if (PATH.isAbs(path)) {\r\n                    return path;\r\n                }\r\n                var dir;\r\n                if (dirfd === -100) {\r\n                    dir = FS.cwd();\r\n                } else {\r\n                    var dirstream = SYSCALLS.getStreamFromFD(dirfd);\r\n                    dir = dirstream.path;\r\n                }\r\n                if (path.length == 0) {\r\n                    if (!allowEmpty) {\r\n                        throw new FS.ErrnoError(44);\r\n                    }\r\n                    return dir;\r\n                }\r\n                return dir + \"/\" + path;\r\n            },\r\n            writeStat(buf, stat) {\r\n                HEAP32[(buf >>> 2) >>> 0] = stat.dev;\r\n                HEAP32[((buf + 4) >>> 2) >>> 0] = stat.mode;\r\n                HEAPU32[((buf + 8) >>> 2) >>> 0] = stat.nlink;\r\n                HEAP32[((buf + 12) >>> 2) >>> 0] = stat.uid;\r\n                HEAP32[((buf + 16) >>> 2) >>> 0] = stat.gid;\r\n                HEAP32[((buf + 20) >>> 2) >>> 0] = stat.rdev;\r\n                HEAP64[(buf + 24) >>> 3] = BigInt(stat.size);\r\n                HEAP32[((buf + 32) >>> 2) >>> 0] = 4096;\r\n                HEAP32[((buf + 36) >>> 2) >>> 0] = stat.blocks;\r\n                var atime = stat.atime.getTime();\r\n                var mtime = stat.mtime.getTime();\r\n                var ctime = stat.ctime.getTime();\r\n                HEAP64[(buf + 40) >>> 3] = BigInt(Math.floor(atime / 1e3));\r\n                HEAPU32[((buf + 48) >>> 2) >>> 0] = (atime % 1e3) * 1e3 * 1e3;\r\n                HEAP64[(buf + 56) >>> 3] = BigInt(Math.floor(mtime / 1e3));\r\n                HEAPU32[((buf + 64) >>> 2) >>> 0] = (mtime % 1e3) * 1e3 * 1e3;\r\n                HEAP64[(buf + 72) >>> 3] = BigInt(Math.floor(ctime / 1e3));\r\n                HEAPU32[((buf + 80) >>> 2) >>> 0] = (ctime % 1e3) * 1e3 * 1e3;\r\n                HEAP64[(buf + 88) >>> 3] = BigInt(stat.ino);\r\n                return 0;\r\n            },\r\n            writeStatFs(buf, stats) {\r\n                HEAP32[((buf + 4) >>> 2) >>> 0] = stats.bsize;\r\n                HEAP32[((buf + 40) >>> 2) >>> 0] = stats.bsize;\r\n                HEAP32[((buf + 8) >>> 2) >>> 0] = stats.blocks;\r\n                HEAP32[((buf + 12) >>> 2) >>> 0] = stats.bfree;\r\n                HEAP32[((buf + 16) >>> 2) >>> 0] = stats.bavail;\r\n                HEAP32[((buf + 20) >>> 2) >>> 0] = stats.files;\r\n                HEAP32[((buf + 24) >>> 2) >>> 0] = stats.ffree;\r\n                HEAP32[((buf + 28) >>> 2) >>> 0] = stats.fsid;\r\n                HEAP32[((buf + 44) >>> 2) >>> 0] = stats.flags;\r\n                HEAP32[((buf + 36) >>> 2) >>> 0] = stats.namelen;\r\n            },\r\n            doMsync(addr, stream, len, flags, offset) {\r\n                if (!FS.isFile(stream.node.mode)) {\r\n                    throw new FS.ErrnoError(43);\r\n                }\r\n                if (flags & 2) {\r\n                    return 0;\r\n                }\r\n                var buffer = HEAPU8.slice(addr, addr + len);\r\n                FS.msync(stream, buffer, offset, len, flags);\r\n            },\r\n            getStreamFromFD(fd) {\r\n                var stream = FS.getStreamChecked(fd);\r\n                return stream;\r\n            },\r\n            varargs: undefined,\r\n            getStr(ptr) {\r\n                var ret = UTF8ToString(ptr);\r\n                return ret;\r\n            },\r\n        };\r\n        function ___syscall_chmod(path, mode) {\r\n            path >>>= 0;\r\n            try {\r\n                path = SYSCALLS.getStr(path);\r\n                FS.chmod(path, mode);\r\n                return 0;\r\n            } catch (e) {\r\n                if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\r\n                return -e.errno;\r\n            }\r\n        }\r\n        function ___syscall_faccessat(dirfd, path, amode, flags) {\r\n            path >>>= 0;\r\n            try {\r\n                path = SYSCALLS.getStr(path);\r\n                path = SYSCALLS.calculateAt(dirfd, path);\r\n                if (amode & ~7) {\r\n                    return -28;\r\n                }\r\n                var lookup = FS.lookupPath(path, { follow: true });\r\n                var node = lookup.node;\r\n                if (!node) {\r\n                    return -44;\r\n                }\r\n                var perms = \"\";\r\n                if (amode & 4) perms += \"r\";\r\n                if (amode & 2) perms += \"w\";\r\n                if (amode & 1) perms += \"x\";\r\n                if (perms && FS.nodePermissions(node, perms)) {\r\n                    return -2;\r\n                }\r\n                return 0;\r\n            } catch (e) {\r\n                if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\r\n                return -e.errno;\r\n            }\r\n        }\r\n        var syscallGetVarargI = () => {\r\n            var ret = HEAP32[(+SYSCALLS.varargs >>> 2) >>> 0];\r\n            SYSCALLS.varargs += 4;\r\n            return ret;\r\n        };\r\n        var syscallGetVarargP = syscallGetVarargI;\r\n        function ___syscall_fcntl64(fd, cmd, varargs) {\r\n            varargs >>>= 0;\r\n            SYSCALLS.varargs = varargs;\r\n            try {\r\n                var stream = SYSCALLS.getStreamFromFD(fd);\r\n                switch (cmd) {\r\n                    case 0: {\r\n                        var arg = syscallGetVarargI();\r\n                        if (arg < 0) {\r\n                            return -28;\r\n                        }\r\n                        while (FS.streams[arg]) {\r\n                            arg++;\r\n                        }\r\n                        var newStream;\r\n                        newStream = FS.dupStream(stream, arg);\r\n                        return newStream.fd;\r\n                    }\r\n                    case 1:\r\n                    case 2:\r\n                        return 0;\r\n                    case 3:\r\n                        return stream.flags;\r\n                    case 4: {\r\n                        var arg = syscallGetVarargI();\r\n                        stream.flags |= arg;\r\n                        return 0;\r\n                    }\r\n                    case 12: {\r\n                        var arg = syscallGetVarargP();\r\n                        var offset = 0;\r\n                        HEAP16[((arg + offset) >>> 1) >>> 0] = 2;\r\n                        return 0;\r\n                    }\r\n                    case 13:\r\n                    case 14:\r\n                        return 0;\r\n                }\r\n                return -28;\r\n            } catch (e) {\r\n                if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\r\n                return -e.errno;\r\n            }\r\n        }\r\n        function ___syscall_fstat64(fd, buf) {\r\n            buf >>>= 0;\r\n            try {\r\n                return SYSCALLS.writeStat(buf, FS.fstat(fd));\r\n            } catch (e) {\r\n                if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\r\n                return -e.errno;\r\n            }\r\n        }\r\n        function ___syscall_ioctl(fd, op, varargs) {\r\n            varargs >>>= 0;\r\n            SYSCALLS.varargs = varargs;\r\n            try {\r\n                var stream = SYSCALLS.getStreamFromFD(fd);\r\n                switch (op) {\r\n                    case 21509: {\r\n                        if (!stream.tty) return -59;\r\n                        return 0;\r\n                    }\r\n                    case 21505: {\r\n                        if (!stream.tty) return -59;\r\n                        if (stream.tty.ops.ioctl_tcgets) {\r\n                            var termios = stream.tty.ops.ioctl_tcgets(stream);\r\n                            var argp = syscallGetVarargP();\r\n                            HEAP32[(argp >>> 2) >>> 0] = termios.c_iflag || 0;\r\n                            HEAP32[((argp + 4) >>> 2) >>> 0] = termios.c_oflag || 0;\r\n                            HEAP32[((argp + 8) >>> 2) >>> 0] = termios.c_cflag || 0;\r\n                            HEAP32[((argp + 12) >>> 2) >>> 0] = termios.c_lflag || 0;\r\n                            for (var i = 0; i < 32; i++) {\r\n                                HEAP8[(argp + i + 17) >>> 0] = termios.c_cc[i] || 0;\r\n                            }\r\n                            return 0;\r\n                        }\r\n                        return 0;\r\n                    }\r\n                    case 21510:\r\n                    case 21511:\r\n                    case 21512: {\r\n                        if (!stream.tty) return -59;\r\n                        return 0;\r\n                    }\r\n                    case 21506:\r\n                    case 21507:\r\n                    case 21508: {\r\n                        if (!stream.tty) return -59;\r\n                        if (stream.tty.ops.ioctl_tcsets) {\r\n                            var argp = syscallGetVarargP();\r\n                            var c_iflag = HEAP32[(argp >>> 2) >>> 0];\r\n                            var c_oflag = HEAP32[((argp + 4) >>> 2) >>> 0];\r\n                            var c_cflag = HEAP32[((argp + 8) >>> 2) >>> 0];\r\n                            var c_lflag = HEAP32[((argp + 12) >>> 2) >>> 0];\r\n                            var c_cc = [];\r\n                            for (var i = 0; i < 32; i++) {\r\n                                c_cc.push(HEAP8[(argp + i + 17) >>> 0]);\r\n                            }\r\n                            return stream.tty.ops.ioctl_tcsets(stream.tty, op, {\r\n                                c_iflag,\r\n                                c_oflag,\r\n                                c_cflag,\r\n                                c_lflag,\r\n                                c_cc,\r\n                            });\r\n                        }\r\n                        return 0;\r\n                    }\r\n                    case 21519: {\r\n                        if (!stream.tty) return -59;\r\n                        var argp = syscallGetVarargP();\r\n                        HEAP32[(argp >>> 2) >>> 0] = 0;\r\n                        return 0;\r\n                    }\r\n                    case 21520: {\r\n                        if (!stream.tty) return -59;\r\n                        return -28;\r\n                    }\r\n                    case 21531: {\r\n                        var argp = syscallGetVarargP();\r\n                        return FS.ioctl(stream, op, argp);\r\n                    }\r\n                    case 21523: {\r\n                        if (!stream.tty) return -59;\r\n                        if (stream.tty.ops.ioctl_tiocgwinsz) {\r\n                            var winsize = stream.tty.ops.ioctl_tiocgwinsz(stream.tty);\r\n                            var argp = syscallGetVarargP();\r\n                            HEAP16[(argp >>> 1) >>> 0] = winsize[0];\r\n                            HEAP16[((argp + 2) >>> 1) >>> 0] = winsize[1];\r\n                        }\r\n                        return 0;\r\n                    }\r\n                    case 21524: {\r\n                        if (!stream.tty) return -59;\r\n                        return 0;\r\n                    }\r\n                    case 21515: {\r\n                        if (!stream.tty) return -59;\r\n                        return 0;\r\n                    }\r\n                    default:\r\n                        return -28;\r\n                }\r\n            } catch (e) {\r\n                if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\r\n                return -e.errno;\r\n            }\r\n        }\r\n        function ___syscall_lstat64(path, buf) {\r\n            path >>>= 0;\r\n            buf >>>= 0;\r\n            try {\r\n                path = SYSCALLS.getStr(path);\r\n                return SYSCALLS.writeStat(buf, FS.lstat(path));\r\n            } catch (e) {\r\n                if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\r\n                return -e.errno;\r\n            }\r\n        }\r\n        function ___syscall_newfstatat(dirfd, path, buf, flags) {\r\n            path >>>= 0;\r\n            buf >>>= 0;\r\n            try {\r\n                path = SYSCALLS.getStr(path);\r\n                var nofollow = flags & 256;\r\n                var allowEmpty = flags & 4096;\r\n                flags = flags & ~6400;\r\n                path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\r\n                return SYSCALLS.writeStat(buf, nofollow ? FS.lstat(path) : FS.stat(path));\r\n            } catch (e) {\r\n                if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\r\n                return -e.errno;\r\n            }\r\n        }\r\n        function ___syscall_openat(dirfd, path, flags, varargs) {\r\n            path >>>= 0;\r\n            varargs >>>= 0;\r\n            SYSCALLS.varargs = varargs;\r\n            try {\r\n                path = SYSCALLS.getStr(path);\r\n                path = SYSCALLS.calculateAt(dirfd, path);\r\n                var mode = varargs ? syscallGetVarargI() : 0;\r\n                return FS.open(path, flags, mode).fd;\r\n            } catch (e) {\r\n                if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\r\n                return -e.errno;\r\n            }\r\n        }\r\n        function ___syscall_rmdir(path) {\r\n            path >>>= 0;\r\n            try {\r\n                path = SYSCALLS.getStr(path);\r\n                FS.rmdir(path);\r\n                return 0;\r\n            } catch (e) {\r\n                if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\r\n                return -e.errno;\r\n            }\r\n        }\r\n        function ___syscall_stat64(path, buf) {\r\n            path >>>= 0;\r\n            buf >>>= 0;\r\n            try {\r\n                path = SYSCALLS.getStr(path);\r\n                return SYSCALLS.writeStat(buf, FS.stat(path));\r\n            } catch (e) {\r\n                if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\r\n                return -e.errno;\r\n            }\r\n        }\r\n        function ___syscall_unlinkat(dirfd, path, flags) {\r\n            path >>>= 0;\r\n            try {\r\n                path = SYSCALLS.getStr(path);\r\n                path = SYSCALLS.calculateAt(dirfd, path);\r\n                if (flags === 0) {\r\n                    FS.unlink(path);\r\n                } else if (flags === 512) {\r\n                    FS.rmdir(path);\r\n                } else {\r\n                    abort(\"Invalid flags passed to unlinkat\");\r\n                }\r\n                return 0;\r\n            } catch (e) {\r\n                if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\r\n                return -e.errno;\r\n            }\r\n        }\r\n        var __abort_js = () => abort(\"\");\r\n        var structRegistrations = {};\r\n        var runDestructors = (destructors) => {\r\n            while (destructors.length) {\r\n                var ptr = destructors.pop();\r\n                var del = destructors.pop();\r\n                del(ptr);\r\n            }\r\n        };\r\n        function readPointer(pointer) {\r\n            return this[\"fromWireType\"](HEAPU32[(pointer >>> 2) >>> 0]);\r\n        }\r\n        var awaitingDependencies = {};\r\n        var registeredTypes = {};\r\n        var typeDependencies = {};\r\n        var InternalError = (Module[\"InternalError\"] = class InternalError extends Error {\r\n            constructor(message) {\r\n                super(message);\r\n                this.name = \"InternalError\";\r\n            }\r\n        });\r\n        var throwInternalError = (message) => {\r\n            throw new InternalError(message);\r\n        };\r\n        var whenDependentTypesAreResolved = (myTypes, dependentTypes, getTypeConverters) => {\r\n            myTypes.forEach((type) => (typeDependencies[type] = dependentTypes));\r\n            function onComplete(typeConverters) {\r\n                var myTypeConverters = getTypeConverters(typeConverters);\r\n                if (myTypeConverters.length !== myTypes.length) {\r\n                    throwInternalError(\"Mismatched type converter count\");\r\n                }\r\n                for (var i = 0; i < myTypes.length; ++i) {\r\n                    registerType(myTypes[i], myTypeConverters[i]);\r\n                }\r\n            }\r\n            var typeConverters = new Array(dependentTypes.length);\r\n            var unregisteredTypes = [];\r\n            var registered = 0;\r\n            dependentTypes.forEach((dt, i) => {\r\n                if (registeredTypes.hasOwnProperty(dt)) {\r\n                    typeConverters[i] = registeredTypes[dt];\r\n                } else {\r\n                    unregisteredTypes.push(dt);\r\n                    if (!awaitingDependencies.hasOwnProperty(dt)) {\r\n                        awaitingDependencies[dt] = [];\r\n                    }\r\n                    awaitingDependencies[dt].push(() => {\r\n                        typeConverters[i] = registeredTypes[dt];\r\n                        ++registered;\r\n                        if (registered === unregisteredTypes.length) {\r\n                            onComplete(typeConverters);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            if (0 === unregisteredTypes.length) {\r\n                onComplete(typeConverters);\r\n            }\r\n        };\r\n        var __embind_finalize_value_object = function (structType) {\r\n            structType >>>= 0;\r\n            var reg = structRegistrations[structType];\r\n            delete structRegistrations[structType];\r\n            var rawConstructor = reg.rawConstructor;\r\n            var rawDestructor = reg.rawDestructor;\r\n            var fieldRecords = reg.fields;\r\n            var fieldTypes = fieldRecords\r\n                .map((field) => field.getterReturnType)\r\n                .concat(fieldRecords.map((field) => field.setterArgumentType));\r\n            whenDependentTypesAreResolved([structType], fieldTypes, (fieldTypes) => {\r\n                var fields = {};\r\n                fieldRecords.forEach((field, i) => {\r\n                    var fieldName = field.fieldName;\r\n                    var getterReturnType = fieldTypes[i];\r\n                    var optional = fieldTypes[i].optional;\r\n                    var getter = field.getter;\r\n                    var getterContext = field.getterContext;\r\n                    var setterArgumentType = fieldTypes[i + fieldRecords.length];\r\n                    var setter = field.setter;\r\n                    var setterContext = field.setterContext;\r\n                    fields[fieldName] = {\r\n                        read: (ptr) => getterReturnType[\"fromWireType\"](getter(getterContext, ptr)),\r\n                        write: (ptr, o) => {\r\n                            var destructors = [];\r\n                            setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\r\n                            runDestructors(destructors);\r\n                        },\r\n                        optional,\r\n                    };\r\n                });\r\n                return [\r\n                    {\r\n                        name: reg.name,\r\n                        fromWireType: (ptr) => {\r\n                            var rv = {};\r\n                            for (var i in fields) {\r\n                                rv[i] = fields[i].read(ptr);\r\n                            }\r\n                            rawDestructor(ptr);\r\n                            return rv;\r\n                        },\r\n                        toWireType: (destructors, o) => {\r\n                            for (var fieldName in fields) {\r\n                                if (!(fieldName in o) && !fields[fieldName].optional) {\r\n                                    throw new TypeError(`Missing field: \"${fieldName}\"`);\r\n                                }\r\n                            }\r\n                            var ptr = rawConstructor();\r\n                            for (fieldName in fields) {\r\n                                fields[fieldName].write(ptr, o[fieldName]);\r\n                            }\r\n                            if (destructors !== null) {\r\n                                destructors.push(rawDestructor, ptr);\r\n                            }\r\n                            return ptr;\r\n                        },\r\n                        argPackAdvance: GenericWireTypeSize,\r\n                        readValueFromPointer: readPointer,\r\n                        destructorFunction: rawDestructor,\r\n                    },\r\n                ];\r\n            });\r\n        };\r\n        var embindRepr = (v) => {\r\n            if (v === null) {\r\n                return \"null\";\r\n            }\r\n            var t = typeof v;\r\n            if (t === \"object\" || t === \"array\" || t === \"function\") {\r\n                return v.toString();\r\n            } else {\r\n                return \"\" + v;\r\n            }\r\n        };\r\n        var embind_init_charCodes = () => {\r\n            var codes = new Array(256);\r\n            for (var i = 0; i < 256; ++i) {\r\n                codes[i] = String.fromCharCode(i);\r\n            }\r\n            embind_charCodes = codes;\r\n        };\r\n        var embind_charCodes;\r\n        var readLatin1String = (ptr) => {\r\n            var ret = \"\";\r\n            var c = ptr;\r\n            while (HEAPU8[c >>> 0]) {\r\n                ret += embind_charCodes[HEAPU8[c++ >>> 0]];\r\n            }\r\n            return ret;\r\n        };\r\n        var BindingError = (Module[\"BindingError\"] = class BindingError extends Error {\r\n            constructor(message) {\r\n                super(message);\r\n                this.name = \"BindingError\";\r\n            }\r\n        });\r\n        var throwBindingError = (message) => {\r\n            throw new BindingError(message);\r\n        };\r\n        function sharedRegisterType(rawType, registeredInstance, options = {}) {\r\n            var name = registeredInstance.name;\r\n            if (!rawType) {\r\n                throwBindingError(`type \"${name}\" must have a positive integer typeid pointer`);\r\n            }\r\n            if (registeredTypes.hasOwnProperty(rawType)) {\r\n                if (options.ignoreDuplicateRegistrations) {\r\n                    return;\r\n                } else {\r\n                    throwBindingError(`Cannot register type '${name}' twice`);\r\n                }\r\n            }\r\n            registeredTypes[rawType] = registeredInstance;\r\n            delete typeDependencies[rawType];\r\n            if (awaitingDependencies.hasOwnProperty(rawType)) {\r\n                var callbacks = awaitingDependencies[rawType];\r\n                delete awaitingDependencies[rawType];\r\n                callbacks.forEach((cb) => cb());\r\n            }\r\n        }\r\n        function registerType(rawType, registeredInstance, options = {}) {\r\n            return sharedRegisterType(rawType, registeredInstance, options);\r\n        }\r\n        var integerReadValueFromPointer = (name, width, signed) => {\r\n            switch (width) {\r\n                case 1:\r\n                    return signed ? (pointer) => HEAP8[pointer >>> 0] : (pointer) => HEAPU8[pointer >>> 0];\r\n                case 2:\r\n                    return signed\r\n                        ? (pointer) => HEAP16[(pointer >>> 1) >>> 0]\r\n                        : (pointer) => HEAPU16[(pointer >>> 1) >>> 0];\r\n                case 4:\r\n                    return signed\r\n                        ? (pointer) => HEAP32[(pointer >>> 2) >>> 0]\r\n                        : (pointer) => HEAPU32[(pointer >>> 2) >>> 0];\r\n                case 8:\r\n                    return signed ? (pointer) => HEAP64[pointer >>> 3] : (pointer) => HEAPU64[pointer >>> 3];\r\n                default:\r\n                    throw new TypeError(`invalid integer width (${width}): ${name}`);\r\n            }\r\n        };\r\n        function __embind_register_bigint(primitiveType, name, size, minRange, maxRange) {\r\n            primitiveType >>>= 0;\r\n            name >>>= 0;\r\n            size >>>= 0;\r\n            name = readLatin1String(name);\r\n            var isUnsignedType = name.indexOf(\"u\") != -1;\r\n            if (isUnsignedType) {\r\n                maxRange = (1n << 64n) - 1n;\r\n            }\r\n            registerType(primitiveType, {\r\n                name,\r\n                fromWireType: (value) => value,\r\n                toWireType: function (destructors, value) {\r\n                    if (typeof value != \"bigint\" && typeof value != \"number\") {\r\n                        throw new TypeError(`Cannot convert \"${embindRepr(value)}\" to ${this.name}`);\r\n                    }\r\n                    if (typeof value == \"number\") {\r\n                        value = BigInt(value);\r\n                    }\r\n                    return value;\r\n                },\r\n                argPackAdvance: GenericWireTypeSize,\r\n                readValueFromPointer: integerReadValueFromPointer(name, size, !isUnsignedType),\r\n                destructorFunction: null,\r\n            });\r\n        }\r\n        var GenericWireTypeSize = 8;\r\n        function __embind_register_bool(rawType, name, trueValue, falseValue) {\r\n            rawType >>>= 0;\r\n            name >>>= 0;\r\n            name = readLatin1String(name);\r\n            registerType(rawType, {\r\n                name,\r\n                fromWireType: function (wt) {\r\n                    return !!wt;\r\n                },\r\n                toWireType: function (destructors, o) {\r\n                    return o ? trueValue : falseValue;\r\n                },\r\n                argPackAdvance: GenericWireTypeSize,\r\n                readValueFromPointer: function (pointer) {\r\n                    return this[\"fromWireType\"](HEAPU8[pointer >>> 0]);\r\n                },\r\n                destructorFunction: null,\r\n            });\r\n        }\r\n        var shallowCopyInternalPointer = (o) => ({\r\n            count: o.count,\r\n            deleteScheduled: o.deleteScheduled,\r\n            preservePointerOnDelete: o.preservePointerOnDelete,\r\n            ptr: o.ptr,\r\n            ptrType: o.ptrType,\r\n            smartPtr: o.smartPtr,\r\n            smartPtrType: o.smartPtrType,\r\n        });\r\n        var throwInstanceAlreadyDeleted = (obj) => {\r\n            function getInstanceTypeName(handle) {\r\n                return handle.$$.ptrType.registeredClass.name;\r\n            }\r\n            throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\r\n        };\r\n        var finalizationRegistry = false;\r\n        var detachFinalizer = (handle) => {};\r\n        var runDestructor = ($$) => {\r\n            if ($$.smartPtr) {\r\n                $$.smartPtrType.rawDestructor($$.smartPtr);\r\n            } else {\r\n                $$.ptrType.registeredClass.rawDestructor($$.ptr);\r\n            }\r\n        };\r\n        var releaseClassHandle = ($$) => {\r\n            $$.count.value -= 1;\r\n            var toDelete = 0 === $$.count.value;\r\n            if (toDelete) {\r\n                runDestructor($$);\r\n            }\r\n        };\r\n        var attachFinalizer = (handle) => {\r\n            if (\"undefined\" === typeof FinalizationRegistry) {\r\n                attachFinalizer = (handle) => handle;\r\n                return handle;\r\n            }\r\n            finalizationRegistry = new FinalizationRegistry((info) => {\r\n                releaseClassHandle(info.$$);\r\n            });\r\n            attachFinalizer = (handle) => {\r\n                var $$ = handle.$$;\r\n                var hasSmartPtr = !!$$.smartPtr;\r\n                if (hasSmartPtr) {\r\n                    var info = { $$ };\r\n                    finalizationRegistry.register(handle, info, handle);\r\n                }\r\n                return handle;\r\n            };\r\n            detachFinalizer = (handle) => finalizationRegistry.unregister(handle);\r\n            return attachFinalizer(handle);\r\n        };\r\n        var deletionQueue = [];\r\n        var flushPendingDeletes = () => {\r\n            while (deletionQueue.length) {\r\n                var obj = deletionQueue.pop();\r\n                obj.$$.deleteScheduled = false;\r\n                obj[\"delete\"]();\r\n            }\r\n        };\r\n        var delayFunction;\r\n        var init_ClassHandle = () => {\r\n            let proto = ClassHandle.prototype;\r\n            Object.assign(proto, {\r\n                isAliasOf(other) {\r\n                    if (!(this instanceof ClassHandle)) {\r\n                        return false;\r\n                    }\r\n                    if (!(other instanceof ClassHandle)) {\r\n                        return false;\r\n                    }\r\n                    var leftClass = this.$$.ptrType.registeredClass;\r\n                    var left = this.$$.ptr;\r\n                    other.$$ = other.$$;\r\n                    var rightClass = other.$$.ptrType.registeredClass;\r\n                    var right = other.$$.ptr;\r\n                    while (leftClass.baseClass) {\r\n                        left = leftClass.upcast(left);\r\n                        leftClass = leftClass.baseClass;\r\n                    }\r\n                    while (rightClass.baseClass) {\r\n                        right = rightClass.upcast(right);\r\n                        rightClass = rightClass.baseClass;\r\n                    }\r\n                    return leftClass === rightClass && left === right;\r\n                },\r\n                clone() {\r\n                    if (!this.$$.ptr) {\r\n                        throwInstanceAlreadyDeleted(this);\r\n                    }\r\n                    if (this.$$.preservePointerOnDelete) {\r\n                        this.$$.count.value += 1;\r\n                        return this;\r\n                    } else {\r\n                        var clone = attachFinalizer(\r\n                            Object.create(Object.getPrototypeOf(this), {\r\n                                $$: { value: shallowCopyInternalPointer(this.$$) },\r\n                            }),\r\n                        );\r\n                        clone.$$.count.value += 1;\r\n                        clone.$$.deleteScheduled = false;\r\n                        return clone;\r\n                    }\r\n                },\r\n                delete() {\r\n                    if (!this.$$.ptr) {\r\n                        throwInstanceAlreadyDeleted(this);\r\n                    }\r\n                    if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\r\n                        throwBindingError(\"Object already scheduled for deletion\");\r\n                    }\r\n                    detachFinalizer(this);\r\n                    releaseClassHandle(this.$$);\r\n                    if (!this.$$.preservePointerOnDelete) {\r\n                        this.$$.smartPtr = undefined;\r\n                        this.$$.ptr = undefined;\r\n                    }\r\n                },\r\n                isDeleted() {\r\n                    return !this.$$.ptr;\r\n                },\r\n                deleteLater() {\r\n                    if (!this.$$.ptr) {\r\n                        throwInstanceAlreadyDeleted(this);\r\n                    }\r\n                    if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\r\n                        throwBindingError(\"Object already scheduled for deletion\");\r\n                    }\r\n                    deletionQueue.push(this);\r\n                    if (deletionQueue.length === 1 && delayFunction) {\r\n                        delayFunction(flushPendingDeletes);\r\n                    }\r\n                    this.$$.deleteScheduled = true;\r\n                    return this;\r\n                },\r\n            });\r\n            const symbolDispose = Symbol.dispose;\r\n            if (symbolDispose) {\r\n                proto[symbolDispose] = proto[\"delete\"];\r\n            }\r\n        };\r\n        function ClassHandle() {}\r\n        var createNamedFunction = (name, func) => Object.defineProperty(func, \"name\", { value: name });\r\n        var registeredPointers = {};\r\n        var ensureOverloadTable = (proto, methodName, humanName) => {\r\n            if (undefined === proto[methodName].overloadTable) {\r\n                var prevFunc = proto[methodName];\r\n                proto[methodName] = function (...args) {\r\n                    if (!proto[methodName].overloadTable.hasOwnProperty(args.length)) {\r\n                        throwBindingError(\r\n                            `Function '${humanName}' called with an invalid number of arguments (${args.length}) - expects one of (${proto[methodName].overloadTable})!`,\r\n                        );\r\n                    }\r\n                    return proto[methodName].overloadTable[args.length].apply(this, args);\r\n                };\r\n                proto[methodName].overloadTable = [];\r\n                proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\r\n            }\r\n        };\r\n        var exposePublicSymbol = (name, value, numArguments) => {\r\n            if (Module.hasOwnProperty(name)) {\r\n                if (\r\n                    undefined === numArguments ||\r\n                    (undefined !== Module[name].overloadTable &&\r\n                        undefined !== Module[name].overloadTable[numArguments])\r\n                ) {\r\n                    throwBindingError(`Cannot register public name '${name}' twice`);\r\n                }\r\n                ensureOverloadTable(Module, name, name);\r\n                if (Module[name].overloadTable.hasOwnProperty(numArguments)) {\r\n                    throwBindingError(\r\n                        `Cannot register multiple overloads of a function with the same number of arguments (${numArguments})!`,\r\n                    );\r\n                }\r\n                Module[name].overloadTable[numArguments] = value;\r\n            } else {\r\n                Module[name] = value;\r\n                Module[name].argCount = numArguments;\r\n            }\r\n        };\r\n        var char_0 = 48;\r\n        var char_9 = 57;\r\n        var makeLegalFunctionName = (name) => {\r\n            name = name.replace(/[^a-zA-Z0-9_]/g, \"$\");\r\n            var f = name.charCodeAt(0);\r\n            if (f >= char_0 && f <= char_9) {\r\n                return `_${name}`;\r\n            }\r\n            return name;\r\n        };\r\n        function RegisteredClass(\r\n            name,\r\n            constructor,\r\n            instancePrototype,\r\n            rawDestructor,\r\n            baseClass,\r\n            getActualType,\r\n            upcast,\r\n            downcast,\r\n        ) {\r\n            this.name = name;\r\n            this.constructor = constructor;\r\n            this.instancePrototype = instancePrototype;\r\n            this.rawDestructor = rawDestructor;\r\n            this.baseClass = baseClass;\r\n            this.getActualType = getActualType;\r\n            this.upcast = upcast;\r\n            this.downcast = downcast;\r\n            this.pureVirtualFunctions = [];\r\n        }\r\n        var upcastPointer = (ptr, ptrClass, desiredClass) => {\r\n            while (ptrClass !== desiredClass) {\r\n                if (!ptrClass.upcast) {\r\n                    throwBindingError(\r\n                        `Expected null or instance of ${desiredClass.name}, got an instance of ${ptrClass.name}`,\r\n                    );\r\n                }\r\n                ptr = ptrClass.upcast(ptr);\r\n                ptrClass = ptrClass.baseClass;\r\n            }\r\n            return ptr;\r\n        };\r\n        function constNoSmartPtrRawPointerToWireType(destructors, handle) {\r\n            if (handle === null) {\r\n                if (this.isReference) {\r\n                    throwBindingError(`null is not a valid ${this.name}`);\r\n                }\r\n                return 0;\r\n            }\r\n            if (!handle.$$) {\r\n                throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\r\n            }\r\n            if (!handle.$$.ptr) {\r\n                throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\r\n            }\r\n            var handleClass = handle.$$.ptrType.registeredClass;\r\n            var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\r\n            return ptr;\r\n        }\r\n        function genericPointerToWireType(destructors, handle) {\r\n            var ptr;\r\n            if (handle === null) {\r\n                if (this.isReference) {\r\n                    throwBindingError(`null is not a valid ${this.name}`);\r\n                }\r\n                if (this.isSmartPointer) {\r\n                    ptr = this.rawConstructor();\r\n                    if (destructors !== null) {\r\n                        destructors.push(this.rawDestructor, ptr);\r\n                    }\r\n                    return ptr;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            }\r\n            if (!handle || !handle.$$) {\r\n                throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\r\n            }\r\n            if (!handle.$$.ptr) {\r\n                throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\r\n            }\r\n            if (!this.isConst && handle.$$.ptrType.isConst) {\r\n                throwBindingError(\r\n                    `Cannot convert argument of type ${handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name} to parameter type ${this.name}`,\r\n                );\r\n            }\r\n            var handleClass = handle.$$.ptrType.registeredClass;\r\n            ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\r\n            if (this.isSmartPointer) {\r\n                if (undefined === handle.$$.smartPtr) {\r\n                    throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\r\n                }\r\n                switch (this.sharingPolicy) {\r\n                    case 0:\r\n                        if (handle.$$.smartPtrType === this) {\r\n                            ptr = handle.$$.smartPtr;\r\n                        } else {\r\n                            throwBindingError(\r\n                                `Cannot convert argument of type ${handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name} to parameter type ${this.name}`,\r\n                            );\r\n                        }\r\n                        break;\r\n                    case 1:\r\n                        ptr = handle.$$.smartPtr;\r\n                        break;\r\n                    case 2:\r\n                        if (handle.$$.smartPtrType === this) {\r\n                            ptr = handle.$$.smartPtr;\r\n                        } else {\r\n                            var clonedHandle = handle[\"clone\"]();\r\n                            ptr = this.rawShare(\r\n                                ptr,\r\n                                Emval.toHandle(() => clonedHandle[\"delete\"]()),\r\n                            );\r\n                            if (destructors !== null) {\r\n                                destructors.push(this.rawDestructor, ptr);\r\n                            }\r\n                        }\r\n                        break;\r\n                    default:\r\n                        throwBindingError(\"Unsupporting sharing policy\");\r\n                }\r\n            }\r\n            return ptr;\r\n        }\r\n        function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\r\n            if (handle === null) {\r\n                if (this.isReference) {\r\n                    throwBindingError(`null is not a valid ${this.name}`);\r\n                }\r\n                return 0;\r\n            }\r\n            if (!handle.$$) {\r\n                throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\r\n            }\r\n            if (!handle.$$.ptr) {\r\n                throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\r\n            }\r\n            if (handle.$$.ptrType.isConst) {\r\n                throwBindingError(\r\n                    `Cannot convert argument of type ${handle.$$.ptrType.name} to parameter type ${this.name}`,\r\n                );\r\n            }\r\n            var handleClass = handle.$$.ptrType.registeredClass;\r\n            var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\r\n            return ptr;\r\n        }\r\n        var downcastPointer = (ptr, ptrClass, desiredClass) => {\r\n            if (ptrClass === desiredClass) {\r\n                return ptr;\r\n            }\r\n            if (undefined === desiredClass.baseClass) {\r\n                return null;\r\n            }\r\n            var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\r\n            if (rv === null) {\r\n                return null;\r\n            }\r\n            return desiredClass.downcast(rv);\r\n        };\r\n        var registeredInstances = {};\r\n        var getBasestPointer = (class_, ptr) => {\r\n            if (ptr === undefined) {\r\n                throwBindingError(\"ptr should not be undefined\");\r\n            }\r\n            while (class_.baseClass) {\r\n                ptr = class_.upcast(ptr);\r\n                class_ = class_.baseClass;\r\n            }\r\n            return ptr;\r\n        };\r\n        var getInheritedInstance = (class_, ptr) => {\r\n            ptr = getBasestPointer(class_, ptr);\r\n            return registeredInstances[ptr];\r\n        };\r\n        var makeClassHandle = (prototype, record) => {\r\n            if (!record.ptrType || !record.ptr) {\r\n                throwInternalError(\"makeClassHandle requires ptr and ptrType\");\r\n            }\r\n            var hasSmartPtrType = !!record.smartPtrType;\r\n            var hasSmartPtr = !!record.smartPtr;\r\n            if (hasSmartPtrType !== hasSmartPtr) {\r\n                throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\r\n            }\r\n            record.count = { value: 1 };\r\n            return attachFinalizer(Object.create(prototype, { $$: { value: record, writable: true } }));\r\n        };\r\n        function RegisteredPointer_fromWireType(ptr) {\r\n            var rawPointer = this.getPointee(ptr);\r\n            if (!rawPointer) {\r\n                this.destructor(ptr);\r\n                return null;\r\n            }\r\n            var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\r\n            if (undefined !== registeredInstance) {\r\n                if (0 === registeredInstance.$$.count.value) {\r\n                    registeredInstance.$$.ptr = rawPointer;\r\n                    registeredInstance.$$.smartPtr = ptr;\r\n                    return registeredInstance[\"clone\"]();\r\n                } else {\r\n                    var rv = registeredInstance[\"clone\"]();\r\n                    this.destructor(ptr);\r\n                    return rv;\r\n                }\r\n            }\r\n            function makeDefaultHandle() {\r\n                if (this.isSmartPointer) {\r\n                    return makeClassHandle(this.registeredClass.instancePrototype, {\r\n                        ptrType: this.pointeeType,\r\n                        ptr: rawPointer,\r\n                        smartPtrType: this,\r\n                        smartPtr: ptr,\r\n                    });\r\n                } else {\r\n                    return makeClassHandle(this.registeredClass.instancePrototype, { ptrType: this, ptr });\r\n                }\r\n            }\r\n            var actualType = this.registeredClass.getActualType(rawPointer);\r\n            var registeredPointerRecord = registeredPointers[actualType];\r\n            if (!registeredPointerRecord) {\r\n                return makeDefaultHandle.call(this);\r\n            }\r\n            var toType;\r\n            if (this.isConst) {\r\n                toType = registeredPointerRecord.constPointerType;\r\n            } else {\r\n                toType = registeredPointerRecord.pointerType;\r\n            }\r\n            var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\r\n            if (dp === null) {\r\n                return makeDefaultHandle.call(this);\r\n            }\r\n            if (this.isSmartPointer) {\r\n                return makeClassHandle(toType.registeredClass.instancePrototype, {\r\n                    ptrType: toType,\r\n                    ptr: dp,\r\n                    smartPtrType: this,\r\n                    smartPtr: ptr,\r\n                });\r\n            } else {\r\n                return makeClassHandle(toType.registeredClass.instancePrototype, {\r\n                    ptrType: toType,\r\n                    ptr: dp,\r\n                });\r\n            }\r\n        }\r\n        var init_RegisteredPointer = () => {\r\n            Object.assign(RegisteredPointer.prototype, {\r\n                getPointee(ptr) {\r\n                    if (this.rawGetPointee) {\r\n                        ptr = this.rawGetPointee(ptr);\r\n                    }\r\n                    return ptr;\r\n                },\r\n                destructor(ptr) {\r\n                    this.rawDestructor?.(ptr);\r\n                },\r\n                argPackAdvance: GenericWireTypeSize,\r\n                readValueFromPointer: readPointer,\r\n                fromWireType: RegisteredPointer_fromWireType,\r\n            });\r\n        };\r\n        function RegisteredPointer(\r\n            name,\r\n            registeredClass,\r\n            isReference,\r\n            isConst,\r\n            isSmartPointer,\r\n            pointeeType,\r\n            sharingPolicy,\r\n            rawGetPointee,\r\n            rawConstructor,\r\n            rawShare,\r\n            rawDestructor,\r\n        ) {\r\n            this.name = name;\r\n            this.registeredClass = registeredClass;\r\n            this.isReference = isReference;\r\n            this.isConst = isConst;\r\n            this.isSmartPointer = isSmartPointer;\r\n            this.pointeeType = pointeeType;\r\n            this.sharingPolicy = sharingPolicy;\r\n            this.rawGetPointee = rawGetPointee;\r\n            this.rawConstructor = rawConstructor;\r\n            this.rawShare = rawShare;\r\n            this.rawDestructor = rawDestructor;\r\n            if (!isSmartPointer && registeredClass.baseClass === undefined) {\r\n                if (isConst) {\r\n                    this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\r\n                    this.destructorFunction = null;\r\n                } else {\r\n                    this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\r\n                    this.destructorFunction = null;\r\n                }\r\n            } else {\r\n                this[\"toWireType\"] = genericPointerToWireType;\r\n            }\r\n        }\r\n        var replacePublicSymbol = (name, value, numArguments) => {\r\n            if (!Module.hasOwnProperty(name)) {\r\n                throwInternalError(\"Replacing nonexistent public symbol\");\r\n            }\r\n            if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\r\n                Module[name].overloadTable[numArguments] = value;\r\n            } else {\r\n                Module[name] = value;\r\n                Module[name].argCount = numArguments;\r\n            }\r\n        };\r\n        var wasmTable;\r\n        var getWasmTableEntry = (funcPtr) => wasmTable.get(funcPtr);\r\n        var dynCall = (sig, ptr, args = [], promising = false) => {\r\n            var func = getWasmTableEntry(ptr);\r\n            var rtn = func(...args);\r\n            return sig[0] == \"p\" ? rtn >>> 0 : rtn;\r\n        };\r\n        var getDynCaller =\r\n            (sig, ptr, promising = false) =>\r\n            (...args) =>\r\n                dynCall(sig, ptr, args, promising);\r\n        var embind__requireFunction = (signature, rawFunction, isAsync = false) => {\r\n            signature = readLatin1String(signature);\r\n            function makeDynCaller() {\r\n                if (signature.includes(\"p\")) {\r\n                    return getDynCaller(signature, rawFunction, isAsync);\r\n                }\r\n                var rtn = getWasmTableEntry(rawFunction);\r\n                return rtn;\r\n            }\r\n            var fp = makeDynCaller();\r\n            if (typeof fp != \"function\") {\r\n                throwBindingError(`unknown function pointer with signature ${signature}: ${rawFunction}`);\r\n            }\r\n            return fp;\r\n        };\r\n        class UnboundTypeError extends Error {}\r\n        var getTypeName = (type) => {\r\n            var ptr = ___getTypeName(type);\r\n            var rv = readLatin1String(ptr);\r\n            _free(ptr);\r\n            return rv;\r\n        };\r\n        var throwUnboundTypeError = (message, types) => {\r\n            var unboundTypes = [];\r\n            var seen = {};\r\n            function visit(type) {\r\n                if (seen[type]) {\r\n                    return;\r\n                }\r\n                if (registeredTypes[type]) {\r\n                    return;\r\n                }\r\n                if (typeDependencies[type]) {\r\n                    typeDependencies[type].forEach(visit);\r\n                    return;\r\n                }\r\n                unboundTypes.push(type);\r\n                seen[type] = true;\r\n            }\r\n            types.forEach(visit);\r\n            throw new UnboundTypeError(`${message}: ` + unboundTypes.map(getTypeName).join([\", \"]));\r\n        };\r\n        function __embind_register_class(\r\n            rawType,\r\n            rawPointerType,\r\n            rawConstPointerType,\r\n            baseClassRawType,\r\n            getActualTypeSignature,\r\n            getActualType,\r\n            upcastSignature,\r\n            upcast,\r\n            downcastSignature,\r\n            downcast,\r\n            name,\r\n            destructorSignature,\r\n            rawDestructor,\r\n        ) {\r\n            rawType >>>= 0;\r\n            rawPointerType >>>= 0;\r\n            rawConstPointerType >>>= 0;\r\n            baseClassRawType >>>= 0;\r\n            getActualTypeSignature >>>= 0;\r\n            getActualType >>>= 0;\r\n            upcastSignature >>>= 0;\r\n            upcast >>>= 0;\r\n            downcastSignature >>>= 0;\r\n            downcast >>>= 0;\r\n            name >>>= 0;\r\n            destructorSignature >>>= 0;\r\n            rawDestructor >>>= 0;\r\n            name = readLatin1String(name);\r\n            getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\r\n            upcast &&= embind__requireFunction(upcastSignature, upcast);\r\n            downcast &&= embind__requireFunction(downcastSignature, downcast);\r\n            rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\r\n            var legalFunctionName = makeLegalFunctionName(name);\r\n            exposePublicSymbol(legalFunctionName, function () {\r\n                throwUnboundTypeError(`Cannot construct ${name} due to unbound types`, [baseClassRawType]);\r\n            });\r\n            whenDependentTypesAreResolved(\r\n                [rawType, rawPointerType, rawConstPointerType],\r\n                baseClassRawType ? [baseClassRawType] : [],\r\n                (base) => {\r\n                    base = base[0];\r\n                    var baseClass;\r\n                    var basePrototype;\r\n                    if (baseClassRawType) {\r\n                        baseClass = base.registeredClass;\r\n                        basePrototype = baseClass.instancePrototype;\r\n                    } else {\r\n                        basePrototype = ClassHandle.prototype;\r\n                    }\r\n                    var constructor = createNamedFunction(name, function (...args) {\r\n                        if (Object.getPrototypeOf(this) !== instancePrototype) {\r\n                            throw new BindingError(`Use 'new' to construct ${name}`);\r\n                        }\r\n                        if (undefined === registeredClass.constructor_body) {\r\n                            throw new BindingError(`${name} has no accessible constructor`);\r\n                        }\r\n                        var body = registeredClass.constructor_body[args.length];\r\n                        if (undefined === body) {\r\n                            throw new BindingError(\r\n                                `Tried to invoke ctor of ${name} with invalid number of parameters (${args.length}) - expected (${Object.keys(registeredClass.constructor_body).toString()}) parameters instead!`,\r\n                            );\r\n                        }\r\n                        return body.apply(this, args);\r\n                    });\r\n                    var instancePrototype = Object.create(basePrototype, {\r\n                        constructor: { value: constructor },\r\n                    });\r\n                    constructor.prototype = instancePrototype;\r\n                    var registeredClass = new RegisteredClass(\r\n                        name,\r\n                        constructor,\r\n                        instancePrototype,\r\n                        rawDestructor,\r\n                        baseClass,\r\n                        getActualType,\r\n                        upcast,\r\n                        downcast,\r\n                    );\r\n                    if (registeredClass.baseClass) {\r\n                        registeredClass.baseClass.__derivedClasses ??= [];\r\n                        registeredClass.baseClass.__derivedClasses.push(registeredClass);\r\n                    }\r\n                    var referenceConverter = new RegisteredPointer(\r\n                        name,\r\n                        registeredClass,\r\n                        true,\r\n                        false,\r\n                        false,\r\n                    );\r\n                    var pointerConverter = new RegisteredPointer(\r\n                        name + \"*\",\r\n                        registeredClass,\r\n                        false,\r\n                        false,\r\n                        false,\r\n                    );\r\n                    var constPointerConverter = new RegisteredPointer(\r\n                        name + \" const*\",\r\n                        registeredClass,\r\n                        false,\r\n                        true,\r\n                        false,\r\n                    );\r\n                    registeredPointers[rawType] = {\r\n                        pointerType: pointerConverter,\r\n                        constPointerType: constPointerConverter,\r\n                    };\r\n                    replacePublicSymbol(legalFunctionName, constructor);\r\n                    return [referenceConverter, pointerConverter, constPointerConverter];\r\n                },\r\n            );\r\n        }\r\n        function usesDestructorStack(argTypes) {\r\n            for (var i = 1; i < argTypes.length; ++i) {\r\n                if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        function createJsInvoker(argTypes, isClassMethodFunc, returns, isAsync) {\r\n            var needsDestructorStack = usesDestructorStack(argTypes);\r\n            var argCount = argTypes.length - 2;\r\n            var argsList = [];\r\n            var argsListWired = [\"fn\"];\r\n            if (isClassMethodFunc) {\r\n                argsListWired.push(\"thisWired\");\r\n            }\r\n            for (var i = 0; i < argCount; ++i) {\r\n                argsList.push(`arg${i}`);\r\n                argsListWired.push(`arg${i}Wired`);\r\n            }\r\n            argsList = argsList.join(\",\");\r\n            argsListWired = argsListWired.join(\",\");\r\n            var invokerFnBody = `return function (${argsList}) {\\n`;\r\n            if (needsDestructorStack) {\r\n                invokerFnBody += \"var destructors = [];\\n\";\r\n            }\r\n            var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\r\n            var args1 = [\r\n                \"humanName\",\r\n                \"throwBindingError\",\r\n                \"invoker\",\r\n                \"fn\",\r\n                \"runDestructors\",\r\n                \"retType\",\r\n                \"classParam\",\r\n            ];\r\n            if (isClassMethodFunc) {\r\n                invokerFnBody += `var thisWired = classParam['toWireType'](${dtorStack}, this);\\n`;\r\n            }\r\n            for (var i = 0; i < argCount; ++i) {\r\n                invokerFnBody += `var arg${i}Wired = argType${i}['toWireType'](${dtorStack}, arg${i});\\n`;\r\n                args1.push(`argType${i}`);\r\n            }\r\n            invokerFnBody += (returns || isAsync ? \"var rv = \" : \"\") + `invoker(${argsListWired});\\n`;\r\n            if (needsDestructorStack) {\r\n                invokerFnBody += \"runDestructors(destructors);\\n\";\r\n            } else {\r\n                for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\r\n                    var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\r\n                    if (argTypes[i].destructorFunction !== null) {\r\n                        invokerFnBody += `${paramName}_dtor(${paramName});\\n`;\r\n                        args1.push(`${paramName}_dtor`);\r\n                    }\r\n                }\r\n            }\r\n            if (returns) {\r\n                invokerFnBody += \"var ret = retType['fromWireType'](rv);\\n\" + \"return ret;\\n\";\r\n            } else {\r\n            }\r\n            invokerFnBody += \"}\\n\";\r\n            return [args1, invokerFnBody];\r\n        }\r\n        function craftInvokerFunction(\r\n            humanName,\r\n            argTypes,\r\n            classType,\r\n            cppInvokerFunc,\r\n            cppTargetFunc,\r\n            isAsync,\r\n        ) {\r\n            var argCount = argTypes.length;\r\n            if (argCount < 2) {\r\n                throwBindingError(\r\n                    \"argTypes array size mismatch! Must at least get return value and 'this' types!\",\r\n                );\r\n            }\r\n            var isClassMethodFunc = argTypes[1] !== null && classType !== null;\r\n            var needsDestructorStack = usesDestructorStack(argTypes);\r\n            var returns = argTypes[0].name !== \"void\";\r\n            var closureArgs = [\r\n                humanName,\r\n                throwBindingError,\r\n                cppInvokerFunc,\r\n                cppTargetFunc,\r\n                runDestructors,\r\n                argTypes[0],\r\n                argTypes[1],\r\n            ];\r\n            for (var i = 0; i < argCount - 2; ++i) {\r\n                closureArgs.push(argTypes[i + 2]);\r\n            }\r\n            if (!needsDestructorStack) {\r\n                for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\r\n                    if (argTypes[i].destructorFunction !== null) {\r\n                        closureArgs.push(argTypes[i].destructorFunction);\r\n                    }\r\n                }\r\n            }\r\n            let [args, invokerFnBody] = createJsInvoker(argTypes, isClassMethodFunc, returns, isAsync);\r\n            var invokerFn = new Function(...args, invokerFnBody)(...closureArgs);\r\n            return createNamedFunction(humanName, invokerFn);\r\n        }\r\n        var heap32VectorToArray = (count, firstElement) => {\r\n            var array = [];\r\n            for (var i = 0; i < count; i++) {\r\n                array.push(HEAPU32[((firstElement + i * 4) >>> 2) >>> 0]);\r\n            }\r\n            return array;\r\n        };\r\n        var getFunctionName = (signature) => {\r\n            signature = signature.trim();\r\n            const argsIndex = signature.indexOf(\"(\");\r\n            if (argsIndex === -1) return signature;\r\n            return signature.slice(0, argsIndex);\r\n        };\r\n        var __embind_register_class_class_function = function (\r\n            rawClassType,\r\n            methodName,\r\n            argCount,\r\n            rawArgTypesAddr,\r\n            invokerSignature,\r\n            rawInvoker,\r\n            fn,\r\n            isAsync,\r\n            isNonnullReturn,\r\n        ) {\r\n            rawClassType >>>= 0;\r\n            methodName >>>= 0;\r\n            rawArgTypesAddr >>>= 0;\r\n            invokerSignature >>>= 0;\r\n            rawInvoker >>>= 0;\r\n            fn >>>= 0;\r\n            var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\r\n            methodName = readLatin1String(methodName);\r\n            methodName = getFunctionName(methodName);\r\n            rawInvoker = embind__requireFunction(invokerSignature, rawInvoker, isAsync);\r\n            whenDependentTypesAreResolved([], [rawClassType], (classType) => {\r\n                classType = classType[0];\r\n                var humanName = `${classType.name}.${methodName}`;\r\n                function unboundTypesHandler() {\r\n                    throwUnboundTypeError(`Cannot call ${humanName} due to unbound types`, rawArgTypes);\r\n                }\r\n                if (methodName.startsWith(\"@@\")) {\r\n                    methodName = Symbol[methodName.substring(2)];\r\n                }\r\n                var proto = classType.registeredClass.constructor;\r\n                if (undefined === proto[methodName]) {\r\n                    unboundTypesHandler.argCount = argCount - 1;\r\n                    proto[methodName] = unboundTypesHandler;\r\n                } else {\r\n                    ensureOverloadTable(proto, methodName, humanName);\r\n                    proto[methodName].overloadTable[argCount - 1] = unboundTypesHandler;\r\n                }\r\n                whenDependentTypesAreResolved([], rawArgTypes, (argTypes) => {\r\n                    var invokerArgsArray = [argTypes[0], null].concat(argTypes.slice(1));\r\n                    var func = craftInvokerFunction(\r\n                        humanName,\r\n                        invokerArgsArray,\r\n                        null,\r\n                        rawInvoker,\r\n                        fn,\r\n                        isAsync,\r\n                    );\r\n                    if (undefined === proto[methodName].overloadTable) {\r\n                        func.argCount = argCount - 1;\r\n                        proto[methodName] = func;\r\n                    } else {\r\n                        proto[methodName].overloadTable[argCount - 1] = func;\r\n                    }\r\n                    if (classType.registeredClass.__derivedClasses) {\r\n                        for (const derivedClass of classType.registeredClass.__derivedClasses) {\r\n                            if (!derivedClass.constructor.hasOwnProperty(methodName)) {\r\n                                derivedClass.constructor[methodName] = func;\r\n                            }\r\n                        }\r\n                    }\r\n                    return [];\r\n                });\r\n                return [];\r\n            });\r\n        };\r\n        var __embind_register_class_constructor = function (\r\n            rawClassType,\r\n            argCount,\r\n            rawArgTypesAddr,\r\n            invokerSignature,\r\n            invoker,\r\n            rawConstructor,\r\n        ) {\r\n            rawClassType >>>= 0;\r\n            rawArgTypesAddr >>>= 0;\r\n            invokerSignature >>>= 0;\r\n            invoker >>>= 0;\r\n            rawConstructor >>>= 0;\r\n            var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\r\n            invoker = embind__requireFunction(invokerSignature, invoker);\r\n            whenDependentTypesAreResolved([], [rawClassType], (classType) => {\r\n                classType = classType[0];\r\n                var humanName = `constructor ${classType.name}`;\r\n                if (undefined === classType.registeredClass.constructor_body) {\r\n                    classType.registeredClass.constructor_body = [];\r\n                }\r\n                if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {\r\n                    throw new BindingError(\r\n                        `Cannot register multiple constructors with identical number of parameters (${argCount - 1}) for class '${classType.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`,\r\n                    );\r\n                }\r\n                classType.registeredClass.constructor_body[argCount - 1] = () => {\r\n                    throwUnboundTypeError(\r\n                        `Cannot construct ${classType.name} due to unbound types`,\r\n                        rawArgTypes,\r\n                    );\r\n                };\r\n                whenDependentTypesAreResolved([], rawArgTypes, (argTypes) => {\r\n                    argTypes.splice(1, 0, null);\r\n                    classType.registeredClass.constructor_body[argCount - 1] = craftInvokerFunction(\r\n                        humanName,\r\n                        argTypes,\r\n                        null,\r\n                        invoker,\r\n                        rawConstructor,\r\n                    );\r\n                    return [];\r\n                });\r\n                return [];\r\n            });\r\n        };\r\n        var __embind_register_class_function = function (\r\n            rawClassType,\r\n            methodName,\r\n            argCount,\r\n            rawArgTypesAddr,\r\n            invokerSignature,\r\n            rawInvoker,\r\n            context,\r\n            isPureVirtual,\r\n            isAsync,\r\n            isNonnullReturn,\r\n        ) {\r\n            rawClassType >>>= 0;\r\n            methodName >>>= 0;\r\n            rawArgTypesAddr >>>= 0;\r\n            invokerSignature >>>= 0;\r\n            rawInvoker >>>= 0;\r\n            context >>>= 0;\r\n            var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\r\n            methodName = readLatin1String(methodName);\r\n            methodName = getFunctionName(methodName);\r\n            rawInvoker = embind__requireFunction(invokerSignature, rawInvoker, isAsync);\r\n            whenDependentTypesAreResolved([], [rawClassType], (classType) => {\r\n                classType = classType[0];\r\n                var humanName = `${classType.name}.${methodName}`;\r\n                if (methodName.startsWith(\"@@\")) {\r\n                    methodName = Symbol[methodName.substring(2)];\r\n                }\r\n                if (isPureVirtual) {\r\n                    classType.registeredClass.pureVirtualFunctions.push(methodName);\r\n                }\r\n                function unboundTypesHandler() {\r\n                    throwUnboundTypeError(`Cannot call ${humanName} due to unbound types`, rawArgTypes);\r\n                }\r\n                var proto = classType.registeredClass.instancePrototype;\r\n                var method = proto[methodName];\r\n                if (\r\n                    undefined === method ||\r\n                    (undefined === method.overloadTable &&\r\n                        method.className !== classType.name &&\r\n                        method.argCount === argCount - 2)\r\n                ) {\r\n                    unboundTypesHandler.argCount = argCount - 2;\r\n                    unboundTypesHandler.className = classType.name;\r\n                    proto[methodName] = unboundTypesHandler;\r\n                } else {\r\n                    ensureOverloadTable(proto, methodName, humanName);\r\n                    proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\r\n                }\r\n                whenDependentTypesAreResolved([], rawArgTypes, (argTypes) => {\r\n                    var memberFunction = craftInvokerFunction(\r\n                        humanName,\r\n                        argTypes,\r\n                        classType,\r\n                        rawInvoker,\r\n                        context,\r\n                        isAsync,\r\n                    );\r\n                    if (undefined === proto[methodName].overloadTable) {\r\n                        memberFunction.argCount = argCount - 2;\r\n                        proto[methodName] = memberFunction;\r\n                    } else {\r\n                        proto[methodName].overloadTable[argCount - 2] = memberFunction;\r\n                    }\r\n                    return [];\r\n                });\r\n                return [];\r\n            });\r\n        };\r\n        var validateThis = (this_, classType, humanName) => {\r\n            if (!(this_ instanceof Object)) {\r\n                throwBindingError(`${humanName} with invalid \"this\": ${this_}`);\r\n            }\r\n            if (!(this_ instanceof classType.registeredClass.constructor)) {\r\n                throwBindingError(`${humanName} incompatible with \"this\" of type ${this_.constructor.name}`);\r\n            }\r\n            if (!this_.$$.ptr) {\r\n                throwBindingError(`cannot call emscripten binding method ${humanName} on deleted object`);\r\n            }\r\n            return upcastPointer(this_.$$.ptr, this_.$$.ptrType.registeredClass, classType.registeredClass);\r\n        };\r\n        var __embind_register_class_property = function (\r\n            classType,\r\n            fieldName,\r\n            getterReturnType,\r\n            getterSignature,\r\n            getter,\r\n            getterContext,\r\n            setterArgumentType,\r\n            setterSignature,\r\n            setter,\r\n            setterContext,\r\n        ) {\r\n            classType >>>= 0;\r\n            fieldName >>>= 0;\r\n            getterReturnType >>>= 0;\r\n            getterSignature >>>= 0;\r\n            getter >>>= 0;\r\n            getterContext >>>= 0;\r\n            setterArgumentType >>>= 0;\r\n            setterSignature >>>= 0;\r\n            setter >>>= 0;\r\n            setterContext >>>= 0;\r\n            fieldName = readLatin1String(fieldName);\r\n            getter = embind__requireFunction(getterSignature, getter);\r\n            whenDependentTypesAreResolved([], [classType], (classType) => {\r\n                classType = classType[0];\r\n                var humanName = `${classType.name}.${fieldName}`;\r\n                var desc = {\r\n                    get() {\r\n                        throwUnboundTypeError(`Cannot access ${humanName} due to unbound types`, [\r\n                            getterReturnType,\r\n                            setterArgumentType,\r\n                        ]);\r\n                    },\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                };\r\n                if (setter) {\r\n                    desc.set = () =>\r\n                        throwUnboundTypeError(`Cannot access ${humanName} due to unbound types`, [\r\n                            getterReturnType,\r\n                            setterArgumentType,\r\n                        ]);\r\n                } else {\r\n                    desc.set = (v) => throwBindingError(humanName + \" is a read-only property\");\r\n                }\r\n                Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);\r\n                whenDependentTypesAreResolved(\r\n                    [],\r\n                    setter ? [getterReturnType, setterArgumentType] : [getterReturnType],\r\n                    (types) => {\r\n                        var getterReturnType = types[0];\r\n                        var desc = {\r\n                            get() {\r\n                                var ptr = validateThis(this, classType, humanName + \" getter\");\r\n                                return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\r\n                            },\r\n                            enumerable: true,\r\n                        };\r\n                        if (setter) {\r\n                            setter = embind__requireFunction(setterSignature, setter);\r\n                            var setterArgumentType = types[1];\r\n                            desc.set = function (v) {\r\n                                var ptr = validateThis(this, classType, humanName + \" setter\");\r\n                                var destructors = [];\r\n                                setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, v));\r\n                                runDestructors(destructors);\r\n                            };\r\n                        }\r\n                        Object.defineProperty(classType.registeredClass.instancePrototype, fieldName, desc);\r\n                        return [];\r\n                    },\r\n                );\r\n                return [];\r\n            });\r\n        };\r\n        var emval_freelist = [];\r\n        var emval_handles = [];\r\n        function __emval_decref(handle) {\r\n            handle >>>= 0;\r\n            if (handle > 9 && 0 === --emval_handles[handle + 1]) {\r\n                emval_handles[handle] = undefined;\r\n                emval_freelist.push(handle);\r\n            }\r\n        }\r\n        var count_emval_handles = () => emval_handles.length / 2 - 5 - emval_freelist.length;\r\n        var init_emval = () => {\r\n            emval_handles.push(0, 1, undefined, 1, null, 1, true, 1, false, 1);\r\n            Module[\"count_emval_handles\"] = count_emval_handles;\r\n        };\r\n        var Emval = {\r\n            toValue: (handle) => {\r\n                if (!handle) {\r\n                    throwBindingError(`Cannot use deleted val. handle = ${handle}`);\r\n                }\r\n                return emval_handles[handle];\r\n            },\r\n            toHandle: (value) => {\r\n                switch (value) {\r\n                    case undefined:\r\n                        return 2;\r\n                    case null:\r\n                        return 4;\r\n                    case true:\r\n                        return 6;\r\n                    case false:\r\n                        return 8;\r\n                    default: {\r\n                        const handle = emval_freelist.pop() || emval_handles.length;\r\n                        emval_handles[handle] = value;\r\n                        emval_handles[handle + 1] = 1;\r\n                        return handle;\r\n                    }\r\n                }\r\n            },\r\n        };\r\n        var EmValType = {\r\n            name: \"emscripten::val\",\r\n            fromWireType: (handle) => {\r\n                var rv = Emval.toValue(handle);\r\n                __emval_decref(handle);\r\n                return rv;\r\n            },\r\n            toWireType: (destructors, value) => Emval.toHandle(value),\r\n            argPackAdvance: GenericWireTypeSize,\r\n            readValueFromPointer: readPointer,\r\n            destructorFunction: null,\r\n        };\r\n        function __embind_register_emval(rawType) {\r\n            rawType >>>= 0;\r\n            return registerType(rawType, EmValType);\r\n        }\r\n        var enumReadValueFromPointer = (name, width, signed) => {\r\n            switch (width) {\r\n                case 1:\r\n                    return signed\r\n                        ? function (pointer) {\r\n                              return this[\"fromWireType\"](HEAP8[pointer >>> 0]);\r\n                          }\r\n                        : function (pointer) {\r\n                              return this[\"fromWireType\"](HEAPU8[pointer >>> 0]);\r\n                          };\r\n                case 2:\r\n                    return signed\r\n                        ? function (pointer) {\r\n                              return this[\"fromWireType\"](HEAP16[(pointer >>> 1) >>> 0]);\r\n                          }\r\n                        : function (pointer) {\r\n                              return this[\"fromWireType\"](HEAPU16[(pointer >>> 1) >>> 0]);\r\n                          };\r\n                case 4:\r\n                    return signed\r\n                        ? function (pointer) {\r\n                              return this[\"fromWireType\"](HEAP32[(pointer >>> 2) >>> 0]);\r\n                          }\r\n                        : function (pointer) {\r\n                              return this[\"fromWireType\"](HEAPU32[(pointer >>> 2) >>> 0]);\r\n                          };\r\n                default:\r\n                    throw new TypeError(`invalid integer width (${width}): ${name}`);\r\n            }\r\n        };\r\n        function __embind_register_enum(rawType, name, size, isSigned) {\r\n            rawType >>>= 0;\r\n            name >>>= 0;\r\n            size >>>= 0;\r\n            name = readLatin1String(name);\r\n            function ctor() {}\r\n            ctor.values = {};\r\n            registerType(rawType, {\r\n                name,\r\n                constructor: ctor,\r\n                fromWireType: function (c) {\r\n                    return this.constructor.values[c];\r\n                },\r\n                toWireType: (destructors, c) => c.value,\r\n                argPackAdvance: GenericWireTypeSize,\r\n                readValueFromPointer: enumReadValueFromPointer(name, size, isSigned),\r\n                destructorFunction: null,\r\n            });\r\n            exposePublicSymbol(name, ctor);\r\n        }\r\n        var requireRegisteredType = (rawType, humanName) => {\r\n            var impl = registeredTypes[rawType];\r\n            if (undefined === impl) {\r\n                throwBindingError(`${humanName} has unknown type ${getTypeName(rawType)}`);\r\n            }\r\n            return impl;\r\n        };\r\n        function __embind_register_enum_value(rawEnumType, name, enumValue) {\r\n            rawEnumType >>>= 0;\r\n            name >>>= 0;\r\n            var enumType = requireRegisteredType(rawEnumType, \"enum\");\r\n            name = readLatin1String(name);\r\n            var Enum = enumType.constructor;\r\n            var Value = Object.create(enumType.constructor.prototype, {\r\n                value: { value: enumValue },\r\n                constructor: { value: createNamedFunction(`${enumType.name}_${name}`, function () {}) },\r\n            });\r\n            Enum.values[enumValue] = Value;\r\n            Enum[name] = Value;\r\n        }\r\n        var floatReadValueFromPointer = (name, width) => {\r\n            switch (width) {\r\n                case 4:\r\n                    return function (pointer) {\r\n                        return this[\"fromWireType\"](HEAPF32[(pointer >>> 2) >>> 0]);\r\n                    };\r\n                case 8:\r\n                    return function (pointer) {\r\n                        return this[\"fromWireType\"](HEAPF64[(pointer >>> 3) >>> 0]);\r\n                    };\r\n                default:\r\n                    throw new TypeError(`invalid float width (${width}): ${name}`);\r\n            }\r\n        };\r\n        var __embind_register_float = function (rawType, name, size) {\r\n            rawType >>>= 0;\r\n            name >>>= 0;\r\n            size >>>= 0;\r\n            name = readLatin1String(name);\r\n            registerType(rawType, {\r\n                name,\r\n                fromWireType: (value) => value,\r\n                toWireType: (destructors, value) => value,\r\n                argPackAdvance: GenericWireTypeSize,\r\n                readValueFromPointer: floatReadValueFromPointer(name, size),\r\n                destructorFunction: null,\r\n            });\r\n        };\r\n        function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {\r\n            primitiveType >>>= 0;\r\n            name >>>= 0;\r\n            size >>>= 0;\r\n            name = readLatin1String(name);\r\n            if (maxRange === -1) {\r\n                maxRange = 4294967295;\r\n            }\r\n            var fromWireType = (value) => value;\r\n            if (minRange === 0) {\r\n                var bitshift = 32 - 8 * size;\r\n                fromWireType = (value) => (value << bitshift) >>> bitshift;\r\n            }\r\n            var isUnsignedType = name.includes(\"unsigned\");\r\n            var checkAssertions = (value, toTypeName) => {};\r\n            var toWireType;\r\n            if (isUnsignedType) {\r\n                toWireType = function (destructors, value) {\r\n                    checkAssertions(value, this.name);\r\n                    return value >>> 0;\r\n                };\r\n            } else {\r\n                toWireType = function (destructors, value) {\r\n                    checkAssertions(value, this.name);\r\n                    return value;\r\n                };\r\n            }\r\n            registerType(primitiveType, {\r\n                name,\r\n                fromWireType,\r\n                toWireType,\r\n                argPackAdvance: GenericWireTypeSize,\r\n                readValueFromPointer: integerReadValueFromPointer(name, size, minRange !== 0),\r\n                destructorFunction: null,\r\n            });\r\n        }\r\n        function __embind_register_memory_view(rawType, dataTypeIndex, name) {\r\n            rawType >>>= 0;\r\n            name >>>= 0;\r\n            var typeMapping = [\r\n                Int8Array,\r\n                Uint8Array,\r\n                Int16Array,\r\n                Uint16Array,\r\n                Int32Array,\r\n                Uint32Array,\r\n                Float32Array,\r\n                Float64Array,\r\n                BigInt64Array,\r\n                BigUint64Array,\r\n            ];\r\n            var TA = typeMapping[dataTypeIndex];\r\n            function decodeMemoryView(handle) {\r\n                var size = HEAPU32[(handle >>> 2) >>> 0];\r\n                var data = HEAPU32[((handle + 4) >>> 2) >>> 0];\r\n                return new TA(HEAP8.buffer, data, size);\r\n            }\r\n            name = readLatin1String(name);\r\n            registerType(\r\n                rawType,\r\n                {\r\n                    name,\r\n                    fromWireType: decodeMemoryView,\r\n                    argPackAdvance: GenericWireTypeSize,\r\n                    readValueFromPointer: decodeMemoryView,\r\n                },\r\n                { ignoreDuplicateRegistrations: true },\r\n            );\r\n        }\r\n        var EmValOptionalType = Object.assign({ optional: true }, EmValType);\r\n        function __embind_register_optional(rawOptionalType, rawType) {\r\n            rawOptionalType >>>= 0;\r\n            rawType >>>= 0;\r\n            registerType(rawOptionalType, EmValOptionalType);\r\n        }\r\n        var stringToUTF8 = (str, outPtr, maxBytesToWrite) =>\r\n            stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\r\n        function __embind_register_std_string(rawType, name) {\r\n            rawType >>>= 0;\r\n            name >>>= 0;\r\n            name = readLatin1String(name);\r\n            var stdStringIsUTF8 = true;\r\n            registerType(rawType, {\r\n                name,\r\n                fromWireType(value) {\r\n                    var length = HEAPU32[(value >>> 2) >>> 0];\r\n                    var payload = value + 4;\r\n                    var str;\r\n                    if (stdStringIsUTF8) {\r\n                        var decodeStartPtr = payload;\r\n                        for (var i = 0; i <= length; ++i) {\r\n                            var currentBytePtr = payload + i;\r\n                            if (i == length || HEAPU8[currentBytePtr >>> 0] == 0) {\r\n                                var maxRead = currentBytePtr - decodeStartPtr;\r\n                                var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\r\n                                if (str === undefined) {\r\n                                    str = stringSegment;\r\n                                } else {\r\n                                    str += String.fromCharCode(0);\r\n                                    str += stringSegment;\r\n                                }\r\n                                decodeStartPtr = currentBytePtr + 1;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        var a = new Array(length);\r\n                        for (var i = 0; i < length; ++i) {\r\n                            a[i] = String.fromCharCode(HEAPU8[(payload + i) >>> 0]);\r\n                        }\r\n                        str = a.join(\"\");\r\n                    }\r\n                    _free(value);\r\n                    return str;\r\n                },\r\n                toWireType(destructors, value) {\r\n                    if (value instanceof ArrayBuffer) {\r\n                        value = new Uint8Array(value);\r\n                    }\r\n                    var length;\r\n                    var valueIsOfTypeString = typeof value == \"string\";\r\n                    if (\r\n                        !(valueIsOfTypeString || (ArrayBuffer.isView(value) && value.BYTES_PER_ELEMENT == 1))\r\n                    ) {\r\n                        throwBindingError(\"Cannot pass non-string to std::string\");\r\n                    }\r\n                    if (stdStringIsUTF8 && valueIsOfTypeString) {\r\n                        length = lengthBytesUTF8(value);\r\n                    } else {\r\n                        length = value.length;\r\n                    }\r\n                    var base = _malloc(4 + length + 1);\r\n                    var ptr = base + 4;\r\n                    HEAPU32[(base >>> 2) >>> 0] = length;\r\n                    if (valueIsOfTypeString) {\r\n                        if (stdStringIsUTF8) {\r\n                            stringToUTF8(value, ptr, length + 1);\r\n                        } else {\r\n                            for (var i = 0; i < length; ++i) {\r\n                                var charCode = value.charCodeAt(i);\r\n                                if (charCode > 255) {\r\n                                    _free(base);\r\n                                    throwBindingError(\r\n                                        \"String has UTF-16 code units that do not fit in 8 bits\",\r\n                                    );\r\n                                }\r\n                                HEAPU8[(ptr + i) >>> 0] = charCode;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        HEAPU8.set(value, ptr >>> 0);\r\n                    }\r\n                    if (destructors !== null) {\r\n                        destructors.push(_free, base);\r\n                    }\r\n                    return base;\r\n                },\r\n                argPackAdvance: GenericWireTypeSize,\r\n                readValueFromPointer: readPointer,\r\n                destructorFunction(ptr) {\r\n                    _free(ptr);\r\n                },\r\n            });\r\n        }\r\n        var UTF16Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\r\n        var UTF16ToString = (ptr, maxBytesToRead) => {\r\n            var endPtr = ptr;\r\n            var idx = endPtr >> 1;\r\n            var maxIdx = idx + maxBytesToRead / 2;\r\n            while (!(idx >= maxIdx) && HEAPU16[idx >>> 0]) ++idx;\r\n            endPtr = idx << 1;\r\n            if (endPtr - ptr > 32 && UTF16Decoder)\r\n                return UTF16Decoder.decode(HEAPU8.subarray(ptr >>> 0, endPtr >>> 0));\r\n            var str = \"\";\r\n            for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\r\n                var codeUnit = HEAP16[((ptr + i * 2) >>> 1) >>> 0];\r\n                if (codeUnit == 0) break;\r\n                str += String.fromCharCode(codeUnit);\r\n            }\r\n            return str;\r\n        };\r\n        var stringToUTF16 = (str, outPtr, maxBytesToWrite) => {\r\n            maxBytesToWrite ??= 2147483647;\r\n            if (maxBytesToWrite < 2) return 0;\r\n            maxBytesToWrite -= 2;\r\n            var startPtr = outPtr;\r\n            var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\r\n            for (var i = 0; i < numCharsToWrite; ++i) {\r\n                var codeUnit = str.charCodeAt(i);\r\n                HEAP16[(outPtr >>> 1) >>> 0] = codeUnit;\r\n                outPtr += 2;\r\n            }\r\n            HEAP16[(outPtr >>> 1) >>> 0] = 0;\r\n            return outPtr - startPtr;\r\n        };\r\n        var lengthBytesUTF16 = (str) => str.length * 2;\r\n        var UTF32ToString = (ptr, maxBytesToRead) => {\r\n            var i = 0;\r\n            var str = \"\";\r\n            while (!(i >= maxBytesToRead / 4)) {\r\n                var utf32 = HEAP32[((ptr + i * 4) >>> 2) >>> 0];\r\n                if (utf32 == 0) break;\r\n                ++i;\r\n                if (utf32 >= 65536) {\r\n                    var ch = utf32 - 65536;\r\n                    str += String.fromCharCode(55296 | (ch >> 10), 56320 | (ch & 1023));\r\n                } else {\r\n                    str += String.fromCharCode(utf32);\r\n                }\r\n            }\r\n            return str;\r\n        };\r\n        var stringToUTF32 = (str, outPtr, maxBytesToWrite) => {\r\n            outPtr >>>= 0;\r\n            maxBytesToWrite ??= 2147483647;\r\n            if (maxBytesToWrite < 4) return 0;\r\n            var startPtr = outPtr;\r\n            var endPtr = startPtr + maxBytesToWrite - 4;\r\n            for (var i = 0; i < str.length; ++i) {\r\n                var codeUnit = str.charCodeAt(i);\r\n                if (codeUnit >= 55296 && codeUnit <= 57343) {\r\n                    var trailSurrogate = str.charCodeAt(++i);\r\n                    codeUnit = (65536 + ((codeUnit & 1023) << 10)) | (trailSurrogate & 1023);\r\n                }\r\n                HEAP32[(outPtr >>> 2) >>> 0] = codeUnit;\r\n                outPtr += 4;\r\n                if (outPtr + 4 > endPtr) break;\r\n            }\r\n            HEAP32[(outPtr >>> 2) >>> 0] = 0;\r\n            return outPtr - startPtr;\r\n        };\r\n        var lengthBytesUTF32 = (str) => {\r\n            var len = 0;\r\n            for (var i = 0; i < str.length; ++i) {\r\n                var codeUnit = str.charCodeAt(i);\r\n                if (codeUnit >= 55296 && codeUnit <= 57343) ++i;\r\n                len += 4;\r\n            }\r\n            return len;\r\n        };\r\n        var __embind_register_std_wstring = function (rawType, charSize, name) {\r\n            rawType >>>= 0;\r\n            charSize >>>= 0;\r\n            name >>>= 0;\r\n            name = readLatin1String(name);\r\n            var decodeString, encodeString, readCharAt, lengthBytesUTF;\r\n            if (charSize === 2) {\r\n                decodeString = UTF16ToString;\r\n                encodeString = stringToUTF16;\r\n                lengthBytesUTF = lengthBytesUTF16;\r\n                readCharAt = (pointer) => HEAPU16[(pointer >>> 1) >>> 0];\r\n            } else if (charSize === 4) {\r\n                decodeString = UTF32ToString;\r\n                encodeString = stringToUTF32;\r\n                lengthBytesUTF = lengthBytesUTF32;\r\n                readCharAt = (pointer) => HEAPU32[(pointer >>> 2) >>> 0];\r\n            }\r\n            registerType(rawType, {\r\n                name,\r\n                fromWireType: (value) => {\r\n                    var length = HEAPU32[(value >>> 2) >>> 0];\r\n                    var str;\r\n                    var decodeStartPtr = value + 4;\r\n                    for (var i = 0; i <= length; ++i) {\r\n                        var currentBytePtr = value + 4 + i * charSize;\r\n                        if (i == length || readCharAt(currentBytePtr) == 0) {\r\n                            var maxReadBytes = currentBytePtr - decodeStartPtr;\r\n                            var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\r\n                            if (str === undefined) {\r\n                                str = stringSegment;\r\n                            } else {\r\n                                str += String.fromCharCode(0);\r\n                                str += stringSegment;\r\n                            }\r\n                            decodeStartPtr = currentBytePtr + charSize;\r\n                        }\r\n                    }\r\n                    _free(value);\r\n                    return str;\r\n                },\r\n                toWireType: (destructors, value) => {\r\n                    if (!(typeof value == \"string\")) {\r\n                        throwBindingError(`Cannot pass non-string to C++ string type ${name}`);\r\n                    }\r\n                    var length = lengthBytesUTF(value);\r\n                    var ptr = _malloc(4 + length + charSize);\r\n                    HEAPU32[(ptr >>> 2) >>> 0] = length / charSize;\r\n                    encodeString(value, ptr + 4, length + charSize);\r\n                    if (destructors !== null) {\r\n                        destructors.push(_free, ptr);\r\n                    }\r\n                    return ptr;\r\n                },\r\n                argPackAdvance: GenericWireTypeSize,\r\n                readValueFromPointer: readPointer,\r\n                destructorFunction(ptr) {\r\n                    _free(ptr);\r\n                },\r\n            });\r\n        };\r\n        function __embind_register_user_type(rawType, name) {\r\n            rawType >>>= 0;\r\n            name >>>= 0;\r\n            __embind_register_emval(rawType);\r\n        }\r\n        function __embind_register_value_object(\r\n            rawType,\r\n            name,\r\n            constructorSignature,\r\n            rawConstructor,\r\n            destructorSignature,\r\n            rawDestructor,\r\n        ) {\r\n            rawType >>>= 0;\r\n            name >>>= 0;\r\n            constructorSignature >>>= 0;\r\n            rawConstructor >>>= 0;\r\n            destructorSignature >>>= 0;\r\n            rawDestructor >>>= 0;\r\n            structRegistrations[rawType] = {\r\n                name: readLatin1String(name),\r\n                rawConstructor: embind__requireFunction(constructorSignature, rawConstructor),\r\n                rawDestructor: embind__requireFunction(destructorSignature, rawDestructor),\r\n                fields: [],\r\n            };\r\n        }\r\n        function __embind_register_value_object_field(\r\n            structType,\r\n            fieldName,\r\n            getterReturnType,\r\n            getterSignature,\r\n            getter,\r\n            getterContext,\r\n            setterArgumentType,\r\n            setterSignature,\r\n            setter,\r\n            setterContext,\r\n        ) {\r\n            structType >>>= 0;\r\n            fieldName >>>= 0;\r\n            getterReturnType >>>= 0;\r\n            getterSignature >>>= 0;\r\n            getter >>>= 0;\r\n            getterContext >>>= 0;\r\n            setterArgumentType >>>= 0;\r\n            setterSignature >>>= 0;\r\n            setter >>>= 0;\r\n            setterContext >>>= 0;\r\n            structRegistrations[structType].fields.push({\r\n                fieldName: readLatin1String(fieldName),\r\n                getterReturnType,\r\n                getter: embind__requireFunction(getterSignature, getter),\r\n                getterContext,\r\n                setterArgumentType,\r\n                setter: embind__requireFunction(setterSignature, setter),\r\n                setterContext,\r\n            });\r\n        }\r\n        var __embind_register_void = function (rawType, name) {\r\n            rawType >>>= 0;\r\n            name >>>= 0;\r\n            name = readLatin1String(name);\r\n            registerType(rawType, {\r\n                isVoid: true,\r\n                name,\r\n                argPackAdvance: 0,\r\n                fromWireType: () => undefined,\r\n                toWireType: (destructors, o) => undefined,\r\n            });\r\n        };\r\n        var inetPton4 = (str) => {\r\n            var b = str.split(\".\");\r\n            for (var i = 0; i < 4; i++) {\r\n                var tmp = Number(b[i]);\r\n                if (isNaN(tmp)) return null;\r\n                b[i] = tmp;\r\n            }\r\n            return (b[0] | (b[1] << 8) | (b[2] << 16) | (b[3] << 24)) >>> 0;\r\n        };\r\n        var inetPton6 = (str) => {\r\n            var words;\r\n            var w, offset, z;\r\n            var valid6regx =\r\n                /^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/i;\r\n            var parts = [];\r\n            if (!valid6regx.test(str)) {\r\n                return null;\r\n            }\r\n            if (str === \"::\") {\r\n                return [0, 0, 0, 0, 0, 0, 0, 0];\r\n            }\r\n            if (str.startsWith(\"::\")) {\r\n                str = str.replace(\"::\", \"Z:\");\r\n            } else {\r\n                str = str.replace(\"::\", \":Z:\");\r\n            }\r\n            if (str.indexOf(\".\") > 0) {\r\n                str = str.replace(new RegExp(\"[.]\", \"g\"), \":\");\r\n                words = str.split(\":\");\r\n                words[words.length - 4] =\r\n                    Number(words[words.length - 4]) + Number(words[words.length - 3]) * 256;\r\n                words[words.length - 3] =\r\n                    Number(words[words.length - 2]) + Number(words[words.length - 1]) * 256;\r\n                words = words.slice(0, words.length - 2);\r\n            } else {\r\n                words = str.split(\":\");\r\n            }\r\n            offset = 0;\r\n            z = 0;\r\n            for (w = 0; w < words.length; w++) {\r\n                if (typeof words[w] == \"string\") {\r\n                    if (words[w] === \"Z\") {\r\n                        for (z = 0; z < 8 - words.length + 1; z++) {\r\n                            parts[w + z] = 0;\r\n                        }\r\n                        offset = z - 1;\r\n                    } else {\r\n                        parts[w + offset] = _htons(parseInt(words[w], 16));\r\n                    }\r\n                } else {\r\n                    parts[w + offset] = words[w];\r\n                }\r\n            }\r\n            return [\r\n                (parts[1] << 16) | parts[0],\r\n                (parts[3] << 16) | parts[2],\r\n                (parts[5] << 16) | parts[4],\r\n                (parts[7] << 16) | parts[6],\r\n            ];\r\n        };\r\n        var DNS = {\r\n            address_map: { id: 1, addrs: {}, names: {} },\r\n            lookup_name(name) {\r\n                var res = inetPton4(name);\r\n                if (res !== null) {\r\n                    return name;\r\n                }\r\n                res = inetPton6(name);\r\n                if (res !== null) {\r\n                    return name;\r\n                }\r\n                var addr;\r\n                if (DNS.address_map.addrs[name]) {\r\n                    addr = DNS.address_map.addrs[name];\r\n                } else {\r\n                    var id = DNS.address_map.id++;\r\n                    assert(id < 65535, \"exceeded max address mappings of 65535\");\r\n                    addr = \"172.29.\" + (id & 255) + \".\" + (id & 65280);\r\n                    DNS.address_map.names[addr] = name;\r\n                    DNS.address_map.addrs[name] = addr;\r\n                }\r\n                return addr;\r\n            },\r\n            lookup_addr(addr) {\r\n                if (DNS.address_map.names[addr]) {\r\n                    return DNS.address_map.names[addr];\r\n                }\r\n                return null;\r\n            },\r\n        };\r\n        function __emscripten_lookup_name(name) {\r\n            name >>>= 0;\r\n            var nameString = UTF8ToString(name);\r\n            return inetPton4(DNS.lookup_name(nameString));\r\n        }\r\n        var runtimeKeepaliveCounter = 0;\r\n        var __emscripten_runtime_keepalive_clear = () => {\r\n            noExitRuntime = false;\r\n            runtimeKeepaliveCounter = 0;\r\n        };\r\n        var emval_returnValue = (returnType, destructorsRef, handle) => {\r\n            var destructors = [];\r\n            var result = returnType[\"toWireType\"](destructors, handle);\r\n            if (destructors.length) {\r\n                HEAPU32[(destructorsRef >>> 2) >>> 0] = Emval.toHandle(destructors);\r\n            }\r\n            return result;\r\n        };\r\n        function __emval_as(handle, returnType, destructorsRef) {\r\n            handle >>>= 0;\r\n            returnType >>>= 0;\r\n            destructorsRef >>>= 0;\r\n            handle = Emval.toValue(handle);\r\n            returnType = requireRegisteredType(returnType, \"emval::as\");\r\n            return emval_returnValue(returnType, destructorsRef, handle);\r\n        }\r\n        var emval_symbols = {};\r\n        var getStringOrSymbol = (address) => {\r\n            var symbol = emval_symbols[address];\r\n            if (symbol === undefined) {\r\n                return readLatin1String(address);\r\n            }\r\n            return symbol;\r\n        };\r\n        var emval_methodCallers = [];\r\n        function __emval_call_method(caller, objHandle, methodName, destructorsRef, args) {\r\n            caller >>>= 0;\r\n            objHandle >>>= 0;\r\n            methodName >>>= 0;\r\n            destructorsRef >>>= 0;\r\n            args >>>= 0;\r\n            caller = emval_methodCallers[caller];\r\n            objHandle = Emval.toValue(objHandle);\r\n            methodName = getStringOrSymbol(methodName);\r\n            return caller(objHandle, objHandle[methodName], destructorsRef, args);\r\n        }\r\n        var emval_addMethodCaller = (caller) => {\r\n            var id = emval_methodCallers.length;\r\n            emval_methodCallers.push(caller);\r\n            return id;\r\n        };\r\n        var emval_lookupTypes = (argCount, argTypes) => {\r\n            var a = new Array(argCount);\r\n            for (var i = 0; i < argCount; ++i) {\r\n                a[i] = requireRegisteredType(HEAPU32[((argTypes + i * 4) >>> 2) >>> 0], `parameter ${i}`);\r\n            }\r\n            return a;\r\n        };\r\n        function __emval_get_method_caller(argCount, argTypes, kind) {\r\n            argTypes >>>= 0;\r\n            var types = emval_lookupTypes(argCount, argTypes);\r\n            var retType = types.shift();\r\n            argCount--;\r\n            var functionBody = `return function (obj, func, destructorsRef, args) {\\n`;\r\n            var offset = 0;\r\n            var argsList = [];\r\n            if (kind === 0) {\r\n                argsList.push(\"obj\");\r\n            }\r\n            var params = [\"retType\"];\r\n            var args = [retType];\r\n            for (var i = 0; i < argCount; ++i) {\r\n                argsList.push(`arg${i}`);\r\n                params.push(`argType${i}`);\r\n                args.push(types[i]);\r\n                functionBody += `  var arg${i} = argType${i}.readValueFromPointer(args${offset ? \"+\" + offset : \"\"});\\n`;\r\n                offset += types[i].argPackAdvance;\r\n            }\r\n            var invoker = kind === 1 ? \"new func\" : \"func.call\";\r\n            functionBody += `  var rv = ${invoker}(${argsList.join(\", \")});\\n`;\r\n            if (!retType.isVoid) {\r\n                params.push(\"emval_returnValue\");\r\n                args.push(emval_returnValue);\r\n                functionBody += \"  return emval_returnValue(retType, destructorsRef, rv);\\n\";\r\n            }\r\n            functionBody += \"};\\n\";\r\n            var invokerFunction = new Function(...params, functionBody)(...args);\r\n            var functionName = `methodCaller<(${types.map((t) => t.name).join(\", \")}) => ${retType.name}>`;\r\n            return emval_addMethodCaller(createNamedFunction(functionName, invokerFunction));\r\n        }\r\n        function __emval_get_property(handle, key) {\r\n            handle >>>= 0;\r\n            key >>>= 0;\r\n            handle = Emval.toValue(handle);\r\n            key = Emval.toValue(key);\r\n            return Emval.toHandle(handle[key]);\r\n        }\r\n        function __emval_incref(handle) {\r\n            handle >>>= 0;\r\n            if (handle > 9) {\r\n                emval_handles[handle + 1] += 1;\r\n            }\r\n        }\r\n        function __emval_new_array() {\r\n            return Emval.toHandle([]);\r\n        }\r\n        function __emval_new_array_from_memory_view(view) {\r\n            view >>>= 0;\r\n            view = Emval.toValue(view);\r\n            var a = new Array(view.length);\r\n            for (var i = 0; i < view.length; i++) a[i] = view[i];\r\n            return Emval.toHandle(a);\r\n        }\r\n        function __emval_new_cstring(v) {\r\n            v >>>= 0;\r\n            return Emval.toHandle(getStringOrSymbol(v));\r\n        }\r\n        function __emval_run_destructors(handle) {\r\n            handle >>>= 0;\r\n            var destructors = Emval.toValue(handle);\r\n            runDestructors(destructors);\r\n            __emval_decref(handle);\r\n        }\r\n        function __emval_take_value(type, arg) {\r\n            type >>>= 0;\r\n            arg >>>= 0;\r\n            type = requireRegisteredType(type, \"_emval_take_value\");\r\n            var v = type[\"readValueFromPointer\"](arg);\r\n            return Emval.toHandle(v);\r\n        }\r\n        var isLeapYear = (year) => year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\r\n        var MONTH_DAYS_LEAP_CUMULATIVE = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];\r\n        var MONTH_DAYS_REGULAR_CUMULATIVE = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\r\n        var ydayFromDate = (date) => {\r\n            var leap = isLeapYear(date.getFullYear());\r\n            var monthDaysCumulative = leap ? MONTH_DAYS_LEAP_CUMULATIVE : MONTH_DAYS_REGULAR_CUMULATIVE;\r\n            var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1;\r\n            return yday;\r\n        };\r\n        function __localtime_js(time, tmPtr) {\r\n            time = bigintToI53Checked(time);\r\n            tmPtr >>>= 0;\r\n            var date = new Date(time * 1e3);\r\n            HEAP32[(tmPtr >>> 2) >>> 0] = date.getSeconds();\r\n            HEAP32[((tmPtr + 4) >>> 2) >>> 0] = date.getMinutes();\r\n            HEAP32[((tmPtr + 8) >>> 2) >>> 0] = date.getHours();\r\n            HEAP32[((tmPtr + 12) >>> 2) >>> 0] = date.getDate();\r\n            HEAP32[((tmPtr + 16) >>> 2) >>> 0] = date.getMonth();\r\n            HEAP32[((tmPtr + 20) >>> 2) >>> 0] = date.getFullYear() - 1900;\r\n            HEAP32[((tmPtr + 24) >>> 2) >>> 0] = date.getDay();\r\n            var yday = ydayFromDate(date) | 0;\r\n            HEAP32[((tmPtr + 28) >>> 2) >>> 0] = yday;\r\n            HEAP32[((tmPtr + 36) >>> 2) >>> 0] = -(date.getTimezoneOffset() * 60);\r\n            var start = new Date(date.getFullYear(), 0, 1);\r\n            var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\r\n            var winterOffset = start.getTimezoneOffset();\r\n            var dst =\r\n                (summerOffset != winterOffset &&\r\n                    date.getTimezoneOffset() == Math.min(winterOffset, summerOffset)) | 0;\r\n            HEAP32[((tmPtr + 32) >>> 2) >>> 0] = dst;\r\n        }\r\n        var timers = {};\r\n        var handleException = (e) => {\r\n            if (e instanceof ExitStatus || e == \"unwind\") {\r\n                return EXITSTATUS;\r\n            }\r\n            quit_(1, e);\r\n        };\r\n        var keepRuntimeAlive = () => noExitRuntime || runtimeKeepaliveCounter > 0;\r\n        var _proc_exit = (code) => {\r\n            EXITSTATUS = code;\r\n            if (!keepRuntimeAlive()) {\r\n                Module[\"onExit\"]?.(code);\r\n                ABORT = true;\r\n            }\r\n            quit_(code, new ExitStatus(code));\r\n        };\r\n        var exitJS = (status, implicit) => {\r\n            EXITSTATUS = status;\r\n            _proc_exit(status);\r\n        };\r\n        var _exit = exitJS;\r\n        var maybeExit = () => {\r\n            if (!keepRuntimeAlive()) {\r\n                try {\r\n                    _exit(EXITSTATUS);\r\n                } catch (e) {\r\n                    handleException(e);\r\n                }\r\n            }\r\n        };\r\n        var callUserCallback = (func) => {\r\n            if (ABORT) {\r\n                return;\r\n            }\r\n            try {\r\n                func();\r\n                maybeExit();\r\n            } catch (e) {\r\n                handleException(e);\r\n            }\r\n        };\r\n        var _emscripten_get_now = () => performance.now();\r\n        var __setitimer_js = (which, timeout_ms) => {\r\n            if (timers[which]) {\r\n                clearTimeout(timers[which].id);\r\n                delete timers[which];\r\n            }\r\n            if (!timeout_ms) return 0;\r\n            var id = setTimeout(() => {\r\n                delete timers[which];\r\n                callUserCallback(() => __emscripten_timeout(which, _emscripten_get_now()));\r\n            }, timeout_ms);\r\n            timers[which] = { id, timeout_ms };\r\n            return 0;\r\n        };\r\n        var __tzset_js = function (timezone, daylight, std_name, dst_name) {\r\n            timezone >>>= 0;\r\n            daylight >>>= 0;\r\n            std_name >>>= 0;\r\n            dst_name >>>= 0;\r\n            var currentYear = new Date().getFullYear();\r\n            var winter = new Date(currentYear, 0, 1);\r\n            var summer = new Date(currentYear, 6, 1);\r\n            var winterOffset = winter.getTimezoneOffset();\r\n            var summerOffset = summer.getTimezoneOffset();\r\n            var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\r\n            HEAPU32[(timezone >>> 2) >>> 0] = stdTimezoneOffset * 60;\r\n            HEAP32[(daylight >>> 2) >>> 0] = Number(winterOffset != summerOffset);\r\n            var extractZone = (timezoneOffset) => {\r\n                var sign = timezoneOffset >= 0 ? \"-\" : \"+\";\r\n                var absOffset = Math.abs(timezoneOffset);\r\n                var hours = String(Math.floor(absOffset / 60)).padStart(2, \"0\");\r\n                var minutes = String(absOffset % 60).padStart(2, \"0\");\r\n                return `UTC${sign}${hours}${minutes}`;\r\n            };\r\n            var winterName = extractZone(winterOffset);\r\n            var summerName = extractZone(summerOffset);\r\n            if (summerOffset < winterOffset) {\r\n                stringToUTF8(winterName, std_name, 17);\r\n                stringToUTF8(summerName, dst_name, 17);\r\n            } else {\r\n                stringToUTF8(winterName, dst_name, 17);\r\n                stringToUTF8(summerName, std_name, 17);\r\n            }\r\n        };\r\n        var _emscripten_date_now = () => Date.now();\r\n        var nowIsMonotonic = 1;\r\n        var checkWasiClock = (clock_id) => clock_id >= 0 && clock_id <= 3;\r\n        function _clock_time_get(clk_id, ignored_precision, ptime) {\r\n            ignored_precision = bigintToI53Checked(ignored_precision);\r\n            ptime >>>= 0;\r\n            if (!checkWasiClock(clk_id)) {\r\n                return 28;\r\n            }\r\n            var now;\r\n            if (clk_id === 0) {\r\n                now = _emscripten_date_now();\r\n            } else if (nowIsMonotonic) {\r\n                now = _emscripten_get_now();\r\n            } else {\r\n                return 52;\r\n            }\r\n            var nsec = Math.round(now * 1e3 * 1e3);\r\n            HEAP64[ptime >>> 3] = BigInt(nsec);\r\n            return 0;\r\n        }\r\n        var getHeapMax = () => 4294901760;\r\n        function _emscripten_get_heap_max() {\r\n            return getHeapMax();\r\n        }\r\n        var alignMemory = (size, alignment) => Math.ceil(size / alignment) * alignment;\r\n        var growMemory = (size) => {\r\n            var b = wasmMemory.buffer;\r\n            var pages = ((size - b.byteLength + 65535) / 65536) | 0;\r\n            try {\r\n                wasmMemory.grow(pages);\r\n                updateMemoryViews();\r\n                return 1;\r\n            } catch (e) {}\r\n        };\r\n        function _emscripten_resize_heap(requestedSize) {\r\n            requestedSize >>>= 0;\r\n            var oldSize = HEAPU8.length;\r\n            var maxHeapSize = getHeapMax();\r\n            if (requestedSize > maxHeapSize) {\r\n                return false;\r\n            }\r\n            for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\r\n                var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\r\n                overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\r\n                var newSize = Math.min(\r\n                    maxHeapSize,\r\n                    alignMemory(Math.max(requestedSize, overGrownHeapSize), 65536),\r\n                );\r\n                var replacement = growMemory(newSize);\r\n                if (replacement) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        var ENV = {};\r\n        var getExecutableName = () => thisProgram || \"./this.program\";\r\n        var getEnvStrings = () => {\r\n            if (!getEnvStrings.strings) {\r\n                var lang =\r\n                    (\r\n                        (typeof navigator == \"object\" && navigator.languages && navigator.languages[0]) ||\r\n                        \"C\"\r\n                    ).replace(\"-\", \"_\") + \".UTF-8\";\r\n                var env = {\r\n                    USER: \"web_user\",\r\n                    LOGNAME: \"web_user\",\r\n                    PATH: \"/\",\r\n                    PWD: \"/\",\r\n                    HOME: \"/home/web_user\",\r\n                    LANG: lang,\r\n                    _: getExecutableName(),\r\n                };\r\n                for (var x in ENV) {\r\n                    if (ENV[x] === undefined) delete env[x];\r\n                    else env[x] = ENV[x];\r\n                }\r\n                var strings = [];\r\n                for (var x in env) {\r\n                    strings.push(`${x}=${env[x]}`);\r\n                }\r\n                getEnvStrings.strings = strings;\r\n            }\r\n            return getEnvStrings.strings;\r\n        };\r\n        function _environ_get(__environ, environ_buf) {\r\n            __environ >>>= 0;\r\n            environ_buf >>>= 0;\r\n            var bufSize = 0;\r\n            var envp = 0;\r\n            for (var string of getEnvStrings()) {\r\n                var ptr = environ_buf + bufSize;\r\n                HEAPU32[((__environ + envp) >>> 2) >>> 0] = ptr;\r\n                bufSize += stringToUTF8(string, ptr, Infinity) + 1;\r\n                envp += 4;\r\n            }\r\n            return 0;\r\n        }\r\n        function _environ_sizes_get(penviron_count, penviron_buf_size) {\r\n            penviron_count >>>= 0;\r\n            penviron_buf_size >>>= 0;\r\n            var strings = getEnvStrings();\r\n            HEAPU32[(penviron_count >>> 2) >>> 0] = strings.length;\r\n            var bufSize = 0;\r\n            for (var string of strings) {\r\n                bufSize += lengthBytesUTF8(string) + 1;\r\n            }\r\n            HEAPU32[(penviron_buf_size >>> 2) >>> 0] = bufSize;\r\n            return 0;\r\n        }\r\n        function _fd_close(fd) {\r\n            try {\r\n                var stream = SYSCALLS.getStreamFromFD(fd);\r\n                FS.close(stream);\r\n                return 0;\r\n            } catch (e) {\r\n                if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\r\n                return e.errno;\r\n            }\r\n        }\r\n        var doReadv = (stream, iov, iovcnt, offset) => {\r\n            var ret = 0;\r\n            for (var i = 0; i < iovcnt; i++) {\r\n                var ptr = HEAPU32[(iov >>> 2) >>> 0];\r\n                var len = HEAPU32[((iov + 4) >>> 2) >>> 0];\r\n                iov += 8;\r\n                var curr = FS.read(stream, HEAP8, ptr, len, offset);\r\n                if (curr < 0) return -1;\r\n                ret += curr;\r\n                if (curr < len) break;\r\n                if (typeof offset != \"undefined\") {\r\n                    offset += curr;\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n        function _fd_read(fd, iov, iovcnt, pnum) {\r\n            iov >>>= 0;\r\n            iovcnt >>>= 0;\r\n            pnum >>>= 0;\r\n            try {\r\n                var stream = SYSCALLS.getStreamFromFD(fd);\r\n                var num = doReadv(stream, iov, iovcnt);\r\n                HEAPU32[(pnum >>> 2) >>> 0] = num;\r\n                return 0;\r\n            } catch (e) {\r\n                if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\r\n                return e.errno;\r\n            }\r\n        }\r\n        function _fd_seek(fd, offset, whence, newOffset) {\r\n            offset = bigintToI53Checked(offset);\r\n            newOffset >>>= 0;\r\n            try {\r\n                if (isNaN(offset)) return 61;\r\n                var stream = SYSCALLS.getStreamFromFD(fd);\r\n                FS.llseek(stream, offset, whence);\r\n                HEAP64[newOffset >>> 3] = BigInt(stream.position);\r\n                if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;\r\n                return 0;\r\n            } catch (e) {\r\n                if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\r\n                return e.errno;\r\n            }\r\n        }\r\n        var doWritev = (stream, iov, iovcnt, offset) => {\r\n            var ret = 0;\r\n            for (var i = 0; i < iovcnt; i++) {\r\n                var ptr = HEAPU32[(iov >>> 2) >>> 0];\r\n                var len = HEAPU32[((iov + 4) >>> 2) >>> 0];\r\n                iov += 8;\r\n                var curr = FS.write(stream, HEAP8, ptr, len, offset);\r\n                if (curr < 0) return -1;\r\n                ret += curr;\r\n                if (curr < len) {\r\n                    break;\r\n                }\r\n                if (typeof offset != \"undefined\") {\r\n                    offset += curr;\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n        function _fd_write(fd, iov, iovcnt, pnum) {\r\n            iov >>>= 0;\r\n            iovcnt >>>= 0;\r\n            pnum >>>= 0;\r\n            try {\r\n                var stream = SYSCALLS.getStreamFromFD(fd);\r\n                var num = doWritev(stream, iov, iovcnt);\r\n                HEAPU32[(pnum >>> 2) >>> 0] = num;\r\n                return 0;\r\n            } catch (e) {\r\n                if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\r\n                return e.errno;\r\n            }\r\n        }\r\n        FS.createPreloadedFile = FS_createPreloadedFile;\r\n        FS.staticInit();\r\n        MEMFS.doesNotExistError = new FS.ErrnoError(44);\r\n        MEMFS.doesNotExistError.stack = \"<generic error, no stack>\";\r\n        embind_init_charCodes();\r\n        init_ClassHandle();\r\n        init_RegisteredPointer();\r\n        init_emval();\r\n        {\r\n            if (Module[\"noExitRuntime\"]) noExitRuntime = Module[\"noExitRuntime\"];\r\n            if (Module[\"preloadPlugins\"]) preloadPlugins = Module[\"preloadPlugins\"];\r\n            if (Module[\"print\"]) out = Module[\"print\"];\r\n            if (Module[\"printErr\"]) err = Module[\"printErr\"];\r\n            if (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\r\n            if (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\r\n            if (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\r\n        }\r\n        function OSD_MemInfo_getModuleHeapLength() {\r\n            return Module.HEAP8.length;\r\n        }\r\n        var wasmImports = {\r\n            da: OSD_MemInfo_getModuleHeapLength,\r\n            a: ___cxa_throw,\r\n            Y: ___syscall_chmod,\r\n            Z: ___syscall_faccessat,\r\n            y: ___syscall_fcntl64,\r\n            V: ___syscall_fstat64,\r\n            ba: ___syscall_ioctl,\r\n            T: ___syscall_lstat64,\r\n            S: ___syscall_newfstatat,\r\n            A: ___syscall_openat,\r\n            M: ___syscall_rmdir,\r\n            U: ___syscall_stat64,\r\n            N: ___syscall_unlinkat,\r\n            L: __abort_js,\r\n            p: __embind_finalize_value_object,\r\n            D: __embind_register_bigint,\r\n            ga: __embind_register_bool,\r\n            e: __embind_register_class,\r\n            c: __embind_register_class_class_function,\r\n            j: __embind_register_class_constructor,\r\n            b: __embind_register_class_function,\r\n            g: __embind_register_class_property,\r\n            ea: __embind_register_emval,\r\n            w: __embind_register_enum,\r\n            h: __embind_register_enum_value,\r\n            C: __embind_register_float,\r\n            r: __embind_register_integer,\r\n            l: __embind_register_memory_view,\r\n            v: __embind_register_optional,\r\n            fa: __embind_register_std_string,\r\n            z: __embind_register_std_wstring,\r\n            k: __embind_register_user_type,\r\n            q: __embind_register_value_object,\r\n            m: __embind_register_value_object_field,\r\n            ha: __embind_register_void,\r\n            G: __emscripten_lookup_name,\r\n            K: __emscripten_runtime_keepalive_clear,\r\n            n: __emval_as,\r\n            t: __emval_call_method,\r\n            d: __emval_decref,\r\n            s: __emval_get_method_caller,\r\n            E: __emval_get_property,\r\n            f: __emval_incref,\r\n            u: __emval_new_array,\r\n            B: __emval_new_array_from_memory_view,\r\n            ia: __emval_new_cstring,\r\n            i: __emval_run_destructors,\r\n            o: __emval_take_value,\r\n            O: __localtime_js,\r\n            F: __setitimer_js,\r\n            _: __tzset_js,\r\n            X: _clock_time_get,\r\n            W: _emscripten_date_now,\r\n            I: _emscripten_get_heap_max,\r\n            H: _emscripten_resize_heap,\r\n            Q: _environ_get,\r\n            R: _environ_sizes_get,\r\n            ca: _exit,\r\n            x: _fd_close,\r\n            aa: _fd_read,\r\n            P: _fd_seek,\r\n            $: _fd_write,\r\n            J: _proc_exit,\r\n        };\r\n        var wasmExports = await createWasm();\r\n        var ___wasm_call_ctors = wasmExports[\"ka\"];\r\n        var ___getTypeName = wasmExports[\"la\"];\r\n        var _malloc = wasmExports[\"ma\"];\r\n        var _free = wasmExports[\"na\"];\r\n        var _htons = wasmExports[\"pa\"];\r\n        var __emscripten_timeout = wasmExports[\"qa\"];\r\n        function applySignatureConversions(wasmExports) {\r\n            wasmExports = Object.assign({}, wasmExports);\r\n            var makeWrapper_pp = (f) => (a0) => f(a0) >>> 0;\r\n            var makeWrapper_p = (f) => () => f() >>> 0;\r\n            wasmExports[\"la\"] = makeWrapper_pp(wasmExports[\"la\"]);\r\n            wasmExports[\"ma\"] = makeWrapper_pp(wasmExports[\"ma\"]);\r\n            wasmExports[\"_emscripten_stack_alloc\"] = makeWrapper_pp(wasmExports[\"_emscripten_stack_alloc\"]);\r\n            wasmExports[\"emscripten_stack_get_current\"] = makeWrapper_p(\r\n                wasmExports[\"emscripten_stack_get_current\"],\r\n            );\r\n            return wasmExports;\r\n        }\r\n        function run() {\r\n            if (runDependencies > 0) {\r\n                dependenciesFulfilled = run;\r\n                return;\r\n            }\r\n            preRun();\r\n            if (runDependencies > 0) {\r\n                dependenciesFulfilled = run;\r\n                return;\r\n            }\r\n            function doRun() {\r\n                Module[\"calledRun\"] = true;\r\n                if (ABORT) return;\r\n                initRuntime();\r\n                readyPromiseResolve(Module);\r\n                Module[\"onRuntimeInitialized\"]?.();\r\n                postRun();\r\n            }\r\n            if (Module[\"setStatus\"]) {\r\n                Module[\"setStatus\"](\"Running...\");\r\n                setTimeout(() => {\r\n                    setTimeout(() => Module[\"setStatus\"](\"\"), 1);\r\n                    doRun();\r\n                }, 1);\r\n            } else {\r\n                doRun();\r\n            }\r\n        }\r\n        function preInit() {\r\n            if (Module[\"preInit\"]) {\r\n                if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [Module[\"preInit\"]];\r\n                while (Module[\"preInit\"].length > 0) {\r\n                    Module[\"preInit\"].shift()();\r\n                }\r\n            }\r\n        }\r\n        preInit();\r\n        run();\r\n        moduleRtn = readyPromise;\r\n\r\n        return moduleRtn;\r\n    };\r\n})();\r\nexport default Module;\r\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\r\n// See LICENSE file in the project root for full license information.\r\n\r\nimport MainModuleFactory, { MainModule } from \"../lib/chili-wasm\";\r\n\r\ndeclare global {\r\n    var wasm: MainModule;\r\n}\r\n\r\nexport async function initWasm() {\r\n    global.wasm = await MainModuleFactory();\r\n    return global.wasm;\r\n}\r\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\r\n// See LICENSE file in the project root for full license information.\r\n\r\nimport { GeometryType, IGeometry, Matrix4 } from \"chili-core\";\r\nimport { Geom_Geometry, Handle_Geom_Geometry } from \"../lib/chili-wasm\";\r\nimport { OcctHelper } from \"./helper\";\r\n\r\nexport abstract class OccGeometry implements IGeometry {\r\n    private readonly _geometryType: GeometryType;\r\n    private readonly _handleGeometry: Handle_Geom_Geometry;\r\n\r\n    get geometryType(): GeometryType {\r\n        return this._geometryType;\r\n    }\r\n\r\n    constructor(readonly geometry: Geom_Geometry) {\r\n        this._handleGeometry = new wasm.Handle_Geom_Geometry(geometry);\r\n        this._geometryType = this.getGeometryType(geometry);\r\n    }\r\n\r\n    private getGeometryType(geometry: Geom_Geometry) {\r\n        let isKind = (type: string) => wasm.Transient.isKind(geometry, type);\r\n\r\n        if (isKind(\"Geom_Curve\")) {\r\n            return GeometryType.Curve;\r\n        } else if (isKind(\"Geom_Surface\")) {\r\n            return GeometryType.Surface;\r\n        }\r\n\r\n        throw new Error(\"Unknown geometry type\");\r\n    }\r\n\r\n    #disposed = false;\r\n    dispose = () => {\r\n        if (!this.#disposed) {\r\n            this.#disposed = true;\r\n            this.disposeInternal();\r\n        }\r\n    };\r\n\r\n    protected disposeInternal() {\r\n        this._handleGeometry.delete();\r\n    }\r\n\r\n    transform(value: Matrix4) {\r\n        this.geometry.transform(OcctHelper.convertFromMatrix(value));\r\n    }\r\n\r\n    abstract copy(): IGeometry;\r\n    abstract transformed(matrix: Matrix4): IGeometry;\r\n}\r\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\r\n// See LICENSE file in the project root for full license information.\r\n\r\nimport {\r\n    EdgeMeshData,\r\n    FaceMeshData,\r\n    gc,\r\n    IDisposable,\r\n    IShapeMeshData,\r\n    LineType,\r\n    ShapeMeshRange,\r\n    VisualConfig,\r\n} from \"chili-core\";\r\nimport { EdgeMeshData as OccEdgeMeshData, FaceMeshData as OccFaceMeshData } from \"../lib/chili-wasm\";\r\nimport { OccShape, OccSubEdgeShape, OccSubFaceShape } from \"./shape\";\r\n\r\nexport class Mesher implements IShapeMeshData, IDisposable {\r\n    private _isMeshed = false;\r\n    private _lines?: EdgeMeshData;\r\n    private _faces?: FaceMeshData;\r\n\r\n    get edges(): EdgeMeshData | undefined {\r\n        if (this._lines === undefined) {\r\n            this.mesh();\r\n        }\r\n        return this._lines;\r\n    }\r\n    set edges(value: EdgeMeshData | undefined) {\r\n        this._lines = value;\r\n    }\r\n\r\n    get faces(): FaceMeshData | undefined {\r\n        if (this._faces === undefined) {\r\n            this.mesh();\r\n        }\r\n        return this._faces;\r\n    }\r\n    set faces(value: FaceMeshData | undefined) {\r\n        this._faces = value;\r\n    }\r\n\r\n    constructor(private shape: OccShape) {}\r\n\r\n    private mesh() {\r\n        if (this._isMeshed) {\r\n            return;\r\n        }\r\n        this._isMeshed = true;\r\n\r\n        gc((c) => {\r\n            const occMesher = c(new wasm.Mesher(this.shape.shape, 0.005));\r\n            const meshData = c(occMesher.mesh());\r\n            const faceMeshData = c(meshData.faceMeshData);\r\n            const edgeMeshData = c(meshData.edgeMeshData);\r\n\r\n            this._faces = this.parseFaceMeshData(faceMeshData);\r\n            this._lines = this.parseEdgeMeshData(edgeMeshData);\r\n        });\r\n    }\r\n\r\n    private parseFaceMeshData(faceMeshData: OccFaceMeshData): FaceMeshData {\r\n        return {\r\n            position: new Float32Array(faceMeshData.position),\r\n            normal: new Float32Array(faceMeshData.normal),\r\n            uv: new Float32Array(faceMeshData.uv),\r\n            index: new Uint32Array(faceMeshData.index),\r\n            range: this.getFaceRanges(faceMeshData),\r\n            color: VisualConfig.defaultFaceColor,\r\n            groups: [],\r\n        };\r\n    }\r\n\r\n    private parseEdgeMeshData(edgeMeshData: OccEdgeMeshData): EdgeMeshData {\r\n        return {\r\n            lineType: LineType.Solid,\r\n            position: new Float32Array(edgeMeshData.position),\r\n            range: this.getEdgeRanges(edgeMeshData),\r\n            color: VisualConfig.defaultEdgeColor,\r\n        };\r\n    }\r\n\r\n    dispose(): void {\r\n        this._faces?.range.forEach((g) => g.shape.dispose());\r\n        this._lines?.range.forEach((g) => g.shape.dispose());\r\n\r\n        this.shape = null as any;\r\n        this._faces = null as any;\r\n        this._lines = null as any;\r\n    }\r\n\r\n    private getEdgeRanges(data: OccEdgeMeshData): ShapeMeshRange[] {\r\n        let result: ShapeMeshRange[] = [];\r\n        for (let i = 0; i < data.edges.length; i++) {\r\n            result.push({\r\n                start: data.group[2 * i],\r\n                count: data.group[2 * i + 1],\r\n                shape: new OccSubEdgeShape(this.shape, data.edges[i], i),\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private getFaceRanges(data: OccFaceMeshData): ShapeMeshRange[] {\r\n        let result: ShapeMeshRange[] = [];\r\n        for (let i = 0; i < data.faces.length; i++) {\r\n            result.push({\r\n                start: data.group[2 * i],\r\n                count: data.group[2 * i + 1],\r\n                shape: new OccSubFaceShape(this.shape, data.faces[i], i),\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n}\r\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\r\n// See LICENSE file in the project root for full license information.\r\n\r\nimport {\r\n    EdgeMeshData,\r\n    gc,\r\n    ICompound,\r\n    ICompoundSolid,\r\n    ICurve,\r\n    Id,\r\n    IDisposable,\r\n    IEdge,\r\n    IFace,\r\n    IShape,\r\n    IShapeMeshData,\r\n    IShell,\r\n    ISolid,\r\n    ISubEdgeShape,\r\n    ISubFaceShape,\r\n    ISurface,\r\n    ITrimmedCurve,\r\n    IVertex,\r\n    IWire,\r\n    JoinType,\r\n    LineType,\r\n    Logger,\r\n    MathUtils,\r\n    Matrix4,\r\n    Orientation,\r\n    Plane,\r\n    Ray,\r\n    Result,\r\n    SerializedProperties,\r\n    Serializer,\r\n    ShapeType,\r\n    VisualConfig,\r\n    XYZ,\r\n} from \"chili-core\";\r\nimport {\r\n    TopoDS_Edge,\r\n    TopoDS_Face,\r\n    TopoDS_Shape,\r\n    TopoDS_Solid,\r\n    TopoDS_Vertex,\r\n    TopoDS_Wire,\r\n} from \"../lib/chili-wasm\";\r\nimport { OccShapeConverter } from \"./converter\";\r\nimport { OccCurve, OccTrimmedCurve } from \"./curve\";\r\nimport { OcctHelper } from \"./helper\";\r\nimport { Mesher } from \"./mesher\";\r\nimport { MeshUtils } from \"chili-geo\";\r\n\r\n@Serializer.register([\"shape\", \"id\"], OccShape.deserialize, OccShape.serialize)\r\nexport class OccShape implements IShape {\r\n    static serialize(target: OccShape): SerializedProperties<OccShape> {\r\n        return {\r\n            shape: new OccShapeConverter().convertToBrep(target).value,\r\n            id: target.id,\r\n        };\r\n    }\r\n\r\n    static deserialize(shape: string, id: string) {\r\n        let tshape = new OccShapeConverter().convertFromBrep(shape).value as OccShape;\r\n        tshape._id = id;\r\n        return tshape;\r\n    }\r\n\r\n    readonly shapeType: ShapeType;\r\n    protected _mesh: IShapeMeshData | undefined;\r\n    get mesh(): IShapeMeshData {\r\n        this._mesh ??= new Mesher(this);\r\n        return this._mesh;\r\n    }\r\n\r\n    protected _shape: TopoDS_Shape;\r\n    get shape(): TopoDS_Shape {\r\n        return this._shape;\r\n    }\r\n\r\n    protected _id: string;\r\n    get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    get matrix(): Matrix4 {\r\n        return gc((c) => {\r\n            return OcctHelper.convertToMatrix(c(c(this.shape.getLocation()).transformation()));\r\n        });\r\n    }\r\n\r\n    set matrix(matrix: Matrix4) {\r\n        gc((c) => {\r\n            let location = c(new wasm.TopLoc_Location(c(OcctHelper.convertFromMatrix(matrix))));\r\n            this._shape.setLocation(location, false);\r\n            this.onTransformChanged();\r\n        });\r\n    }\r\n\r\n    constructor(shape: TopoDS_Shape, id?: string) {\r\n        this._id = id ?? Id.generate();\r\n        this._shape = shape;\r\n        this.shapeType = OcctHelper.getShapeType(shape);\r\n    }\r\n\r\n    transformed(matrix: Matrix4): IShape {\r\n        return gc((c) => {\r\n            const location = c(new wasm.TopLoc_Location(c(OcctHelper.convertFromMatrix(matrix))));\r\n            const shape = this._shape.located(location, false); // TODO: check if this is correct\r\n            return OcctHelper.wrapShape(shape);\r\n        });\r\n    }\r\n\r\n    transformedMul(matrix: Matrix4): IShape {\r\n        return gc((c) => {\r\n            const location = c(new wasm.TopLoc_Location(c(OcctHelper.convertFromMatrix(matrix))));\r\n            const shape = this._shape.moved(location, false); // TODO: check if this is correct\r\n            return OcctHelper.wrapShape(shape);\r\n        });\r\n    }\r\n\r\n    protected onTransformChanged(): void {\r\n        if (this._mesh) {\r\n            Logger.warn(\"Shape matrix changed, mesh will be recreated\");\r\n            this._mesh = undefined;\r\n        }\r\n    }\r\n\r\n    edgesMeshPosition(): EdgeMeshData {\r\n        const occMesher = new wasm.Mesher(this.shape, 0.005);\r\n        const position = occMesher.edgesMeshPosition();\r\n        occMesher.delete();\r\n        return {\r\n            lineType: LineType.Solid,\r\n            position: new Float32Array(position),\r\n            range: [],\r\n            color: VisualConfig.defaultEdgeColor,\r\n        };\r\n    }\r\n\r\n    clone(): IShape {\r\n        return OcctHelper.wrapShape(wasm.Shape.clone(this._shape));\r\n    }\r\n\r\n    isClosed(): boolean {\r\n        return wasm.Shape.isClosed(this.shape);\r\n    }\r\n\r\n    isNull(): boolean {\r\n        return this.shape.isNull();\r\n    }\r\n\r\n    isEqual(other: IShape): boolean {\r\n        if (other instanceof OccShape) {\r\n            return this.shape.isEqual(other.shape);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isSame(other: IShape): boolean {\r\n        if (other instanceof OccShape) {\r\n            return this.shape.isSame(other.shape);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isPartner(other: IShape): boolean {\r\n        if (other instanceof OccShape) {\r\n            return this.shape.isPartner(other.shape);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    orientation(): Orientation {\r\n        return OcctHelper.getOrientation(this.shape);\r\n    }\r\n\r\n    findAncestor(ancestorType: ShapeType, fromShape: IShape): IShape[] {\r\n        if (fromShape instanceof OccShape) {\r\n            return wasm.Shape.findAncestor(\r\n                fromShape.shape,\r\n                this.shape,\r\n                OcctHelper.getShapeEnum(ancestorType),\r\n            ).map((x) => OcctHelper.wrapShape(x));\r\n        }\r\n        return [];\r\n    }\r\n\r\n    findSubShapes(subshapeType: ShapeType): IShape[] {\r\n        return wasm.Shape.findSubShapes(this.shape, OcctHelper.getShapeEnum(subshapeType)).map((x) =>\r\n            OcctHelper.wrapShape(x),\r\n        );\r\n    }\r\n\r\n    iterShape(): IShape[] {\r\n        let subShape = wasm.Shape.iterShape(this.shape);\r\n        if (subShape.length === 1 && subShape[0].shapeType() === this.shape.shapeType()) {\r\n            subShape = wasm.Shape.iterShape(subShape[0]);\r\n        }\r\n        return subShape.map((x) => OcctHelper.wrapShape(x));\r\n    }\r\n\r\n    section(shape: IShape | Plane): IShape {\r\n        if (shape instanceof OccShape) {\r\n            let section = wasm.Shape.sectionSS(this.shape, shape.shape);\r\n            return OcctHelper.wrapShape(section);\r\n        }\r\n        if (shape instanceof Plane) {\r\n            let section = wasm.Shape.sectionSP(this.shape, {\r\n                location: shape.origin,\r\n                direction: shape.normal,\r\n                xDirection: shape.xvec,\r\n            });\r\n            return OcctHelper.wrapShape(section);\r\n        }\r\n\r\n        throw new Error(\"Unsupported type\");\r\n    }\r\n\r\n    split(edges: (IEdge | IWire)[]): IShape {\r\n        let shapes = edges.map((x) => {\r\n            if (x instanceof OccShape) {\r\n                return x.shape;\r\n            }\r\n            throw new Error(\"Unsupported type\");\r\n        });\r\n        return OcctHelper.wrapShape(wasm.Shape.splitByEdgeOrWires(this.shape, shapes));\r\n    }\r\n\r\n    reserve(): void {\r\n        this.shape.reverse();\r\n    }\r\n\r\n    #isDisposed = false;\r\n    readonly dispose = () => {\r\n        if (!this.#isDisposed) {\r\n            this.#isDisposed = true;\r\n            this.disposeInternal();\r\n        }\r\n    };\r\n\r\n    protected disposeInternal(): void {\r\n        this._shape.nullify();\r\n        this._shape.delete();\r\n        this._shape = null as any;\r\n\r\n        if (this._mesh && IDisposable.isDisposable(this._mesh)) {\r\n            this._mesh.dispose();\r\n            this._mesh = null as any;\r\n        }\r\n    }\r\n}\r\n\r\n@Serializer.register([\"shape\", \"id\"], OccShape.deserialize, OccShape.serialize)\r\nexport class OccVertex extends OccShape implements IVertex {\r\n    readonly vertex: TopoDS_Vertex;\r\n\r\n    constructor(shape: TopoDS_Vertex, id?: string) {\r\n        super(shape, id);\r\n        this.vertex = shape;\r\n    }\r\n}\r\n\r\n@Serializer.register([\"shape\", \"id\"], OccShape.deserialize, OccShape.serialize)\r\nexport class OccEdge extends OccShape implements IEdge {\r\n    private _edge: TopoDS_Edge;\r\n    get edge(): TopoDS_Edge {\r\n        return this._edge;\r\n    }\r\n\r\n    constructor(shape: TopoDS_Edge, id?: string) {\r\n        super(shape, id);\r\n        this._edge = shape;\r\n    }\r\n\r\n    update(curve: ICurve): void {\r\n        if (!(curve instanceof OccCurve)) {\r\n            throw new Error(\"Invalid curve\");\r\n        }\r\n        this._shape = wasm.Edge.fromCurve(curve.curve);\r\n        this._mesh = undefined;\r\n    }\r\n\r\n    intersect(other: IEdge | Ray): { parameter: number; point: XYZ }[] {\r\n        return gc((c) => {\r\n            let edge: TopoDS_Edge | undefined = undefined;\r\n            if (other instanceof OccEdge) {\r\n                edge = other.edge;\r\n            }\r\n            if (other instanceof Ray) {\r\n                let line = c(wasm.Curve.makeLine(other.location, other.direction));\r\n                edge = c(wasm.Edge.fromCurve(line.get()));\r\n            }\r\n            if (edge === undefined) {\r\n                throw new Error(\"Unsupported type\");\r\n            }\r\n            return wasm.Edge.intersect(this.edge, edge).map((x) => ({\r\n                parameter: x.parameter,\r\n                point: OcctHelper.toXYZ(x.point),\r\n            }));\r\n        });\r\n    }\r\n\r\n    length(): number {\r\n        return wasm.Edge.curveLength(this.edge);\r\n    }\r\n\r\n    private _curve: ITrimmedCurve | undefined;\r\n    get curve(): ITrimmedCurve {\r\n        this._curve ??= gc((c) => {\r\n            let curve = c(wasm.Edge.curve(this.edge));\r\n            return new OccTrimmedCurve(curve.get()!);\r\n        });\r\n        return this._curve;\r\n    }\r\n\r\n    protected override onTransformChanged(): void {\r\n        super.onTransformChanged();\r\n        if (this._curve) {\r\n            this._curve.dispose();\r\n            this._curve = undefined;\r\n        }\r\n    }\r\n\r\n    offset(distance: number, dir: XYZ): Result<IEdge> {\r\n        return gc((c) => {\r\n            let occDir = c(OcctHelper.toDir(dir));\r\n            let edge = wasm.Edge.offset(this.edge, occDir, distance);\r\n            if (edge.isNull()) {\r\n                return Result.err(\"Offset failed\");\r\n            }\r\n            return Result.ok(OcctHelper.wrapShape(edge));\r\n        });\r\n    }\r\n\r\n    trim(start: number, end: number): IEdge {\r\n        let newEdge = wasm.Edge.trim(this.edge, start, end);\r\n        return new OccEdge(newEdge);\r\n    }\r\n\r\n    protected override disposeInternal(): void {\r\n        super.disposeInternal();\r\n        if (this._curve && IDisposable.isDisposable(this._curve)) {\r\n            this._curve.dispose();\r\n            this._curve = null as any;\r\n        }\r\n    }\r\n}\r\n\r\n@Serializer.register([\"shape\", \"id\"], OccShape.deserialize, OccShape.serialize)\r\nexport class OccWire extends OccShape implements IWire {\r\n    constructor(\r\n        readonly wire: TopoDS_Wire,\r\n        id?: string,\r\n    ) {\r\n        super(wire, id);\r\n    }\r\n\r\n    edgeLoop(): IEdge[] {\r\n        return wasm.Wire.edgeLoop(this.wire).map((x) => OcctHelper.wrapShape(x)) as IEdge[];\r\n    }\r\n\r\n    toFace(): Result<IFace> {\r\n        let face = wasm.Wire.makeFace(this.wire);\r\n        if (face.isNull()) {\r\n            return Result.err(\"To face failed\");\r\n        }\r\n        return Result.ok(new OccFace(face));\r\n    }\r\n\r\n    offset(distance: number, joinType: JoinType): Result<IShape> {\r\n        let offseted = wasm.Wire.offset(this.wire, distance, OcctHelper.getJoinType(joinType));\r\n        if (offseted.isNull()) {\r\n            return Result.err(\"Offset failed\");\r\n        }\r\n        return Result.ok(OcctHelper.wrapShape(offseted));\r\n    }\r\n}\r\n\r\n@Serializer.register([\"shape\", \"id\"], OccShape.deserialize, OccShape.serialize)\r\nexport class OccFace extends OccShape implements IFace {\r\n    constructor(\r\n        readonly face: TopoDS_Face,\r\n        id?: string,\r\n    ) {\r\n        super(face, id);\r\n    }\r\n\r\n    area(): number {\r\n        return wasm.Face.area(this.face);\r\n    }\r\n\r\n    normal(u: number, v: number): [point: XYZ, normal: XYZ] {\r\n        return gc((c) => {\r\n            let pnt = c(new wasm.gp_Pnt(0, 0, 0));\r\n            let normal = c(new wasm.gp_Vec(0, 0, 0));\r\n            wasm.Face.normal(this.shape, u, v, pnt, normal);\r\n            return [OcctHelper.toXYZ(pnt), OcctHelper.toXYZ(normal)];\r\n        });\r\n    }\r\n    outerWire(): IWire {\r\n        return new OccWire(wasm.Face.outerWire(this.face));\r\n    }\r\n    surface(): ISurface {\r\n        return gc((c) => {\r\n            let handleSurface = c(wasm.Face.surface(this.face));\r\n            return OcctHelper.wrapSurface(handleSurface.get()!);\r\n        });\r\n    }\r\n    segmentsOfEdgeOnFace(edge: IEdge): undefined | { start: number; end: number } {\r\n        if (edge instanceof OccEdge) {\r\n            let domain = wasm.Face.curveOnSurface(this.face, edge.edge);\r\n            if (MathUtils.allEqualZero(domain.start, domain.end)) {\r\n                return undefined;\r\n            }\r\n            return domain;\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n\r\n@Serializer.register([\"shape\", \"id\"], OccShape.deserialize, OccShape.serialize)\r\nexport class OccShell extends OccShape implements IShell {}\r\n\r\n@Serializer.register([\"shape\", \"id\"], OccShape.deserialize, OccShape.serialize)\r\nexport class OccSolid extends OccShape implements ISolid {\r\n    constructor(\r\n        readonly solid: TopoDS_Solid,\r\n        id?: string,\r\n    ) {\r\n        super(solid, id);\r\n    }\r\n\r\n    volume(): number {\r\n        return wasm.Solid.volume(this.solid);\r\n    }\r\n}\r\n\r\n@Serializer.register([\"shape\", \"id\"], OccShape.deserialize, OccShape.serialize)\r\nexport class OccCompSolid extends OccShape implements ICompoundSolid {}\r\n\r\n@Serializer.register([\"shape\", \"id\"], OccShape.deserialize, OccShape.serialize)\r\nexport class OccCompound extends OccShape implements ICompound {}\r\n\r\nexport class OccSubEdgeShape extends OccEdge implements ISubEdgeShape {\r\n    override get mesh(): IShapeMeshData {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    constructor(\r\n        readonly parent: IShape,\r\n        edge: TopoDS_Edge,\r\n        readonly index: number,\r\n        id?: string,\r\n    ) {\r\n        super(edge, id);\r\n    }\r\n}\r\n\r\nexport class OccSubFaceShape extends OccFace implements ISubFaceShape {\r\n    override get mesh(): IShapeMeshData {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    constructor(\r\n        readonly parent: IShape,\r\n        face: TopoDS_Face,\r\n        readonly index: number,\r\n        id?: string,\r\n    ) {\r\n        super(face, id);\r\n    }\r\n}\r\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\r\n// See LICENSE file in the project root for full license information.\r\n\r\nimport {\r\n    Continuity,\r\n    CurveType,\r\n    IBSplineCurve,\r\n    IBezierCurve,\r\n    IBoundedCurve,\r\n    ICircle,\r\n    IConic,\r\n    ICurve,\r\n    IDisposable,\r\n    IEdge,\r\n    IEllipse,\r\n    IGeometry,\r\n    IHyperbola,\r\n    ILine,\r\n    IOffsetCurve,\r\n    IParabola,\r\n    ITrimmedCurve,\r\n    Matrix4,\r\n    Ray,\r\n    XYZ,\r\n    gc,\r\n} from \"chili-core\";\r\nimport {\r\n    Geom_BSplineCurve,\r\n    Geom_BezierCurve,\r\n    Geom_BoundedCurve,\r\n    Geom_Circle,\r\n    Geom_Conic,\r\n    Geom_Curve,\r\n    Geom_Ellipse,\r\n    Geom_Hyperbola,\r\n    Geom_Line,\r\n    Geom_OffsetCurve,\r\n    Geom_Parabola,\r\n    Geom_TrimmedCurve,\r\n} from \"../lib/chili-wasm\";\r\nimport { OccGeometry } from \"./geometry\";\r\nimport { OcctHelper } from \"./helper\";\r\nimport { OccEdge } from \"./shape\";\r\n\r\nexport class OccCurve extends OccGeometry implements ICurve, IDisposable {\r\n    readonly curveType: CurveType;\r\n\r\n    constructor(readonly curve: Geom_Curve) {\r\n        super(curve);\r\n        this.curveType = OcctHelper.getCurveType(curve);\r\n    }\r\n\r\n    override copy(): IGeometry {\r\n        return gc((c) => {\r\n            let newCurve = c(this.curve.copy());\r\n            return OcctHelper.wrapCurve(newCurve.get() as Geom_Curve);\r\n        });\r\n    }\r\n\r\n    override transformed(matrix: Matrix4): IGeometry {\r\n        return gc((c) => {\r\n            let newCurve = c(this.curve.transformed(OcctHelper.convertFromMatrix(matrix)));\r\n            return OcctHelper.wrapCurve(newCurve.get() as Geom_Curve);\r\n        });\r\n    }\r\n\r\n    makeEdge(): IEdge {\r\n        return new OccEdge(wasm.Edge.fromCurve(this.curve));\r\n    }\r\n\r\n    nearestExtrema(curve: ICurve | Ray) {\r\n        return gc((c) => {\r\n            let result;\r\n            if (curve instanceof OccCurve) {\r\n                result = wasm.Curve.nearestExtremaCC(this.curve, curve.curve);\r\n            } else if (curve instanceof Ray) {\r\n                let line = c(wasm.Curve.makeLine(curve.location, curve.direction));\r\n                result = wasm.Curve.nearestExtremaCC(this.curve, line.get());\r\n            }\r\n\r\n            if (!result) {\r\n                return undefined;\r\n            }\r\n\r\n            return {\r\n                ...result,\r\n                p1: OcctHelper.toXYZ(result.p1),\r\n                p2: OcctHelper.toXYZ(result.p2),\r\n            };\r\n        });\r\n    }\r\n\r\n    uniformAbscissaByLength(length: number): XYZ[] {\r\n        return wasm.Curve.uniformAbscissaWithLength(this.curve, length).map((x) => OcctHelper.toXYZ(x));\r\n    }\r\n\r\n    uniformAbscissaByCount(curveCount: number): XYZ[] {\r\n        return wasm.Curve.uniformAbscissaWithCount(this.curve, curveCount + 1).map((x) =>\r\n            OcctHelper.toXYZ(x),\r\n        );\r\n    }\r\n\r\n    length(): number {\r\n        return wasm.Curve.curveLength(this.curve);\r\n    }\r\n\r\n    trim(u1: number, u2: number): ITrimmedCurve {\r\n        return gc((c) => {\r\n            let trimCurve = c(wasm.Curve.trim(this.curve, u1, u2));\r\n            return new OccTrimmedCurve(trimCurve.get()!);\r\n        });\r\n    }\r\n\r\n    reverse() {\r\n        this.curve.reverse();\r\n    }\r\n\r\n    reversed(): ICurve {\r\n        return gc((c) => {\r\n            let newCurve = c(this.curve.reversed());\r\n            return OcctHelper.wrapCurve(newCurve.get()!);\r\n        });\r\n    }\r\n\r\n    isClosed(): boolean {\r\n        return this.curve.isClosed();\r\n    }\r\n\r\n    period(): number {\r\n        return this.curve.period();\r\n    }\r\n\r\n    isPeriodic(): boolean {\r\n        return this.curve.isPeriodic();\r\n    }\r\n\r\n    continutity(): Continuity {\r\n        let cni = this.curve.continutity();\r\n        return OcctHelper.convertContinuity(cni);\r\n    }\r\n\r\n    nearestFromPoint(point: XYZ) {\r\n        let res = wasm.Curve.projectOrNearest(this.curve, point);\r\n        return {\r\n            ...res,\r\n            point: OcctHelper.toXYZ(res.point),\r\n        };\r\n    }\r\n\r\n    value(parameter: number): XYZ {\r\n        return OcctHelper.toXYZ(this.curve.value(parameter));\r\n    }\r\n\r\n    firstParameter() {\r\n        return this.curve.firstParameter();\r\n    }\r\n\r\n    lastParameter() {\r\n        return this.curve.lastParameter();\r\n    }\r\n\r\n    parameter(point: XYZ, tolerance: number): number | undefined {\r\n        return wasm.Curve.parameter(this.curve, point, tolerance);\r\n    }\r\n\r\n    project(point: XYZ): XYZ[] {\r\n        return wasm.Curve.projects(this.curve, point)\r\n            .map((p) => new XYZ(p.x, p.y, p.z))\r\n            .toSorted((a, b) => a.distanceTo(point) - b.distanceTo(point));\r\n    }\r\n\r\n    isCN(n: number): boolean {\r\n        return this.curve.isCN(n);\r\n    }\r\n\r\n    d0(u: number) {\r\n        return gc((c) => {\r\n            let pnt = c(new wasm.gp_Pnt(0, 0, 0));\r\n            this.curve.d0(u, pnt);\r\n            return OcctHelper.toXYZ(pnt);\r\n        });\r\n    }\r\n\r\n    d1(u: number) {\r\n        return gc((c) => {\r\n            let pnt = c(new wasm.gp_Pnt(0, 0, 0));\r\n            let vec = c(new wasm.gp_Vec(0, 0, 0));\r\n            this.curve.d1(u, pnt, vec);\r\n            return {\r\n                point: OcctHelper.toXYZ(pnt),\r\n                vec: OcctHelper.toXYZ(vec),\r\n            };\r\n        });\r\n    }\r\n\r\n    d2(u: number) {\r\n        return gc((c) => {\r\n            let pnt = c(new wasm.gp_Pnt(0, 0, 0));\r\n            let vec1 = c(new wasm.gp_Vec(0, 0, 0));\r\n            let vec2 = c(new wasm.gp_Vec(0, 0, 0));\r\n            this.curve.d2(u, pnt, vec1, vec2);\r\n            return {\r\n                point: OcctHelper.toXYZ(pnt),\r\n                vec1: OcctHelper.toXYZ(vec1),\r\n                vec2: OcctHelper.toXYZ(vec2),\r\n            };\r\n        });\r\n    }\r\n\r\n    d3(u: number) {\r\n        return gc((c) => {\r\n            let pnt = c(new wasm.gp_Pnt(0, 0, 0));\r\n            let vec1 = c(new wasm.gp_Vec(0, 0, 0));\r\n            let vec2 = c(new wasm.gp_Vec(0, 0, 0));\r\n            let vec3 = c(new wasm.gp_Vec(0, 0, 0));\r\n            this.curve.d3(u, pnt, vec1, vec2, vec3);\r\n            return {\r\n                point: OcctHelper.toXYZ(pnt),\r\n                vec1: OcctHelper.toXYZ(vec1),\r\n                vec2: OcctHelper.toXYZ(vec2),\r\n                vec3: OcctHelper.toXYZ(vec3),\r\n            };\r\n        });\r\n    }\r\n\r\n    dn(u: number, n: number) {\r\n        return gc((c) => {\r\n            return OcctHelper.toXYZ(c(this.curve.dn(u, n)));\r\n        });\r\n    }\r\n}\r\n\r\nexport class OccLine extends OccCurve implements ILine {\r\n    constructor(private line: Geom_Line) {\r\n        super(line);\r\n    }\r\n\r\n    get direction(): XYZ {\r\n        return gc((c) => {\r\n            let ax = c(this.line.position());\r\n            return OcctHelper.toXYZ(c(ax.direction()));\r\n        });\r\n    }\r\n\r\n    set direction(value: XYZ) {\r\n        gc((c) => {\r\n            this.line.setDirection(c(OcctHelper.toDir(value)));\r\n        });\r\n    }\r\n\r\n    get location(): XYZ {\r\n        return gc((c) => {\r\n            let ax = c(this.line.position());\r\n            return OcctHelper.toXYZ(c(ax.location()));\r\n        });\r\n    }\r\n\r\n    set location(value: XYZ) {\r\n        gc((c) => {\r\n            this.line.setLocation(c(OcctHelper.toPnt(value)));\r\n        });\r\n    }\r\n}\r\n\r\nexport class OccConic extends OccCurve implements IConic {\r\n    constructor(private conioc: Geom_Conic) {\r\n        super(conioc);\r\n    }\r\n    get axis(): XYZ {\r\n        return gc((c) => {\r\n            return OcctHelper.toXYZ(c(c(this.conioc.axis()).direction()));\r\n        });\r\n    }\r\n    get xAxis(): XYZ {\r\n        return gc((c) => {\r\n            return OcctHelper.toXYZ(c(c(this.conioc.xAxis()).direction()));\r\n        });\r\n    }\r\n    get yAxis(): XYZ {\r\n        return gc((c) => {\r\n            return OcctHelper.toXYZ(c(c(this.conioc.yAxis()).direction()));\r\n        });\r\n    }\r\n    eccentricity(): number {\r\n        return this.conioc.eccentricity();\r\n    }\r\n}\r\n\r\nexport class OccCircle extends OccConic implements ICircle {\r\n    constructor(private circle: Geom_Circle) {\r\n        super(circle);\r\n    }\r\n\r\n    get center(): XYZ {\r\n        return gc((c) => {\r\n            return OcctHelper.toXYZ(c(this.circle.location()));\r\n        });\r\n    }\r\n\r\n    set center(value: XYZ) {\r\n        gc((c) => {\r\n            this.circle.setLocation(c(OcctHelper.toPnt(value)));\r\n        });\r\n    }\r\n\r\n    get radius(): number {\r\n        return this.circle.radius();\r\n    }\r\n\r\n    set radius(value: number) {\r\n        this.circle.setRadius(value);\r\n    }\r\n}\r\n\r\nexport class OccEllipse extends OccConic implements IEllipse {\r\n    constructor(private ellipse: Geom_Ellipse) {\r\n        super(ellipse);\r\n    }\r\n\r\n    get center(): XYZ {\r\n        return gc((c) => {\r\n            return OcctHelper.toXYZ(c(this.ellipse.location()));\r\n        });\r\n    }\r\n    set center(value: XYZ) {\r\n        gc((c) => {\r\n            this.ellipse.setLocation(c(OcctHelper.toPnt(value)));\r\n        });\r\n    }\r\n\r\n    get focus1(): XYZ {\r\n        return gc((c) => OcctHelper.toXYZ(c(this.ellipse.focus1())));\r\n    }\r\n    get focus2(): XYZ {\r\n        return gc((c) => OcctHelper.toXYZ(c(this.ellipse.focus2())));\r\n    }\r\n\r\n    get majorRadius(): number {\r\n        return this.ellipse.majorRadius();\r\n    }\r\n    set majorRadius(value: number) {\r\n        this.ellipse.setMajorRadius(value);\r\n    }\r\n\r\n    get minorRadius(): number {\r\n        return this.ellipse.minorRadius();\r\n    }\r\n    set minorRadius(value: number) {\r\n        this.ellipse.setMinorRadius(value);\r\n    }\r\n}\r\n\r\nexport class OccHyperbola extends OccConic implements IHyperbola {\r\n    constructor(private hyperbola: Geom_Hyperbola) {\r\n        super(hyperbola);\r\n    }\r\n    focal(): number {\r\n        return this.hyperbola.focal();\r\n    }\r\n    get location(): XYZ {\r\n        return gc((c) => {\r\n            return OcctHelper.toXYZ(c(this.hyperbola.location()));\r\n        });\r\n    }\r\n    set location(value: XYZ) {\r\n        gc((c) => {\r\n            this.hyperbola.setLocation(c(OcctHelper.toPnt(value)));\r\n        });\r\n    }\r\n\r\n    get focus1(): XYZ {\r\n        return gc((c) => OcctHelper.toXYZ(c(this.hyperbola.focus1())));\r\n    }\r\n    get focus2(): XYZ {\r\n        return gc((c) => OcctHelper.toXYZ(c(this.hyperbola.focus2())));\r\n    }\r\n    get majorRadius(): number {\r\n        return this.hyperbola.majorRadius();\r\n    }\r\n    set majorRadius(value: number) {\r\n        this.hyperbola.setMajorRadius(value);\r\n    }\r\n\r\n    get minorRadius(): number {\r\n        return this.hyperbola.minorRadius();\r\n    }\r\n    set minorRadius(value: number) {\r\n        this.hyperbola.setMinorRadius(value);\r\n    }\r\n}\r\n\r\nexport class OccParabola extends OccConic implements IParabola {\r\n    constructor(private parabola: Geom_Parabola) {\r\n        super(parabola);\r\n    }\r\n    focal(): number {\r\n        return this.parabola.focal();\r\n    }\r\n\r\n    get focus(): XYZ {\r\n        return gc((c) => OcctHelper.toXYZ(c(this.parabola.focus())));\r\n    }\r\n\r\n    get directrix() {\r\n        return gc((c) => OcctHelper.toXYZ(c(c(this.parabola.directrix().location()))));\r\n    }\r\n}\r\n\r\nexport class OccBoundedCurve extends OccCurve implements IBoundedCurve {\r\n    constructor(private boundedCurve: Geom_BoundedCurve) {\r\n        super(boundedCurve);\r\n    }\r\n\r\n    startPoint(): XYZ {\r\n        return gc((c) => OcctHelper.toXYZ(c(this.boundedCurve.startPoint())));\r\n    }\r\n\r\n    endPoint(): XYZ {\r\n        return gc((c) => OcctHelper.toXYZ(c(this.boundedCurve.endPoint())));\r\n    }\r\n}\r\n\r\nexport class OccTrimmedCurve extends OccBoundedCurve implements ITrimmedCurve {\r\n    constructor(private trimmedCurve: Geom_TrimmedCurve) {\r\n        super(trimmedCurve);\r\n    }\r\n\r\n    setTrim(u1: number, u2: number): void {\r\n        this.trimmedCurve.setTrim(u1, u2, true, true);\r\n    }\r\n\r\n    private _basisCurve: ICurve | undefined;\r\n    get basisCurve(): ICurve {\r\n        this._basisCurve ??= gc((c) => {\r\n            let curve = c(this.trimmedCurve.basisCurve());\r\n            return OcctHelper.wrapCurve(curve.get()!);\r\n        });\r\n        return this._basisCurve;\r\n    }\r\n\r\n    protected override disposeInternal(): void {\r\n        super.disposeInternal();\r\n        if (this._basisCurve) {\r\n            this._basisCurve.dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport class OccOffsetCurve extends OccCurve implements IOffsetCurve {\r\n    constructor(private offsetCurve: Geom_OffsetCurve) {\r\n        super(offsetCurve);\r\n    }\r\n\r\n    private _basisCurve: ICurve | undefined;\r\n    get basisCurve(): ICurve {\r\n        this._basisCurve ??= gc((c) => {\r\n            let curve = c(this.offsetCurve.basisCurve());\r\n            return OcctHelper.wrapCurve(curve.get()!);\r\n        });\r\n        return this._basisCurve;\r\n    }\r\n\r\n    offset(): number {\r\n        return this.offsetCurve.offset();\r\n    }\r\n\r\n    direction(): XYZ {\r\n        return gc((c) => OcctHelper.toXYZ(c(this.offsetCurve.direction())));\r\n    }\r\n\r\n    protected override disposeInternal(): void {\r\n        super.disposeInternal();\r\n        if (this._basisCurve) {\r\n            this._basisCurve.dispose();\r\n        }\r\n    }\r\n}\r\n\r\nexport class OccBezierCurve extends OccBoundedCurve implements IBezierCurve {\r\n    constructor(private bezier: Geom_BezierCurve) {\r\n        super(bezier);\r\n    }\r\n\r\n    weight(index: number): number {\r\n        return this.bezier.weight(index);\r\n    }\r\n\r\n    insertPoleAfter(index: number, point: XYZ, weight: number | undefined): void {\r\n        gc((c) => {\r\n            if (weight === undefined) {\r\n                this.bezier.insertPoleAfter(index, c(OcctHelper.toPnt(point)));\r\n            } else {\r\n                this.bezier.insertPoleAfterWithWeight(index, c(OcctHelper.toPnt(point)), weight);\r\n            }\r\n        });\r\n    }\r\n\r\n    insertPoleBefore(index: number, point: XYZ, weight: number | undefined): void {\r\n        gc((c) => {\r\n            if (weight === undefined) {\r\n                this.bezier.insertPoleBefore(index, c(OcctHelper.toPnt(point)));\r\n            } else {\r\n                this.bezier.insertPoleBeforeWithWeight(index, c(OcctHelper.toPnt(point)), weight);\r\n            }\r\n        });\r\n    }\r\n\r\n    removePole(index: number): void {\r\n        this.bezier.removePole(index);\r\n    }\r\n\r\n    setPole(index: number, point: XYZ, weight: number | undefined): void {\r\n        gc((c) => {\r\n            if (weight === undefined) {\r\n                this.bezier.setPole(index, c(OcctHelper.toPnt(point)));\r\n            } else {\r\n                this.bezier.setPoleWithWeight(index, c(OcctHelper.toPnt(point)), weight);\r\n            }\r\n        });\r\n    }\r\n\r\n    setWeight(index: number, weight: number): void {\r\n        this.setWeight(index, weight);\r\n    }\r\n\r\n    nbPoles(): number {\r\n        return this.bezier.nbPoles();\r\n    }\r\n\r\n    pole(index: number): XYZ {\r\n        return gc((c) => OcctHelper.toXYZ(c(this.bezier.pole(index))));\r\n    }\r\n\r\n    degree(): number {\r\n        return this.bezier.degree();\r\n    }\r\n\r\n    poles(): XYZ[] {\r\n        return gc((c) => {\r\n            let result: XYZ[] = [];\r\n            let pls = c(this.bezier.getPoles());\r\n            for (let i = 1; i <= pls.length(); i++) {\r\n                result.push(OcctHelper.toXYZ(c(pls.value(i))));\r\n            }\r\n            return result;\r\n        });\r\n    }\r\n}\r\n\r\nexport class OccBSplineCurve extends OccBoundedCurve implements IBSplineCurve {\r\n    constructor(private bspline: Geom_BSplineCurve) {\r\n        super(bspline);\r\n    }\r\n    nbKnots(): number {\r\n        return this.bspline.nbKnots();\r\n    }\r\n    knot(index: number): number {\r\n        return this.bspline.knot(index);\r\n    }\r\n    setKnot(index: number, value: number): void {\r\n        this.bspline.setKnot(index, value);\r\n    }\r\n    nbPoles(): number {\r\n        return this.bspline.nbPoles();\r\n    }\r\n    pole(index: number): XYZ {\r\n        return gc((c) => OcctHelper.toXYZ(c(this.bspline.pole(index))));\r\n    }\r\n    poles(): XYZ[] {\r\n        return gc((c) => {\r\n            let result: XYZ[] = [];\r\n            let pls = c(this.bspline.getPoles());\r\n            for (let i = 1; i <= pls.length(); i++) {\r\n                result.push(OcctHelper.toXYZ(c(pls.value(i))));\r\n            }\r\n            return result;\r\n        });\r\n    }\r\n    weight(index: number): number {\r\n        return this.bspline.weight(index);\r\n    }\r\n    setWeight(index: number, value: number): void {\r\n        this.bspline.setWeight(index, value);\r\n    }\r\n\r\n    degree(): number {\r\n        return this.bspline.degree();\r\n    }\r\n}\r\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\r\n// See LICENSE file in the project root for full license information.\r\n\r\nimport {\r\n    Continuity,\r\n    IBSplineSurface,\r\n    IBezierSurface,\r\n    IBoundedSurface,\r\n    ICompositeSurface,\r\n    IConicalSurface,\r\n    ICurve,\r\n    ICylindricalSurface,\r\n    IElementarySurface,\r\n    IGeometry,\r\n    IOffsetSurface,\r\n    IPlaneSurface,\r\n    IPlateSurface,\r\n    IRectangularTrimmedSurface,\r\n    ISphericalSurface,\r\n    ISurface,\r\n    ISurfaceOfLinearExtrusion,\r\n    ISurfaceOfRevolution,\r\n    ISweptSurface,\r\n    IToroidalSurface,\r\n    Matrix4,\r\n    Plane,\r\n    XYZ,\r\n    gc,\r\n} from \"chili-core\";\r\nimport {\r\n    GeomPlate_Surface,\r\n    Geom_BSplineSurface,\r\n    Geom_BezierSurface,\r\n    Geom_ConicalSurface,\r\n    Geom_CylindricalSurface,\r\n    Geom_ElementarySurface,\r\n    Geom_OffsetSurface,\r\n    Geom_Plane,\r\n    Geom_RectangularTrimmedSurface,\r\n    Geom_SphericalSurface,\r\n    Geom_Surface,\r\n    Geom_SurfaceOfLinearExtrusion,\r\n    Geom_SurfaceOfRevolution,\r\n    Geom_SweptSurface,\r\n    Geom_ToroidalSurface,\r\n    ShapeExtend_CompositeSurface,\r\n} from \"../lib/chili-wasm\";\r\nimport { OccCurve } from \"./curve\";\r\nimport { OccGeometry } from \"./geometry\";\r\nimport { OcctHelper } from \"./helper\";\r\n\r\nexport class OccSurface extends OccGeometry implements ISurface {\r\n    constructor(readonly surface: Geom_Surface) {\r\n        super(surface);\r\n    }\r\n\r\n    override copy(): IGeometry {\r\n        return gc((c) => {\r\n            let s = c(this.surface.copy());\r\n            return OcctHelper.wrapSurface(s.get() as Geom_Surface);\r\n        });\r\n    }\r\n\r\n    override transformed(matrix: Matrix4): IGeometry {\r\n        return gc((c) => {\r\n            let s = c(this.surface.transformed(OcctHelper.convertFromMatrix(matrix)));\r\n            return OcctHelper.wrapSurface(s.get() as Geom_Surface);\r\n        });\r\n    }\r\n\r\n    projectCurve(curve: ICurve): ICurve | undefined {\r\n        return gc((c) => {\r\n            if (!(curve instanceof OccCurve)) return undefined;\r\n            let handleCurve = c(wasm.Surface.projectCurve(this.surface, curve.curve));\r\n            return OcctHelper.wrapCurve(handleCurve.get()!);\r\n        });\r\n    }\r\n\r\n    project(point: XYZ): XYZ[] {\r\n        return wasm.Surface.projectPoint(this.surface, point)\r\n            .map((p) => new XYZ(p.x, p.y, p.z))\r\n            .toSorted((a, b) => a.distanceTo(point) - b.distanceTo(point));\r\n    }\r\n\r\n    isPlanar(): boolean {\r\n        return wasm.Surface.isPlanar(this.surface);\r\n    }\r\n\r\n    parameter(point: XYZ, maxDistance: number): { u: number; v: number } | undefined {\r\n        return wasm.Surface.parameters(this.surface, point, maxDistance);\r\n    }\r\n\r\n    nearestPoint(point: XYZ): [XYZ, number] | undefined {\r\n        let result = wasm.Surface.nearestPoint(this.surface, point);\r\n        if (result) {\r\n            return [OcctHelper.toXYZ(result.point), result.parameter];\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    continuity(): Continuity {\r\n        return OcctHelper.convertContinuity(this.surface.continuity());\r\n    }\r\n\r\n    uIso(u: number): ICurve {\r\n        return gc((c) => {\r\n            let curve = c(this.surface.uIso(u));\r\n            return OcctHelper.wrapCurve(curve.get()!);\r\n        });\r\n    }\r\n    vIso(v: number): ICurve {\r\n        return gc((c) => {\r\n            let curve = c(this.surface.vIso(v));\r\n            return OcctHelper.wrapCurve(curve.get()!);\r\n        });\r\n    }\r\n    isUClosed(): boolean {\r\n        return this.surface.isUClosed();\r\n    }\r\n    isVClosed(): boolean {\r\n        return this.surface.isVClosed();\r\n    }\r\n    isUPreiodic(): boolean {\r\n        return this.surface.isUPeriodic();\r\n    }\r\n    isVPreiodic(): boolean {\r\n        return this.surface.isVPeriodic();\r\n    }\r\n    vPeriod(): number {\r\n        return this.surface.vPeriod();\r\n    }\r\n    uPeriod(): number {\r\n        return this.surface.uPeriod();\r\n    }\r\n    bounds() {\r\n        return wasm.Surface.bounds(this.surface);\r\n    }\r\n    isCNu(n: number): boolean {\r\n        return this.surface.isCNu(n);\r\n    }\r\n    isCNv(n: number): boolean {\r\n        return this.surface.isCNv(n);\r\n    }\r\n    d0(u: number, v: number): XYZ {\r\n        return gc((c) => {\r\n            let pnt = c(new wasm.gp_Pnt(0, 0, 0));\r\n            this.surface.d0(u, v, pnt);\r\n            return OcctHelper.toXYZ(pnt);\r\n        });\r\n    }\r\n    d1(\r\n        u: number,\r\n        v: number,\r\n    ): {\r\n        point: XYZ;\r\n        d1u: XYZ;\r\n        d1v: XYZ;\r\n    } {\r\n        return gc((c) => {\r\n            let pnt = c(new wasm.gp_Pnt(0, 0, 0));\r\n            let d1u = c(new wasm.gp_Vec(0, 0, 0));\r\n            let d1v = c(new wasm.gp_Vec(0, 0, 0));\r\n            this.surface.d1(u, v, pnt, d1u, d1v);\r\n            return {\r\n                point: OcctHelper.toXYZ(pnt),\r\n                d1u: OcctHelper.toXYZ(d1u),\r\n                d1v: OcctHelper.toXYZ(d1v),\r\n            };\r\n        });\r\n    }\r\n    d2(u: number, v: number) {\r\n        return gc((c) => {\r\n            let pnt = c(new wasm.gp_Pnt(0, 0, 0));\r\n            let d1u = c(new wasm.gp_Vec(0, 0, 0));\r\n            let d1v = c(new wasm.gp_Vec(0, 0, 0));\r\n            let d2u = c(new wasm.gp_Vec(0, 0, 0));\r\n            let d2v = c(new wasm.gp_Vec(0, 0, 0));\r\n            let d2uv = c(new wasm.gp_Vec(0, 0, 0));\r\n            this.surface.d2(u, v, pnt, d1u, d1v, d2u, d2v, d2uv);\r\n\r\n            return {\r\n                point: OcctHelper.toXYZ(pnt),\r\n                d1u: OcctHelper.toXYZ(d1u),\r\n                d1v: OcctHelper.toXYZ(d1v),\r\n                d2u: OcctHelper.toXYZ(d2u),\r\n                d2v: OcctHelper.toXYZ(d2v),\r\n                d2uv: OcctHelper.toXYZ(d2uv),\r\n            };\r\n        });\r\n    }\r\n    d3(u: number, v: number) {\r\n        return gc((c) => {\r\n            let pnt = c(new wasm.gp_Pnt(0, 0, 0));\r\n            let d1u = c(new wasm.gp_Vec(0, 0, 0));\r\n            let d1v = c(new wasm.gp_Vec(0, 0, 0));\r\n            let d2u = c(new wasm.gp_Vec(0, 0, 0));\r\n            let d2v = c(new wasm.gp_Vec(0, 0, 0));\r\n            let d2uv = c(new wasm.gp_Vec(0, 0, 0));\r\n            let d3u = c(new wasm.gp_Vec(0, 0, 0));\r\n            let d3v = c(new wasm.gp_Vec(0, 0, 0));\r\n            let d3uuv = c(new wasm.gp_Vec(0, 0, 0));\r\n            let d3uvv = c(new wasm.gp_Vec(0, 0, 0));\r\n            this.surface.d3(u, v, pnt, d1u, d1v, d2u, d2v, d2uv, d3u, d3v, d3uuv, d3uvv);\r\n\r\n            return {\r\n                point: OcctHelper.toXYZ(pnt),\r\n                d1u: OcctHelper.toXYZ(d1u),\r\n                d1v: OcctHelper.toXYZ(d1v),\r\n                d2u: OcctHelper.toXYZ(d2u),\r\n                d2v: OcctHelper.toXYZ(d2v),\r\n                d2uv: OcctHelper.toXYZ(d2uv),\r\n                d3u: OcctHelper.toXYZ(d3u),\r\n                d3v: OcctHelper.toXYZ(d3v),\r\n                d3uuv: OcctHelper.toXYZ(d3uuv),\r\n                d3uvv: OcctHelper.toXYZ(d3uvv),\r\n            };\r\n        });\r\n    }\r\n    dn(u: number, v: number, nu: number, nv: number): XYZ {\r\n        return gc((c) => {\r\n            let vec = c(this.surface.dn(u, v, nu, nv));\r\n            return OcctHelper.toXYZ(vec);\r\n        });\r\n    }\r\n    value(u: number, v: number): XYZ {\r\n        return gc((c) => {\r\n            let pnt = c(this.surface.value(u, v));\r\n            return OcctHelper.toXYZ(pnt);\r\n        });\r\n    }\r\n}\r\n\r\nexport class OccPlateSurface extends OccSurface implements IPlateSurface {\r\n    constructor(private plateSurface: GeomPlate_Surface) {\r\n        super(plateSurface);\r\n    }\r\n\r\n    setBounds(u1: number, u2: number, v1: number, v2: number): void {\r\n        this.plateSurface.setBounds(u1, u2, v1, v2);\r\n    }\r\n}\r\n\r\nexport class OccBoundedSurface extends OccSurface implements IBoundedSurface {}\r\n\r\nexport class OccElementarySurface extends OccSurface implements IElementarySurface {\r\n    constructor(private elementarySurface: Geom_ElementarySurface) {\r\n        super(elementarySurface);\r\n    }\r\n\r\n    get location() {\r\n        return gc((c) => OcctHelper.toXYZ(c(this.elementarySurface.location())));\r\n    }\r\n    set location(value: XYZ) {\r\n        gc((c) => {\r\n            this.elementarySurface.setLocation(c(OcctHelper.toPnt(value)));\r\n        });\r\n    }\r\n\r\n    get axis() {\r\n        return gc((c) => {\r\n            return OcctHelper.toXYZ(c(c(this.elementarySurface.axis()).direction()));\r\n        });\r\n    }\r\n    set axis(value: XYZ) {\r\n        gc((c) => {\r\n            let pnt = c(this.elementarySurface.location());\r\n            let axis = c(new wasm.gp_Ax1(pnt, c(OcctHelper.toDir(value))));\r\n            this.elementarySurface.setAxis(axis);\r\n        });\r\n    }\r\n    get coordinates() {\r\n        return gc((c) => {\r\n            return OcctHelper.fromAx23(c(this.elementarySurface.position()));\r\n        });\r\n    }\r\n    set coordinates(value: Plane) {\r\n        gc((c) => {\r\n            this.elementarySurface.setPosition(c(OcctHelper.toAx3(value)));\r\n        });\r\n    }\r\n}\r\n\r\nexport class OccOffsetSurface extends OccSurface implements IOffsetSurface {\r\n    constructor(private offsetSurface: Geom_OffsetSurface) {\r\n        super(offsetSurface);\r\n    }\r\n    get offset(): number {\r\n        return this.offsetSurface.offset();\r\n    }\r\n    set offset(value: number) {\r\n        this.offsetSurface.setOffsetValue(value);\r\n    }\r\n    get basisSurface() {\r\n        return gc((c) => {\r\n            let handleSurface = c(this.offsetSurface.basisSurface());\r\n            return OcctHelper.wrapSurface(handleSurface.get()!);\r\n        });\r\n    }\r\n    set basisSurface(value: ISurface) {\r\n        gc((c) => {\r\n            if (value instanceof OccSurface) {\r\n                let handleSurface = c(new wasm.Handle_Geom_Surface(value.surface));\r\n                this.offsetSurface.setBasisSurface(handleSurface, true);\r\n            }\r\n            throw new Error(\"Invalid surface type\");\r\n        });\r\n    }\r\n}\r\n\r\nexport class OccSweptSurface extends OccSurface implements ISweptSurface {\r\n    constructor(private sweptSurface: Geom_SweptSurface) {\r\n        super(sweptSurface);\r\n    }\r\n    direction(): XYZ {\r\n        return gc((c) => {\r\n            return OcctHelper.toXYZ(c(this.sweptSurface.direction()));\r\n        });\r\n    }\r\n    basisCurve(): ICurve {\r\n        return gc((c) => {\r\n            let handleCurve = this.sweptSurface.basisCurve();\r\n            return OcctHelper.wrapCurve(handleCurve.get()!);\r\n        });\r\n    }\r\n}\r\n\r\nexport class OccCompositeSurface extends OccSurface implements ICompositeSurface {\r\n    constructor(compositeSurface: ShapeExtend_CompositeSurface) {\r\n        super(compositeSurface as any);\r\n    }\r\n}\r\n\r\nexport class OccBSplineSurface extends OccSurface implements IBSplineSurface {\r\n    constructor(private bsplineSurface: Geom_BSplineSurface) {\r\n        super(bsplineSurface);\r\n    }\r\n}\r\n\r\nexport class OccBezierSurface extends OccSurface implements IBezierSurface {\r\n    constructor(private bezierSurface: Geom_BezierSurface) {\r\n        super(bezierSurface);\r\n    }\r\n}\r\n\r\nexport class OccRectangularSurface extends OccSurface implements IRectangularTrimmedSurface {\r\n    constructor(private rectangularSurface: Geom_RectangularTrimmedSurface) {\r\n        super(rectangularSurface);\r\n    }\r\n    basisSurface(): ISurface {\r\n        return gc((c) => {\r\n            let handleSurface = c(this.rectangularSurface.basisSurface());\r\n            return OcctHelper.wrapSurface(handleSurface.get()!);\r\n        });\r\n    }\r\n    setUTrim(u1: number, u2: number): void {\r\n        this.rectangularSurface.setTrim2(u1, u2, true, true);\r\n    }\r\n    setVTrim(v1: number, v2: number): void {\r\n        this.rectangularSurface.setTrim2(v1, v2, false, true);\r\n    }\r\n    setTrim(u1: number, u2: number, v1: number, v2: number): void {\r\n        this.rectangularSurface.setTrim(u1, u2, v1, v2, true, true);\r\n    }\r\n}\r\n\r\nexport class OccConicalSurface extends OccElementarySurface implements IConicalSurface {\r\n    constructor(private conicalSurface: Geom_ConicalSurface) {\r\n        super(conicalSurface);\r\n    }\r\n    get semiAngle(): number {\r\n        return this.conicalSurface.semiAngle();\r\n    }\r\n    set semiAngle(value: number) {\r\n        this.conicalSurface.setSemiAngle(value);\r\n    }\r\n    setRadius(value: number) {\r\n        return this.conicalSurface.setRadius(value);\r\n    }\r\n    apex(): XYZ {\r\n        return gc((c) => {\r\n            return OcctHelper.toXYZ(c(this.conicalSurface.apex()));\r\n        });\r\n    }\r\n    refRadius(): number {\r\n        return this.conicalSurface.refRadius();\r\n    }\r\n}\r\n\r\nexport class OccCylindricalSurface extends OccElementarySurface implements ICylindricalSurface {\r\n    constructor(private cylindricalSurface: Geom_CylindricalSurface) {\r\n        super(cylindricalSurface);\r\n    }\r\n    get radius(): number {\r\n        return this.cylindricalSurface.radius();\r\n    }\r\n    set radius(value: number) {\r\n        this.cylindricalSurface.setRadius(value);\r\n    }\r\n}\r\n\r\nexport class OccPlane extends OccElementarySurface implements IPlaneSurface {\r\n    constructor(private geom_plane: Geom_Plane) {\r\n        super(geom_plane);\r\n    }\r\n    get plane(): Plane {\r\n        return gc((c) => {\r\n            return OcctHelper.fromPln(c(this.geom_plane.pln()));\r\n        });\r\n    }\r\n    set plane(value: Plane) {\r\n        gc((c) => {\r\n            this.geom_plane.setPln(c(OcctHelper.toPln(value)));\r\n        });\r\n    }\r\n}\r\n\r\nexport class OccSphericalSurface extends OccElementarySurface implements ISphericalSurface {\r\n    constructor(private sphericalSurface: Geom_SphericalSurface) {\r\n        super(sphericalSurface);\r\n    }\r\n    get radius(): number {\r\n        return this.sphericalSurface.radius();\r\n    }\r\n    set radius(value: number) {\r\n        this.sphericalSurface.setRadius(value);\r\n    }\r\n    area(): number {\r\n        return this.sphericalSurface.area();\r\n    }\r\n    volume(): number {\r\n        return this.sphericalSurface.volume();\r\n    }\r\n}\r\n\r\nexport class OccToroidalSurface extends OccElementarySurface implements IToroidalSurface {\r\n    constructor(private toroidalSurface: Geom_ToroidalSurface) {\r\n        super(toroidalSurface);\r\n    }\r\n    area(): number {\r\n        return this.toroidalSurface.area();\r\n    }\r\n    volume(): number {\r\n        return this.toroidalSurface.volume();\r\n    }\r\n    get majorRadius(): number {\r\n        return this.toroidalSurface.majorRadius();\r\n    }\r\n    set majorRadius(value: number) {\r\n        this.toroidalSurface.setMajorRadius(value);\r\n    }\r\n    get minorRadius(): number {\r\n        return this.toroidalSurface.minorRadius();\r\n    }\r\n    set minorRadius(value: number) {\r\n        this.toroidalSurface.setMinorRadius(value);\r\n    }\r\n}\r\n\r\nexport class OccSurfaceOfLinearExtrusion extends OccSweptSurface implements ISurfaceOfLinearExtrusion {\r\n    constructor(private surfaceOfLinearExtrusion: Geom_SurfaceOfLinearExtrusion) {\r\n        super(surfaceOfLinearExtrusion);\r\n    }\r\n    setDirection(direction: XYZ) {\r\n        gc((c) => {\r\n            this.surfaceOfLinearExtrusion.setDirection(c(OcctHelper.toDir(direction)));\r\n        });\r\n    }\r\n    setBasisCurve(curve: ICurve) {\r\n        if (!(curve instanceof OccCurve)) {\r\n            throw new Error(\"curve must be an OccCurve\");\r\n        }\r\n        let handleCurve = new wasm.Handle_Geom_Curve(curve.curve);\r\n        this.surfaceOfLinearExtrusion.setBasisCurve(handleCurve);\r\n        handleCurve.delete();\r\n    }\r\n}\r\n\r\nexport class OccSurfaceOfRevolution extends OccSweptSurface implements ISurfaceOfRevolution {\r\n    constructor(private surfaceOfRevolution: Geom_SurfaceOfRevolution) {\r\n        super(surfaceOfRevolution);\r\n    }\r\n    get location(): XYZ {\r\n        return gc((c) => {\r\n            return OcctHelper.toXYZ(c(this.surfaceOfRevolution.location()));\r\n        });\r\n    }\r\n    set location(value: XYZ) {\r\n        gc((c) => {\r\n            this.surfaceOfRevolution.setLocation(c(OcctHelper.toPnt(value)));\r\n        });\r\n    }\r\n    referencePlane(): Plane {\r\n        return gc((c) => {\r\n            return OcctHelper.fromAx23(c(this.surfaceOfRevolution.referencePlane()));\r\n        });\r\n    }\r\n    setDirection(direction: XYZ) {\r\n        gc((c) => {\r\n            this.surfaceOfRevolution.setDirection(c(OcctHelper.toDir(direction)));\r\n        });\r\n    }\r\n    setBasisCurve(curve: ICurve) {\r\n        if (!(curve instanceof OccCurve)) {\r\n            throw new Error(\"curve must be an OccCurve\");\r\n        }\r\n        let handleCurve = new wasm.Handle_Geom_Curve(curve.curve);\r\n        this.surfaceOfRevolution.setBasisCurve(handleCurve);\r\n        handleCurve.delete();\r\n    }\r\n}\r\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\r\n// See LICENSE file in the project root for full license information.\r\n\r\nimport {\r\n    Continuity,\r\n    CurveType,\r\n    gc,\r\n    ICurve,\r\n    Id,\r\n    IShape,\r\n    ISurface,\r\n    JoinType,\r\n    Matrix4,\r\n    Orientation,\r\n    Plane,\r\n    Ray,\r\n    ShapeType,\r\n    SurfaceType,\r\n    XYZ,\r\n} from \"chili-core\";\r\nimport {\r\n    Geom_BezierCurve,\r\n    Geom_BSplineCurve,\r\n    Geom_Circle,\r\n    Geom_Curve,\r\n    Geom_Ellipse,\r\n    Geom_Hyperbola,\r\n    Geom_Line,\r\n    Geom_OffsetCurve,\r\n    Geom_Parabola,\r\n    Geom_Surface,\r\n    Geom_TrimmedCurve,\r\n    GeomAbs_Shape,\r\n    gp_Ax1,\r\n    gp_Ax2,\r\n    gp_Ax3,\r\n    gp_Dir,\r\n    gp_Pln,\r\n    gp_Pnt,\r\n    gp_Trsf,\r\n    gp_Vec,\r\n    TopAbs_ShapeEnum,\r\n    TopoDS_Shape,\r\n    Vector3,\r\n} from \"../lib/chili-wasm\";\r\nimport {\r\n    OccBezierCurve,\r\n    OccBSplineCurve,\r\n    OccCircle,\r\n    OccEllipse,\r\n    OccHyperbola,\r\n    OccLine,\r\n    OccOffsetCurve,\r\n    OccParabola,\r\n    OccTrimmedCurve,\r\n} from \"./curve\";\r\nimport {\r\n    OccCompound,\r\n    OccCompSolid,\r\n    OccEdge,\r\n    OccFace,\r\n    OccShape,\r\n    OccShell,\r\n    OccSolid,\r\n    OccVertex,\r\n    OccWire,\r\n} from \"./shape\";\r\nimport {\r\n    OccBezierSurface,\r\n    OccBSplineSurface,\r\n    OccCompositeSurface,\r\n    OccConicalSurface,\r\n    OccCylindricalSurface,\r\n    OccOffsetSurface,\r\n    OccPlane,\r\n    OccPlateSurface,\r\n    OccRectangularSurface,\r\n    OccSphericalSurface,\r\n    OccSurfaceOfLinearExtrusion,\r\n    OccSurfaceOfRevolution,\r\n    OccToroidalSurface,\r\n} from \"./surface\";\r\n\r\nexport class OcctHelper {\r\n    static toXYZ(p: gp_Pnt | gp_Dir | gp_Vec | Vector3): XYZ {\r\n        return new XYZ(p.x, p.y, p.z);\r\n    }\r\n\r\n    static toDir(value: Vector3) {\r\n        return new wasm.gp_Dir(value.x, value.y, value.z);\r\n    }\r\n\r\n    static toPnt(value: Vector3) {\r\n        return new wasm.gp_Pnt(value.x, value.y, value.z);\r\n    }\r\n\r\n    static toVec(value: Vector3) {\r\n        return new wasm.gp_Vec(value.x, value.y, value.z);\r\n    }\r\n\r\n    static toAx1(ray: Ray): gp_Ax1 {\r\n        return gc((c) => {\r\n            return new wasm.gp_Ax1(c(OcctHelper.toPnt(ray.location)), c(OcctHelper.toDir(ray.direction)));\r\n        });\r\n    }\r\n\r\n    static toAx2(plane: Plane): gp_Ax2 {\r\n        return gc((c) => {\r\n            return new wasm.gp_Ax2(\r\n                c(OcctHelper.toPnt(plane.origin)),\r\n                c(OcctHelper.toDir(plane.normal)),\r\n                c(OcctHelper.toDir(plane.xvec)),\r\n            );\r\n        });\r\n    }\r\n\r\n    static toAx3(plane: Plane): gp_Ax3 {\r\n        return new wasm.gp_Ax3(\r\n            OcctHelper.toPnt(plane.origin),\r\n            OcctHelper.toDir(plane.normal),\r\n            OcctHelper.toDir(plane.xvec),\r\n        );\r\n    }\r\n\r\n    static fromAx23(ax: gp_Ax2 | gp_Ax3): Plane {\r\n        return gc((c) => {\r\n            return new Plane(\r\n                OcctHelper.toXYZ(c(ax.location())),\r\n                OcctHelper.toXYZ(c(ax.direction())),\r\n                OcctHelper.toXYZ(c(ax.xDirection())),\r\n            );\r\n        });\r\n    }\r\n\r\n    static fromPln(pln: gp_Pln): Plane {\r\n        return gc((c) => {\r\n            let ax3 = c(pln.position());\r\n            return this.fromAx23(ax3);\r\n        });\r\n    }\r\n\r\n    static toPln(plane: Plane): gp_Pln {\r\n        return gc((c) => {\r\n            return new wasm.gp_Pln(c(OcctHelper.toAx3(plane)));\r\n        });\r\n    }\r\n\r\n    static convertFromMatrix(matrix: Matrix4): gp_Trsf {\r\n        const arr = matrix.toArray();\r\n        let trsf = new wasm.gp_Trsf();\r\n        trsf.setValues(\r\n            arr[0],\r\n            arr[4],\r\n            arr[8],\r\n            arr[12],\r\n            arr[1],\r\n            arr[5],\r\n            arr[9],\r\n            arr[13],\r\n            arr[2],\r\n            arr[6],\r\n            arr[10],\r\n            arr[14],\r\n        );\r\n        return trsf;\r\n    }\r\n\r\n    static convertToMatrix(matrix: gp_Trsf): Matrix4 {\r\n        const arr: number[] = [\r\n            matrix.value(1, 1),\r\n            matrix.value(2, 1),\r\n            matrix.value(3, 1),\r\n            0,\r\n            matrix.value(1, 2),\r\n            matrix.value(2, 2),\r\n            matrix.value(3, 2),\r\n            0,\r\n            matrix.value(1, 3),\r\n            matrix.value(2, 3),\r\n            matrix.value(3, 3),\r\n            0,\r\n            matrix.value(1, 4),\r\n            matrix.value(2, 4),\r\n            matrix.value(3, 4),\r\n            1,\r\n        ];\r\n        return Matrix4.fromArray(arr);\r\n    }\r\n\r\n    static getOrientation(shape: TopoDS_Shape): Orientation {\r\n        switch (shape.getOrientation()) {\r\n            case wasm.TopAbs_Orientation.TopAbs_FORWARD:\r\n                return Orientation.FORWARD;\r\n            case wasm.TopAbs_Orientation.TopAbs_REVERSED:\r\n                return Orientation.REVERSED;\r\n            case wasm.TopAbs_Orientation.TopAbs_INTERNAL:\r\n                return Orientation.INTERNAL;\r\n            case wasm.TopAbs_Orientation.TopAbs_EXTERNAL:\r\n                return Orientation.EXTERNAL;\r\n            default:\r\n                return Orientation.FORWARD;\r\n        }\r\n    }\r\n\r\n    static getShapeType(shape: TopoDS_Shape): ShapeType {\r\n        if (shape.isNull()) {\r\n            throw new Error(\"Shape is null\");\r\n        }\r\n\r\n        switch (shape.shapeType()) {\r\n            case wasm.TopAbs_ShapeEnum.TopAbs_COMPOUND:\r\n                return ShapeType.Compound;\r\n            case wasm.TopAbs_ShapeEnum.TopAbs_COMPSOLID:\r\n                return ShapeType.CompoundSolid;\r\n            case wasm.TopAbs_ShapeEnum.TopAbs_SOLID:\r\n                return ShapeType.Solid;\r\n            case wasm.TopAbs_ShapeEnum.TopAbs_SHELL:\r\n                return ShapeType.Shell;\r\n            case wasm.TopAbs_ShapeEnum.TopAbs_FACE:\r\n                return ShapeType.Face;\r\n            case wasm.TopAbs_ShapeEnum.TopAbs_WIRE:\r\n                return ShapeType.Wire;\r\n            case wasm.TopAbs_ShapeEnum.TopAbs_EDGE:\r\n                return ShapeType.Edge;\r\n            case wasm.TopAbs_ShapeEnum.TopAbs_VERTEX:\r\n                return ShapeType.Vertex;\r\n            default:\r\n                return ShapeType.Shape;\r\n        }\r\n    }\r\n\r\n    static getShapeEnum(shapeType: ShapeType): TopAbs_ShapeEnum {\r\n        switch (shapeType) {\r\n            case ShapeType.Compound:\r\n                return wasm.TopAbs_ShapeEnum.TopAbs_COMPOUND;\r\n            case ShapeType.CompoundSolid:\r\n                return wasm.TopAbs_ShapeEnum.TopAbs_COMPSOLID;\r\n            case ShapeType.Solid:\r\n                return wasm.TopAbs_ShapeEnum.TopAbs_SOLID;\r\n            case ShapeType.Shell:\r\n                return wasm.TopAbs_ShapeEnum.TopAbs_SHELL;\r\n            case ShapeType.Face:\r\n                return wasm.TopAbs_ShapeEnum.TopAbs_FACE;\r\n            case ShapeType.Wire:\r\n                return wasm.TopAbs_ShapeEnum.TopAbs_WIRE;\r\n            case ShapeType.Edge:\r\n                return wasm.TopAbs_ShapeEnum.TopAbs_EDGE;\r\n            case ShapeType.Vertex:\r\n                return wasm.TopAbs_ShapeEnum.TopAbs_VERTEX;\r\n            case ShapeType.Shape:\r\n                return wasm.TopAbs_ShapeEnum.TopAbs_SHAPE;\r\n            default:\r\n                throw new Error(\"Unknown shape type: \" + shapeType);\r\n        }\r\n    }\r\n\r\n    static getActualShape(shape: TopoDS_Shape): TopoDS_Shape {\r\n        if (shape.isNull()) {\r\n            throw new Error(\"Shape is null\");\r\n        }\r\n\r\n        switch (shape.shapeType()) {\r\n            case wasm.TopAbs_ShapeEnum.TopAbs_COMPOUND:\r\n                return wasm.TopoDS.compound(shape);\r\n            case wasm.TopAbs_ShapeEnum.TopAbs_COMPSOLID:\r\n                return wasm.TopoDS.compsolid(shape);\r\n            case wasm.TopAbs_ShapeEnum.TopAbs_SOLID:\r\n                return wasm.TopoDS.solid(shape);\r\n            case wasm.TopAbs_ShapeEnum.TopAbs_SHELL:\r\n                return wasm.TopoDS.shell(shape);\r\n            case wasm.TopAbs_ShapeEnum.TopAbs_FACE:\r\n                return wasm.TopoDS.face(shape);\r\n            case wasm.TopAbs_ShapeEnum.TopAbs_WIRE:\r\n                return wasm.TopoDS.wire(shape);\r\n            case wasm.TopAbs_ShapeEnum.TopAbs_EDGE:\r\n                return wasm.TopoDS.edge(shape);\r\n            case wasm.TopAbs_ShapeEnum.TopAbs_VERTEX:\r\n                return wasm.TopoDS.vertex(shape);\r\n            default:\r\n                return shape;\r\n        }\r\n    }\r\n\r\n    static getJoinType(joinType: JoinType) {\r\n        switch (joinType) {\r\n            case JoinType.arc:\r\n                return wasm.GeomAbs_JoinType.GeomAbs_Arc;\r\n            case JoinType.intersection:\r\n                return wasm.GeomAbs_JoinType.GeomAbs_Intersection;\r\n            case JoinType.tangent:\r\n                return wasm.GeomAbs_JoinType.GeomAbs_Tangent;\r\n            default:\r\n                throw new Error(\"Unknown join type: \" + joinType);\r\n        }\r\n    }\r\n\r\n    static wrapShape(shape: TopoDS_Shape, id: string = Id.generate()): IShape {\r\n        if (shape.isNull()) {\r\n            throw new Error(\"Shape is null\");\r\n        }\r\n\r\n        switch (shape.shapeType()) {\r\n            case wasm.TopAbs_ShapeEnum.TopAbs_COMPOUND:\r\n                return new OccCompound(wasm.TopoDS.compound(shape), id);\r\n            case wasm.TopAbs_ShapeEnum.TopAbs_COMPSOLID:\r\n                return new OccCompSolid(wasm.TopoDS.compsolid(shape), id);\r\n            case wasm.TopAbs_ShapeEnum.TopAbs_SOLID:\r\n                return new OccSolid(wasm.TopoDS.solid(shape), id);\r\n            case wasm.TopAbs_ShapeEnum.TopAbs_SHELL:\r\n                return new OccShell(wasm.TopoDS.shell(shape), id);\r\n            case wasm.TopAbs_ShapeEnum.TopAbs_FACE:\r\n                return new OccFace(wasm.TopoDS.face(shape), id);\r\n            case wasm.TopAbs_ShapeEnum.TopAbs_WIRE:\r\n                return new OccWire(wasm.TopoDS.wire(shape), id);\r\n            case wasm.TopAbs_ShapeEnum.TopAbs_EDGE:\r\n                return new OccEdge(wasm.TopoDS.edge(shape), id);\r\n            case wasm.TopAbs_ShapeEnum.TopAbs_VERTEX:\r\n                return new OccVertex(wasm.TopoDS.vertex(shape), id);\r\n            default:\r\n                return new OccShape(shape, id);\r\n        }\r\n    }\r\n\r\n    static wrapCurve(curve: Geom_Curve): ICurve {\r\n        let isType = (type: string) => wasm.Transient.isInstance(curve, type);\r\n        if (isType(\"Geom_Line\")) return new OccLine(curve as Geom_Line);\r\n        else if (isType(\"Geom_Circle\")) return new OccCircle(curve as Geom_Circle);\r\n        else if (isType(\"Geom_Ellipse\")) return new OccEllipse(curve as Geom_Ellipse);\r\n        else if (isType(\"Geom_Hyperbola\")) return new OccHyperbola(curve as Geom_Hyperbola);\r\n        else if (isType(\"Geom_Parabola\")) return new OccParabola(curve as Geom_Parabola);\r\n        else if (isType(\"Geom_BezierCurve\")) return new OccBezierCurve(curve as Geom_BezierCurve);\r\n        else if (isType(\"Geom_BSplineCurve\")) return new OccBSplineCurve(curve as Geom_BSplineCurve);\r\n        else if (isType(\"Geom_OffsetCurve\")) return new OccOffsetCurve(curve as Geom_OffsetCurve);\r\n        else if (isType(\"Geom_TrimmedCurve\")) return new OccTrimmedCurve(curve as Geom_TrimmedCurve);\r\n\r\n        throw new Error(\"Unknown curve type: \" + String(curve));\r\n    }\r\n\r\n    static getCurveType(curve: Geom_Curve): CurveType {\r\n        let isType = (type: string) => wasm.Transient.isInstance(curve, type);\r\n        if (isType(\"Geom_Line\")) return CurveType.Line;\r\n        else if (isType(\"Geom_Circle\")) return CurveType.Circle;\r\n        else if (isType(\"Geom_Ellipse\")) return CurveType.Ellipse;\r\n        else if (isType(\"Geom_Hyperbola\")) return CurveType.Hyperbola;\r\n        else if (isType(\"Geom_Parabola\")) return CurveType.Parabola;\r\n        else if (isType(\"Geom_BezierCurve\")) return CurveType.BezierCurve;\r\n        else if (isType(\"Geom_BSplineCurve\")) return CurveType.BSplineCurve;\r\n        else if (isType(\"Geom_OffsetCurve\")) return CurveType.OffsetCurve;\r\n        else if (isType(\"Geom_TrimmedCurve\")) return CurveType.TrimmedCurve;\r\n\r\n        throw new Error(\"Unknown curve type\");\r\n    }\r\n\r\n    static wrapSurface(surface: Geom_Surface): ISurface {\r\n        let isType = (type: string) => wasm.Transient.isInstance(surface, type);\r\n        let actualSurface = surface as any;\r\n        if (isType(\"GeomPlate_Surface\")) return new OccPlateSurface(actualSurface);\r\n        else if (isType(\"Geom_Plane\")) return new OccPlane(actualSurface);\r\n        else if (isType(\"Geom_SurfaceOfLinearExtrusion\"))\r\n            return new OccSurfaceOfLinearExtrusion(actualSurface);\r\n        else if (isType(\"Geom_SurfaceOfRevolution\")) return new OccSurfaceOfRevolution(actualSurface);\r\n        else if (isType(\"Geom_OffsetSurface\")) return new OccOffsetSurface(actualSurface);\r\n        else if (isType(\"Geom_BSplineSurface\")) return new OccBSplineSurface(actualSurface);\r\n        else if (isType(\"Geom_BezierSurface\")) return new OccBezierSurface(actualSurface);\r\n        else if (isType(\"Geom_CylindricalSurface\")) return new OccCylindricalSurface(actualSurface);\r\n        else if (isType(\"Geom_ConicalSurface\")) return new OccConicalSurface(actualSurface);\r\n        else if (isType(\"Geom_SphericalSurface\")) return new OccSphericalSurface(actualSurface);\r\n        else if (isType(\"Geom_RectangularTrimmedSurface\")) return new OccRectangularSurface(actualSurface);\r\n        else if (isType(\"Geom_ToroidalSurface\")) return new OccToroidalSurface(actualSurface);\r\n        else if (isType(\"ShapeExtent_CompositeSurface\")) return new OccCompositeSurface(actualSurface);\r\n\r\n        throw new Error(\"Unknown surface type: \" + String(surface));\r\n    }\r\n\r\n    static getSurfaceType(surface: Geom_Surface): SurfaceType {\r\n        let isType = (type: string) => wasm.Transient.isInstance(surface, type);\r\n        if (isType(\"GeomPlate_Surface\")) return SurfaceType.Plate;\r\n        else if (isType(\"Geom_Plane\")) return SurfaceType.Plane;\r\n        else if (isType(\"Geom_SurfaceOfLinearExtrusion\")) return SurfaceType.Extrusion;\r\n        else if (isType(\"Geom_SurfaceOfRevolution\")) return SurfaceType.Revolution;\r\n        else if (isType(\"Geom_OffsetSurface\")) return SurfaceType.Offset;\r\n        else if (isType(\"Geom_BSplineSurface\")) return SurfaceType.BSpline;\r\n        else if (isType(\"Geom_BezierSurface\")) return SurfaceType.Bezier;\r\n        else if (isType(\"Geom_CylindricalSurface\")) return SurfaceType.Cylinder;\r\n        else if (isType(\"Geom_ConicalSurface\")) return SurfaceType.Conical;\r\n        else if (isType(\"Geom_SphericalSurface\")) return SurfaceType.Spherical;\r\n        else if (isType(\"Geom_RectangularTrimmedSurface\")) return SurfaceType.RectangularTrimmed;\r\n        else if (isType(\"Geom_ToroidalSurface\")) return SurfaceType.Toroidal;\r\n        else if (isType(\"ShapeExtent_CompositeSurface\")) return SurfaceType.Composite;\r\n\r\n        throw new Error(\"Unknown surface type\");\r\n    }\r\n\r\n    static convertContinuity(cni: GeomAbs_Shape) {\r\n        switch (cni) {\r\n            case wasm.GeomAbs_Shape.GeomAbs_C0:\r\n                return Continuity.C0;\r\n            case wasm.GeomAbs_Shape.GeomAbs_G1:\r\n                return Continuity.G1;\r\n            case wasm.GeomAbs_Shape.GeomAbs_C1:\r\n                return Continuity.C1;\r\n            case wasm.GeomAbs_Shape.GeomAbs_G2:\r\n                return Continuity.G2;\r\n            case wasm.GeomAbs_Shape.GeomAbs_C2:\r\n                return Continuity.C2;\r\n            case wasm.GeomAbs_Shape.GeomAbs_C3:\r\n                return Continuity.C3;\r\n            case wasm.GeomAbs_Shape.GeomAbs_CN:\r\n                return Continuity.CN;\r\n            default:\r\n                throw new Error(\"unknown continuity\");\r\n        }\r\n    }\r\n}\r\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\r\n// See LICENSE file in the project root for full license information.\r\n\r\nimport {\r\n    Deletable,\r\n    EditableShapeNode,\r\n    FolderNode,\r\n    GroupNode,\r\n    IDisposable,\r\n    IDocument,\r\n    IShape,\r\n    IShapeConverter,\r\n    Material,\r\n    Result,\r\n    gc,\r\n} from \"chili-core\";\r\nimport { ShapeNode } from \"../lib/chili-wasm\";\r\nimport { OcctHelper } from \"./helper\";\r\nimport { OccShape } from \"./shape\";\r\n\r\nexport class OccShapeConverter implements IShapeConverter {\r\n    private readonly addShapeNode = (\r\n        collector: (d: Deletable | IDisposable) => any,\r\n        folder: FolderNode,\r\n        node: ShapeNode,\r\n        children: ShapeNode[],\r\n        getMaterialId: (document: IDocument, color: string) => string,\r\n    ) => {\r\n        if (node.shape && !node.shape.isNull()) {\r\n            const shape = OcctHelper.wrapShape(node.shape);\r\n            const material = getMaterialId(folder.document, node.color as string);\r\n            folder.add(new EditableShapeNode(folder.document, node.name, shape, material));\r\n        }\r\n\r\n        children.forEach((child) => {\r\n            collector(child);\r\n            const subChildren = child.getChildren();\r\n            const childFolder = subChildren.length > 1 ? new GroupNode(folder.document, child.name) : folder;\r\n\r\n            if (subChildren.length > 1) {\r\n                folder.add(childFolder);\r\n            }\r\n            this.addShapeNode(collector, childFolder, child, subChildren, getMaterialId);\r\n        });\r\n    };\r\n\r\n    convertToIGES(...shapes: IShape[]): Result<string> {\r\n        let occShapes = shapes.map((shape) => {\r\n            if (shape instanceof OccShape) {\r\n                return shape.shape;\r\n            }\r\n            throw new Error(\"Shape is not an OccShape\");\r\n        });\r\n        return Result.ok(wasm.Converter.convertToIges(occShapes));\r\n    }\r\n\r\n    convertFromIGES(document: IDocument, iges: Uint8Array): Result<FolderNode> {\r\n        return this.converterFromData(document, iges, wasm.Converter.convertFromIges);\r\n    }\r\n\r\n    private readonly converterFromData = (\r\n        document: IDocument,\r\n        data: Uint8Array,\r\n        converter: (data: Uint8Array) => ShapeNode | undefined,\r\n    ) => {\r\n        const materialMap: Map<string, string> = new Map();\r\n        const getMaterialId = (document: IDocument, color: string) => {\r\n            if (!materialMap.has(color)) {\r\n                const material = new Material(document, color, color);\r\n                document.materials.push(material);\r\n                materialMap.set(color, material.id);\r\n            }\r\n            return materialMap.get(color)!;\r\n        };\r\n\r\n        return gc((c) => {\r\n            const node = converter(data);\r\n            if (!node) {\r\n                return Result.err(\"can not convert\");\r\n            }\r\n            const folder = new GroupNode(document, \"undefined\");\r\n            this.addShapeNode(c, folder, node, node.getChildren(), getMaterialId);\r\n            c(node);\r\n            return Result.ok(folder);\r\n        });\r\n    };\r\n\r\n    convertToSTEP(...shapes: IShape[]): Result<string> {\r\n        let occShapes = shapes.map((shape) => {\r\n            if (shape instanceof OccShape) {\r\n                return shape.shape;\r\n            }\r\n            throw new Error(\"Shape is not an OccShape\");\r\n        });\r\n        return Result.ok(wasm.Converter.convertToStep(occShapes));\r\n    }\r\n\r\n    convertFromSTEP(document: IDocument, step: Uint8Array): Result<FolderNode> {\r\n        return this.converterFromData(document, step, wasm.Converter.convertFromStep);\r\n    }\r\n\r\n    convertToBrep(shape: IShape): Result<string> {\r\n        if (shape instanceof OccShape) {\r\n            return Result.ok(wasm.Converter.convertToBrep(shape.shape));\r\n        }\r\n        return Result.err(\"Shape is not an OccShape\");\r\n    }\r\n\r\n    convertFromBrep(brep: string): Result<IShape> {\r\n        let shape = wasm.Converter.convertFromBrep(brep);\r\n        if (shape.isNull()) {\r\n            return Result.err(\"can not convert\");\r\n        }\r\n        return Result.ok(OcctHelper.wrapShape(shape));\r\n    }\r\n}\r\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\r\n// See LICENSE file in the project root for full license information.\r\n\r\nimport {\r\n    ICompound,\r\n    IEdge,\r\n    IFace,\r\n    IShape,\r\n    IShapeConverter,\r\n    IShapeFactory,\r\n    IShell,\r\n    ISolid,\r\n    IVertex,\r\n    IWire,\r\n    MathUtils,\r\n    Plane,\r\n    Precision,\r\n    Ray,\r\n    Result,\r\n    XYZ,\r\n    XYZLike,\r\n} from \"chili-core\";\r\nimport { ShapeResult, TopoDS_Shape } from \"../lib/chili-wasm\";\r\nimport { OccShapeConverter } from \"./converter\";\r\nimport { OcctHelper } from \"./helper\";\r\nimport { OccShape } from \"./shape\";\r\n\r\nfunction ensureOccShape(shapes: IShape | IShape[]): TopoDS_Shape[] {\r\n    if (Array.isArray(shapes)) {\r\n        return shapes.map((x) => {\r\n            if (!(x instanceof OccShape)) {\r\n                throw new Error(\"The OCC kernel only supports OCC geometries.\");\r\n            }\r\n            return x.shape;\r\n        });\r\n    }\r\n\r\n    if (shapes instanceof OccShape) {\r\n        return [shapes.shape];\r\n    }\r\n\r\n    throw new Error(\"The OCC kernel only supports OCC geometries.\");\r\n}\r\n\r\nfunction convertShapeResult(result: ShapeResult): Result<IShape, string> {\r\n    let res: Result<IShape, string>;\r\n    if (!result.isOk) {\r\n        res = Result.err(result.error);\r\n    } else if (result.shape.isNull()) {\r\n        res = Result.err(\"The shape is null.\");\r\n    } else {\r\n        res = Result.ok(OcctHelper.wrapShape(result.shape));\r\n    }\r\n\r\n    result.delete();\r\n    return res;\r\n}\r\n\r\nexport class ShapeFactory implements IShapeFactory {\r\n    readonly kernelName = \"opencascade\";\r\n    readonly converter: IShapeConverter;\r\n\r\n    constructor() {\r\n        this.converter = new OccShapeConverter();\r\n    }\r\n\r\n    fillet(shape: IShape, edges: number[], radius: number): Result<IShape> {\r\n        if (radius < Precision.Distance) {\r\n            return Result.err(\"The radius is too small.\");\r\n        }\r\n\r\n        if (edges.length === 0) {\r\n            return Result.err(\"The edges is empty.\");\r\n        }\r\n\r\n        if (shape instanceof OccShape) {\r\n            return convertShapeResult(wasm.ShapeFactory.fillet(shape.shape, edges, radius));\r\n        }\r\n        return Result.err(\"Not OccShape\");\r\n    }\r\n\r\n    chamfer(shape: IShape, edges: number[], distance: number): Result<IShape> {\r\n        if (distance < Precision.Distance) {\r\n            return Result.err(\"The distance is too small.\");\r\n        }\r\n\r\n        if (edges.length === 0) {\r\n            return Result.err(\"The edges is empty.\");\r\n        }\r\n\r\n        if (shape instanceof OccShape) {\r\n            return convertShapeResult(wasm.ShapeFactory.chamfer(shape.shape, edges, distance));\r\n        }\r\n        return Result.err(\"Not OccShape\");\r\n    }\r\n\r\n    removeFeature(shape: IShape, faces: IFace[]): Result<IShape> {\r\n        if (!(shape instanceof OccShape)) {\r\n            return Result.err(\"Not OccShape\");\r\n        }\r\n        let occFaces = faces.map((x) => {\r\n            if (!(x instanceof OccShape)) {\r\n                throw new Error(\"The OCC kernel only supports OCC geometries.\");\r\n            }\r\n            if (x.shape.isNull()) {\r\n                throw new Error(\"The shape is null.\");\r\n            }\r\n            return x.shape;\r\n        });\r\n        const removed = wasm.Shape.removeFeature(shape.shape, occFaces);\r\n        if (removed.isNull()) {\r\n            return Result.err(\"Can not remove\");\r\n        }\r\n        return Result.ok(OcctHelper.wrapShape(removed));\r\n    }\r\n\r\n    removeSubShape(shape: IShape, subShapes: IShape[]): IShape {\r\n        const occShape = ensureOccShape(shape);\r\n        const occSubShapes = ensureOccShape(subShapes);\r\n        return OcctHelper.wrapShape(wasm.Shape.removeSubShape(occShape[0], occSubShapes));\r\n    }\r\n\r\n    replaceSubShape(shape: IShape, subShape: IShape, newSubShape: IShape): IShape {\r\n        const [occShape, occSubShape, occNewSubShape] = ensureOccShape([shape, subShape, newSubShape]);\r\n        return OcctHelper.wrapShape(wasm.Shape.replaceSubShape(occShape, occSubShape, occNewSubShape));\r\n    }\r\n\r\n    face(wire: IWire[]): Result<IFace> {\r\n        let shapes = ensureOccShape(wire);\r\n        return convertShapeResult(wasm.ShapeFactory.face(shapes)) as Result<IFace>;\r\n    }\r\n    bezier(points: XYZLike[], weights?: number[]): Result<IEdge> {\r\n        return convertShapeResult(wasm.ShapeFactory.bezier(points, weights ?? [])) as Result<IEdge>;\r\n    }\r\n    point(point: XYZLike): Result<IVertex> {\r\n        return convertShapeResult(wasm.ShapeFactory.point(point)) as Result<IVertex>;\r\n    }\r\n    line(start: XYZLike, end: XYZLike): Result<IEdge> {\r\n        if (MathUtils.allEqualZero(start.x - end.x, start.y - end.y, start.z - end.z)) {\r\n            return Result.err(\"The start and end points are too close.\");\r\n        }\r\n\r\n        return convertShapeResult(wasm.ShapeFactory.line(start, end)) as Result<IEdge>;\r\n    }\r\n    arc(normal: XYZLike, center: XYZLike, start: XYZLike, angle: number): Result<IEdge> {\r\n        return convertShapeResult(\r\n            wasm.ShapeFactory.arc(normal, center, start, MathUtils.degToRad(angle)),\r\n        ) as Result<IEdge>;\r\n    }\r\n    circle(normal: XYZLike, center: XYZLike, radius: number): Result<IEdge> {\r\n        return convertShapeResult(wasm.ShapeFactory.circle(normal, center, radius)) as Result<IEdge>;\r\n    }\r\n    rect(plane: Plane, dx: number, dy: number): Result<IFace> {\r\n        return convertShapeResult(\r\n            wasm.ShapeFactory.rect(\r\n                {\r\n                    location: plane.origin,\r\n                    direction: plane.normal,\r\n                    xDirection: plane.xvec,\r\n                },\r\n                dx,\r\n                dy,\r\n            ),\r\n        ) as Result<IFace>;\r\n    }\r\n    polygon(points: XYZLike[]): Result<IWire> {\r\n        return convertShapeResult(wasm.ShapeFactory.polygon(points)) as Result<IWire>;\r\n    }\r\n    box(plane: Plane, dx: number, dy: number, dz: number): Result<ISolid> {\r\n        return convertShapeResult(\r\n            wasm.ShapeFactory.box(\r\n                {\r\n                    location: plane.origin,\r\n                    direction: plane.normal,\r\n                    xDirection: plane.xvec,\r\n                },\r\n                dx,\r\n                dy,\r\n                dz,\r\n            ),\r\n        ) as Result<ISolid>;\r\n    }\r\n    cylinder(dir: XYZ, center: XYZ, radius: number, dz: number): Result<ISolid> {\r\n        return convertShapeResult(wasm.ShapeFactory.cylinder(dir, center, radius, dz)) as Result<ISolid>;\r\n    }\r\n    cone(dir: XYZ, center: XYZ, radius: number, radiusUp: number, dz: number): Result<ISolid> {\r\n        return convertShapeResult(\r\n            wasm.ShapeFactory.cone(dir, center, radius, radiusUp, dz),\r\n        ) as Result<ISolid>;\r\n    }\r\n    sphere(center: XYZ, radius: number): Result<ISolid> {\r\n        return convertShapeResult(wasm.ShapeFactory.sphere(center, radius)) as Result<ISolid>;\r\n    }\r\n    ellipse(\r\n        normal: XYZLike,\r\n        center: XYZLike,\r\n        xvec: XYZLike,\r\n        majorRadius: number,\r\n        minorRadius: number,\r\n    ): Result<IEdge> {\r\n        return convertShapeResult(\r\n            wasm.ShapeFactory.ellipse(normal, center, xvec, majorRadius, minorRadius),\r\n        ) as Result<IEdge>;\r\n    }\r\n    pyramid(plane: Plane, dx: number, dy: number, dz: number): Result<ISolid> {\r\n        return convertShapeResult(\r\n            wasm.ShapeFactory.pyramid(\r\n                {\r\n                    location: plane.origin,\r\n                    direction: plane.normal,\r\n                    xDirection: plane.xvec,\r\n                },\r\n                dx,\r\n                dy,\r\n                dz,\r\n            ),\r\n        ) as Result<ISolid>;\r\n    }\r\n    wire(edges: IEdge[]): Result<IWire> {\r\n        return convertShapeResult(wasm.ShapeFactory.wire(ensureOccShape(edges))) as Result<IWire>;\r\n    }\r\n    shell(faces: IFace[]): Result<IShell> {\r\n        return convertShapeResult(wasm.ShapeFactory.shell(ensureOccShape(faces))) as Result<IShell>;\r\n    }\r\n    solid(shells: IShell[]): Result<ISolid> {\r\n        return convertShapeResult(wasm.ShapeFactory.solid(ensureOccShape(shells))) as Result<ISolid>;\r\n    }\r\n    prism(shape: IShape, vec: XYZ): Result<IShape> {\r\n        if (vec.length() === 0) {\r\n            return Result.err(`The vector length is 0, the prism cannot be created.`);\r\n        }\r\n        return convertShapeResult(wasm.ShapeFactory.prism(ensureOccShape(shape)[0], vec));\r\n    }\r\n    fuse(bottom: IShape, top: IShape): Result<IShape> {\r\n        return convertShapeResult(\r\n            wasm.ShapeFactory.booleanFuse(ensureOccShape(bottom), ensureOccShape(top)),\r\n        );\r\n    }\r\n    sweep(profile: IShape, path: IWire): Result<IShape> {\r\n        return convertShapeResult(\r\n            wasm.ShapeFactory.sweep(ensureOccShape(profile)[0], ensureOccShape(path)[0]),\r\n        );\r\n    }\r\n    revolve(profile: IShape, axis: Ray, angle: number): Result<IShape> {\r\n        return convertShapeResult(\r\n            wasm.ShapeFactory.revolve(\r\n                ensureOccShape(profile)[0],\r\n                {\r\n                    location: axis.location,\r\n                    direction: axis.direction,\r\n                },\r\n                MathUtils.degToRad(angle),\r\n            ),\r\n        );\r\n    }\r\n    booleanCommon(shape1: IShape, shape2: IShape): Result<IShape> {\r\n        return convertShapeResult(\r\n            wasm.ShapeFactory.booleanCommon(ensureOccShape(shape1), ensureOccShape(shape2)),\r\n        );\r\n    }\r\n    booleanCut(shape1: IShape, shape2: IShape): Result<IShape> {\r\n        return convertShapeResult(\r\n            wasm.ShapeFactory.booleanCut(ensureOccShape(shape1), ensureOccShape(shape2)),\r\n        );\r\n    }\r\n    booleanFuse(shape1: IShape, shape2: IShape): Result<IShape> {\r\n        return convertShapeResult(\r\n            wasm.ShapeFactory.booleanFuse(ensureOccShape(shape1), ensureOccShape(shape2)),\r\n        );\r\n    }\r\n    combine(shapes: IShape[]): Result<ICompound> {\r\n        return convertShapeResult(wasm.ShapeFactory.combine(ensureOccShape(shapes))) as Result<ICompound>;\r\n    }\r\n    makeThickSolidBySimple(shape: IShape, thickness: number): Result<IShape> {\r\n        return convertShapeResult(\r\n            wasm.ShapeFactory.makeThickSolidBySimple(ensureOccShape(shape)[0], thickness),\r\n        );\r\n    }\r\n    makeThickSolidByJoin(shape: IShape, closingFaces: IShape[], thickness: number): Result<IShape> {\r\n        return convertShapeResult(\r\n            wasm.ShapeFactory.makeThickSolidByJoin(\r\n                ensureOccShape(shape)[0],\r\n                ensureOccShape(closingFaces),\r\n                thickness,\r\n            ),\r\n        );\r\n    }\r\n}\r\n"],"names":["Module","moduleArg","readyPromiseResolve","readyPromiseReject","readAsync","readBinary","wasmBinary","wasmMemory","EXITSTATUS","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAP64","HEAPU64","HEAPF64","wasmBinaryFile","embind_charCodes","delayFunction","wasmTable","readyPromise","Promise","resolve","reject","thisProgram","quit_","status","toThrow","scriptDirectory","locateFile","path","URL","url","response","fetch","Error","out","console","err","ABORT","assert","condition","text","abort","updateMemoryViews","b","Int8Array","Int16Array","Uint8Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array","preRun","addOnPreRun","callRuntimeCallbacks","onPreRuns","initRuntime","FS","TTY","wasmExports","postRun","addOnPostRun","onPostRuns","runDependencies","dependenciesFulfilled","getUniqueRunDependency","id","addRunDependency","removeRunDependency","callback","what","e","WebAssembly","findWasmBinary","getBinarySync","file","getWasmBinary","binaryFile","instantiateArrayBuffer","imports","binary","reason","instantiateAsync","getWasmImports","wasmImports","createWasm","receiveInstance","instance","module","applySignatureConversions","receiveInstantiationResult","result","info","mod","inst","ExitStatus","callbacks","cb","noExitRuntime","ExceptionInfo","excPtr","type","destructor","caught","rethrown","adjustedPtr","exceptionLast","uncaughtExceptionCount","bigintToI53Checked","num","NaN","Number","___cxa_throw","ptr","PATH","filename","splitPathRe","parts","allowAboveRoot","up","i","last","isAbsolute","trailingSlash","p","root","dir","paths","l","r","initRandomFill","view","crypto","randomFill","PATH_FS","args","resolvedPath","resolvedAbsolute","TypeError","from","to","trim","arr","start","end","fromParts","toParts","length","Math","samePartsLength","outputParts","UTF8Decoder","TextDecoder","undefined","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","str","u0","String","u1","u2","ch","FS_stdin_getChar_buffer","lengthBytesUTF8","len","c","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","u","intArrayFromString","stringy","dontAddNull","u8array","Array","numBytesWritten","FS_stdin_getChar","window","dev","ops","stream","tty","buffer","offset","pos","bytesRead","Date","val","optional_actions","data","mmapAlloc","size","MEMFS","mount","parent","name","mode","node","newCapacity","prevCapacity","oldContents","newSize","attr","key","old_node","new_dir","new_name","new_node","Object","newname","oldpath","position","contents","canOwn","whence","prot","flags","allocated","mmapFlags","asyncLoad","FS_createDataFile","preloadPlugins","FS_handledByPreloadPlugin","byteArray","fullname","finish","onerror","Browser","handled","plugin","FS_modeStringToFlags","flagModes","FS_getMode","canRead","canWrite","errno","rdev","opts","linkloop","nlinks","current","current_path","islast","link","parentid","hash","errCode","nodeName","flag","perms","isdir","op","fd","origStream","setattr","arg","device","ma","mi","mounts","check","m","populate","completed","doCallback","done","mountpoint","pseudo","lookup","mountRoot","next","rtn","dirs","d","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","relative","readdir","dontFollow","getattr","uid","gid","atime","mtime","isDirPath","created","seeking","bytesWritten","cmd","ret","stat","buf","actualNumBytes","ArrayBuffer","randomBuffer","randomLeft","randomByte","proc_self","k","v","input","output","error","dontResolveLastLink","part","properties","obj","XMLHttpRequest","stream_ops","writeChunks","keys","fn","UTF8ToString","SYSCALLS","dirfd","allowEmpty","dirstream","BigInt","ctime","stats","addr","___syscall_chmod","___syscall_faccessat","amode","syscallGetVarargI","___syscall_fcntl64","varargs","newStream","syscallGetVarargP","___syscall_fstat64","___syscall_ioctl","termios","argp","c_iflag","c_oflag","c_cflag","c_lflag","c_cc","winsize","___syscall_lstat64","___syscall_newfstatat","nofollow","___syscall_openat","___syscall_rmdir","___syscall_stat64","___syscall_unlinkat","structRegistrations","runDestructors","destructors","del","readPointer","pointer","awaitingDependencies","registeredTypes","typeDependencies","InternalError","message","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","embindRepr","t","readLatin1String","BindingError","throwBindingError","sharedRegisterType","rawType","registeredInstance","options","integerReadValueFromPointer","width","signed","__embind_register_bigint","primitiveType","minRange","maxRange","isUnsignedType","value","GenericWireTypeSize","__embind_register_bool","trueValue","falseValue","wt","o","shallowCopyInternalPointer","throwInstanceAlreadyDeleted","getInstanceTypeName","handle","finalizationRegistry","detachFinalizer","runDestructor","$$","releaseClassHandle","toDelete","attachFinalizer","FinalizationRegistry","deletionQueue","flushPendingDeletes","ClassHandle","createNamedFunction","func","registeredPointers","ensureOverloadTable","proto","methodName","humanName","prevFunc","exposePublicSymbol","numArguments","makeLegalFunctionName","f","RegisteredClass","constructor","instancePrototype","rawDestructor","baseClass","getActualType","upcast","downcast","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","handleClass","genericPointerToWireType","clonedHandle","Emval","nonConstNoSmartPtrRawPointerToWireType","downcastPointer","rv","registeredInstances","getBasestPointer","class_","getInheritedInstance","makeClassHandle","prototype","record","hasSmartPtrType","RegisteredPointer_fromWireType","toType","rawPointer","makeDefaultHandle","registeredPointerRecord","dp","RegisteredPointer","registeredClass","isReference","isConst","isSmartPointer","pointeeType","sharingPolicy","rawGetPointee","rawConstructor","rawShare","replacePublicSymbol","getWasmTableEntry","funcPtr","dynCall","sig","promising","getDynCaller","embind__requireFunction","signature","rawFunction","isAsync","fp","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","types","unboundTypes","seen","visit","__embind_register_class","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","base","basePrototype","body","referenceConverter","pointerConverter","constPointerConverter","usesDestructorStack","argTypes","createJsInvoker","isClassMethodFunc","returns","needsDestructorStack","argCount","argsList","argsListWired","invokerFnBody","dtorStack","args1","paramName","craftInvokerFunction","classType","cppInvokerFunc","cppTargetFunc","closureArgs","Function","heap32VectorToArray","count","firstElement","array","getFunctionName","argsIndex","validateThis","this_","emval_freelist","emval_handles","__emval_decref","EmValType","__embind_register_emval","enumReadValueFromPointer","__embind_register_enum","isSigned","ctor","requireRegisteredType","impl","__embind_register_enum_value","rawEnumType","enumValue","enumType","Enum","Value","floatReadValueFromPointer","__embind_register_integer","toWireType","fromWireType","bitshift","checkAssertions","toTypeName","__embind_register_memory_view","dataTypeIndex","TA","typeMapping","decodeMemoryView","EmValOptionalType","__embind_register_optional","rawOptionalType","stringToUTF8","outPtr","__embind_register_std_string","payload","decodeStartPtr","currentBytePtr","maxRead","stringSegment","valueIsOfTypeString","_malloc","charCode","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","trailSurrogate","lengthBytesUTF32","__embind_register_user_type","__embind_register_value_object","constructorSignature","__embind_register_value_object_field","structType","fieldName","getterReturnType","getterSignature","getter","getterContext","setterArgumentType","setterSignature","setter","setterContext","inetPton4","tmp","isNaN","inetPton6","words","w","z","valid6regx","RegExp","_htons","parseInt","DNS","res","__emscripten_lookup_name","nameString","runtimeKeepaliveCounter","emval_returnValue","returnType","destructorsRef","__emval_as","emval_symbols","getStringOrSymbol","address","symbol","emval_methodCallers","__emval_call_method","caller","objHandle","emval_addMethodCaller","emval_lookupTypes","a","__emval_get_method_caller","kind","retType","functionBody","params","invokerFunction","__emval_get_property","__emval_incref","__emval_new_array","__emval_new_array_from_memory_view","__emval_new_cstring","__emval_run_destructors","__emval_take_value","isLeapYear","year","MONTH_DAYS_LEAP_CUMULATIVE","MONTH_DAYS_REGULAR_CUMULATIVE","ydayFromDate","date","monthDaysCumulative","leap","__localtime_js","time","tmPtr","yday","summerOffset","winterOffset","dst","timers","handleException","keepRuntimeAlive","_proc_exit","code","_exit","implicit","maybeExit","callUserCallback","_emscripten_get_now","performance","_emscripten_date_now","checkWasiClock","clock_id","_clock_time_get","clk_id","ignored_precision","ptime","now","nsec","getHeapMax","_emscripten_get_heap_max","alignMemory","alignment","growMemory","pages","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","cutDown","overGrownHeapSize","ENV","getExecutableName","getEnvStrings","env","navigator","x","strings","_environ_get","__environ","environ_buf","bufSize","envp","string","Infinity","_environ_sizes_get","penviron_count","penviron_buf_size","_fd_close","doReadv","iov","iovcnt","curr","_fd_read","pnum","_fd_seek","newOffset","doWritev","_fd_write","onload","dontCreateFile","preFinish","dep","processData","codes","other","leftClass","left","rightClass","right","clone","symbolDispose","Symbol","reg","fieldRecords","field","fieldTypes","fields","optional","rawClassType","rawArgTypesAddr","invokerSignature","rawInvoker","isNonnullReturn","rawArgTypes","unboundTypesHandler","derivedClass","invoker","context","isPureVirtual","method","memberFunction","desc","charSize","decodeString","encodeString","readCharAt","lengthBytesUTF","maxReadBytes","which","timeout_ms","clearTimeout","setTimeout","__emscripten_timeout","timezone","daylight","std_name","dst_name","currentYear","winter","summer","stdTimezoneOffset","extractZone","timezoneOffset","absOffset","hours","minutes","winterName","summerName","makeWrapper_pp","a0","run","doRun","preInit","initWasm","global","MainModuleFactory","OccGeometry","geometry","wasm","isKind","GeometryType","OcctHelper","Mesher","shape","gc","occMesher","meshData","faceMeshData","edgeMeshData","VisualConfig","LineType","g","OccSubEdgeShape","OccSubFaceShape","OccShape","target","OccShapeConverter","tshape","matrix","location","Id","Logger","ancestorType","fromShape","subshapeType","subShape","section","Plane","edges","shapes","IDisposable","OccVertex","OccEdge","curve","OccCurve","edge","Ray","line","OccTrimmedCurve","distance","occDir","Result","newEdge","OccWire","wire","face","OccFace","joinType","offseted","pnt","normal","handleSurface","domain","MathUtils","OccShell","OccSolid","solid","OccCompSolid","OccCompound","index","newCurve","curveCount","trimCurve","cni","point","parameter","tolerance","XYZ","n","vec","vec1","vec2","vec3","OccLine","ax","OccConic","conioc","OccCircle","circle","OccEllipse","ellipse","OccHyperbola","hyperbola","OccParabola","parabola","OccBoundedCurve","boundedCurve","trimmedCurve","OccOffsetCurve","offsetCurve","OccBezierCurve","bezier","weight","pls","OccBSplineCurve","bspline","OccSurface","surface","s","handleCurve","maxDistance","d1u","d1v","d2u","d2v","d2uv","d3u","d3v","d3uuv","d3uvv","nu","nv","OccPlateSurface","plateSurface","v1","v2","OccElementarySurface","elementarySurface","axis","OccOffsetSurface","offsetSurface","OccSweptSurface","sweptSurface","OccCompositeSurface","compositeSurface","OccBSplineSurface","bsplineSurface","OccBezierSurface","bezierSurface","OccRectangularSurface","rectangularSurface","OccConicalSurface","conicalSurface","OccCylindricalSurface","cylindricalSurface","OccPlane","geom_plane","OccSphericalSurface","sphericalSurface","OccToroidalSurface","toroidalSurface","OccSurfaceOfLinearExtrusion","surfaceOfLinearExtrusion","direction","OccSurfaceOfRevolution","surfaceOfRevolution","ray","plane","pln","ax3","trsf","Matrix4","Orientation","ShapeType","shapeType","JoinType","isType","CurveType","SurfaceType","Continuity","collector","folder","children","getMaterialId","material","EditableShapeNode","child","subChildren","childFolder","GroupNode","occShapes","document","iges","converter","materialMap","Map","color","Material","step","brep","ensureOccShape","convertShapeResult","ShapeFactory","radius","Precision","faces","occFaces","removed","subShapes","occShape","occSubShapes","newSubShape","occSubShape","occNewSubShape","points","weights","center","angle","dx","dy","dz","radiusUp","xvec","majorRadius","minorRadius","shells","bottom","top","profile","shape1","shape2","thickness","closingFaces"],"mappings":"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"}