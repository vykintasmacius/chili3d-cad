{"version":3,"file":"897.js","sources":["webpack://chili3d/./packages/chili-three/src/threeHelper.ts","webpack://chili3d/./packages/chili-three/src/common.ts","webpack://chili3d/./packages/chili-three/src/threeGeometryFactory.ts","webpack://chili3d/./packages/chili-three/src/constants.ts","webpack://chili3d/./packages/chili-three/src/threeVisualObject.ts","webpack://chili3d/./packages/chili-three/src/threeGeometry.ts","webpack://chili3d/./packages/chili-three/src/highlightable.ts","webpack://chili3d/./packages/chili-three/src/threeHighlighter.ts","webpack://chili3d/./packages/chili-three/src/cameraController.ts","webpack://chili3d/./packages/chili-three/src/viewGizmo.ts","webpack://chili3d/./packages/chili-three/src/threeView.ts","webpack://chili3d/./packages/chili-three/src/threeVisualContext.ts","webpack://chili3d/./packages/chili-three/src/threeViewEventHandler.ts","webpack://chili3d/./packages/chili-three/src/threeVisual.ts","webpack://chili3d/./packages/chili-three/src/threeVisualFactory.ts"],"sourcesContent":["// Part of the Chili3d Project, under the AGPL-3.0 License.\r\n// See LICENSE file in the project root for full license information.\r\n\r\nimport { Material, MathUtils, Matrix4, PhongMaterial, PhysicalMaterial, Texture, XYZ } from \"chili-core\";\r\nimport {\r\n    Box3,\r\n    Camera,\r\n    DoubleSide,\r\n    Object3D,\r\n    OrthographicCamera,\r\n    PerspectiveCamera,\r\n    RepeatWrapping,\r\n    TextureLoader,\r\n    Color as ThreeColor,\r\n    MeshLambertMaterial as ThreeLambertMaterial,\r\n    Matrix4 as ThreeMatrix4,\r\n    MeshPhongMaterial as ThreePhoneMaterial,\r\n    MeshPhysicalMaterial as ThreePhysicalMaterial,\r\n    Vector3,\r\n    Vector3Like,\r\n} from \"three\";\r\n\r\nexport class ThreeHelper {\r\n    static toMatrix(matrix: ThreeMatrix4) {\r\n        return Matrix4.fromArray(matrix.toArray());\r\n    }\r\n\r\n    static toXYZ(vector: Vector3): XYZ {\r\n        return new XYZ(vector.x, vector.y, vector.z);\r\n    }\r\n\r\n    static fromXYZ(vector: Vector3Like): Vector3 {\r\n        return new Vector3(vector.x, vector.y, vector.z);\r\n    }\r\n\r\n    static isPerspectiveCamera(camera: Camera): camera is PerspectiveCamera {\r\n        return (camera as PerspectiveCamera).isPerspectiveCamera;\r\n    }\r\n\r\n    static isOrthographicCamera(camera: Camera): camera is OrthographicCamera {\r\n        return (camera as OrthographicCamera).isOrthographicCamera;\r\n    }\r\n\r\n    static fromColor(color: number | string): ThreeColor {\r\n        return new ThreeColor(color);\r\n    }\r\n\r\n    static toColor(color: ThreeColor): number {\r\n        return color.getHex();\r\n    }\r\n\r\n    static findGroupIndex(groups: { start: number; count: number }[], subIndex: number) {\r\n        for (let i = 0; i < groups.length; i++) {\r\n            if (subIndex >= groups[i].start && subIndex < groups[i].start + groups[i].count) {\r\n                return i;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    static transformVector(matrix: ThreeMatrix4, vector: Vector3) {\r\n        let array = matrix.elements;\r\n        let x = vector.x * array[0] + vector.y * array[4] + vector.z * array[8];\r\n        let y = vector.x * array[1] + vector.y * array[5] + vector.z * array[9];\r\n        let z = vector.x * array[2] + vector.y * array[6] + vector.z * array[10];\r\n        return new Vector3(x, y, z);\r\n    }\r\n\r\n    static getBoundingBox(object: Object3D) {\r\n        const box = new Box3();\r\n        box.setFromObject(object);\r\n        if (box.isEmpty()) {\r\n            return undefined;\r\n        }\r\n        return { min: ThreeHelper.toXYZ(box.min), max: ThreeHelper.toXYZ(box.max) };\r\n    }\r\n\r\n    static boxCorners(box: Box3) {\r\n        let min = box.min;\r\n        let max = box.max;\r\n        return [\r\n            new Vector3(min.x, min.y, min.z),\r\n            new Vector3(max.x, min.y, min.z),\r\n            new Vector3(max.x, max.y, min.z),\r\n            new Vector3(min.x, max.y, min.z),\r\n            new Vector3(min.x, min.y, max.z),\r\n            new Vector3(max.x, min.y, max.z),\r\n            new Vector3(max.x, max.y, max.z),\r\n            new Vector3(min.x, max.y, max.z),\r\n        ];\r\n    }\r\n\r\n    static loadTexture(item: Texture | undefined) {\r\n        if (!item?.image) {\r\n            return null;\r\n        }\r\n\r\n        let map = new TextureLoader().load(item.image);\r\n        map.wrapS = RepeatWrapping;\r\n        map.wrapT = RepeatWrapping;\r\n        map.center.set(0.5, 0.5);\r\n        map.repeat.set(item.repeat.x, item.repeat.y);\r\n        map.rotation = MathUtils.degToRad(item.rotation);\r\n        return map;\r\n    }\r\n\r\n    static parsePhysicalMaterial(material: PhysicalMaterial) {\r\n        return new ThreePhysicalMaterial({\r\n            color: material.color,\r\n            side: DoubleSide,\r\n            transparent: true,\r\n            name: material.name,\r\n            opacity: material.opacity,\r\n            map: this.loadTexture(material.map),\r\n            roughness: material.roughness,\r\n            metalness: material.metalness,\r\n            bumpMap: this.loadTexture(material.bumpMap),\r\n            normalMap: this.loadTexture(material.normalMap),\r\n            emissiveMap: this.loadTexture(material.emissiveMap),\r\n            roughnessMap: this.loadTexture(material.roughnessMap),\r\n            metalnessMap: this.loadTexture(material.metalnessMap),\r\n        });\r\n    }\r\n\r\n    static parsePhongMaterial(material: PhongMaterial) {\r\n        return new ThreePhoneMaterial({\r\n            color: material.color,\r\n            side: DoubleSide,\r\n            transparent: true,\r\n            name: material.name,\r\n            opacity: material.opacity,\r\n            map: this.loadTexture(material.map),\r\n            specularMap: this.loadTexture(material.specularMap),\r\n            shininess: material.shininess,\r\n            emissive: ThreeHelper.fromColor(material.emissive),\r\n            emissiveMap: this.loadTexture(material.emissiveMap),\r\n        });\r\n    }\r\n\r\n    static parseBasicMaterial(material: Material) {\r\n        return new ThreeLambertMaterial({\r\n            color: material.color,\r\n            side: DoubleSide,\r\n            transparent: true,\r\n            name: material.name,\r\n            opacity: material.opacity,\r\n            map: this.loadTexture(material.map),\r\n        });\r\n    }\r\n\r\n    static parseToThreeMaterial(material: Material) {\r\n        if (material instanceof PhysicalMaterial) {\r\n            return this.parsePhysicalMaterial(material);\r\n        }\r\n\r\n        if (material instanceof PhongMaterial) {\r\n            return this.parsePhongMaterial(material);\r\n        }\r\n\r\n        return this.parseBasicMaterial(material);\r\n    }\r\n}\r\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\r\n// See LICENSE file in the project root for full license information.\r\n\r\nimport { LineMaterial } from \"three/examples/jsm/lines/LineMaterial\";\r\nimport { ThreeHelper } from \"./threeHelper\";\r\nimport { VisualConfig } from \"chili-core\";\r\nimport { DoubleSide, MeshLambertMaterial } from \"three\";\r\n\r\nexport const hilightEdgeMaterial = new LineMaterial({\r\n    linewidth: 3,\r\n    color: ThreeHelper.fromColor(VisualConfig.highlightEdgeColor),\r\n    side: DoubleSide,\r\n    polygonOffset: true,\r\n    polygonOffsetFactor: -4,\r\n    polygonOffsetUnits: -4,\r\n});\r\n\r\nexport const hilightDashedEdgeMaterial = new LineMaterial({\r\n    linewidth: 3,\r\n    color: ThreeHelper.fromColor(VisualConfig.highlightEdgeColor),\r\n    side: DoubleSide,\r\n    polygonOffset: true,\r\n    polygonOffsetFactor: -4,\r\n    polygonOffsetUnits: -4,\r\n    dashed: true,\r\n    dashScale: 100,\r\n    dashSize: 100,\r\n    gapSize: 100,\r\n});\r\n\r\nexport const selectedEdgeMaterial = new LineMaterial({\r\n    linewidth: 3,\r\n    color: ThreeHelper.fromColor(VisualConfig.selectedEdgeColor),\r\n    side: DoubleSide,\r\n    polygonOffset: true,\r\n    polygonOffsetFactor: -4,\r\n    polygonOffsetUnits: -4,\r\n});\r\n\r\nexport const faceTransparentMaterial = new MeshLambertMaterial({\r\n    transparent: true,\r\n    side: DoubleSide,\r\n    color: ThreeHelper.fromColor(VisualConfig.selectedFaceColor),\r\n    opacity: 0.1,\r\n});\r\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\r\n// See LICENSE file in the project root for full license information.\r\n\r\nimport { EdgeMeshData, FaceMeshData, LineType, ShapeMeshData, VertexMeshData } from \"chili-core\";\r\nimport {\r\n    AlwaysDepth,\r\n    BufferAttribute,\r\n    BufferGeometry,\r\n    DoubleSide,\r\n    Float32BufferAttribute,\r\n    Mesh,\r\n    MeshLambertMaterial,\r\n    Points,\r\n    PointsMaterial,\r\n} from \"three\";\r\nimport { LineMaterial } from \"three/examples/jsm/lines/LineMaterial\";\r\nimport { LineSegments2 } from \"three/examples/jsm/lines/LineSegments2\";\r\nimport { LineSegmentsGeometry } from \"three/examples/jsm/lines/LineSegmentsGeometry\";\r\n\r\nexport class ThreeGeometryFactory {\r\n    static createVertexGeometry(data: VertexMeshData) {\r\n        let buff = new BufferGeometry();\r\n        buff.setAttribute(\"position\", new BufferAttribute(data.position, 3));\r\n        let material = new PointsMaterial({\r\n            size: data.size,\r\n            sizeAttenuation: false,\r\n        });\r\n        this.setColor(buff, data, material);\r\n\r\n        material.depthFunc = AlwaysDepth;\r\n        return new Points(buff, material);\r\n    }\r\n\r\n    static createFaceGeometry(data: FaceMeshData) {\r\n        let buff = ThreeGeometryFactory.createFaceBufferGeometry(data);\r\n        let material = new MeshLambertMaterial({ side: DoubleSide });\r\n        this.setColor(buff, data, material);\r\n\r\n        return new Mesh(buff, material);\r\n    }\r\n\r\n    private static setColor(\r\n        buffer: BufferGeometry,\r\n        data: ShapeMeshData,\r\n        material: MeshLambertMaterial | PointsMaterial | LineMaterial,\r\n    ) {\r\n        if (typeof data.color === \"number\") {\r\n            material.color.set(data.color);\r\n        } else if (Array.isArray(data.color)) {\r\n            material.vertexColors = true;\r\n            buffer.setAttribute(\"color\", new Float32BufferAttribute(data.color, 3));\r\n        }\r\n    }\r\n\r\n    static createFaceBufferGeometry(data: FaceMeshData) {\r\n        let buff = new BufferGeometry();\r\n        buff.setAttribute(\"position\", new BufferAttribute(data.position, 3));\r\n        buff.setAttribute(\"normal\", new BufferAttribute(data.normal, 3));\r\n        buff.setAttribute(\"uv\", new BufferAttribute(data.uv, 2));\r\n        if (data.index && data.index.length > 0) buff.setIndex(new BufferAttribute(data.index, 1));\r\n        buff.computeBoundingBox();\r\n        return buff;\r\n    }\r\n\r\n    static createEdgeGeometry(data: EdgeMeshData) {\r\n        let buff = this.createEdgeBufferGeometry(data);\r\n        let linewidth = data.lineWidth ?? 1;\r\n        let material = new LineMaterial({\r\n            linewidth,\r\n            polygonOffset: true,\r\n            polygonOffsetFactor: -4,\r\n            polygonOffsetUnits: -4,\r\n        });\r\n        if (data.lineType === LineType.Dash) {\r\n            material.dashed = true;\r\n            material.dashScale = 100;\r\n            material.dashSize = 100;\r\n            material.gapSize = 100;\r\n        }\r\n        this.setColor(buff, data, material);\r\n        return new LineSegments2(buff, material).computeLineDistances();\r\n    }\r\n\r\n    static createEdgeBufferGeometry(data: EdgeMeshData) {\r\n        let buff = new LineSegmentsGeometry();\r\n        buff.setPositions(data.position);\r\n        buff.computeBoundingBox();\r\n        return buff;\r\n    }\r\n}\r\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\r\n// See LICENSE file in the project root for full license information.\r\n\r\nexport class Constants {\r\n    static readonly RaycasterThreshold = 10;\r\n    static readonly Layers = Object.freeze({\r\n        Default: 0,\r\n        Wireframe: 1,\r\n        Solid: 2,\r\n        Isolation: 30,\r\n    });\r\n}\r\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\r\n// See LICENSE file in the project root for full license information.\r\n\r\nimport {\r\n    BoundingBox,\r\n    ComponentNode,\r\n    GroupNode,\r\n    IShape,\r\n    ISubShape,\r\n    IVisualObject,\r\n    Matrix4,\r\n    MeshNode,\r\n    ShapeMeshRange,\r\n    ShapeType,\r\n    VisualConfig,\r\n    VisualNode,\r\n} from \"chili-core\";\r\nimport {\r\n    BufferAttribute,\r\n    BufferGeometry,\r\n    DoubleSide,\r\n    Group,\r\n    Material,\r\n    Mesh,\r\n    MeshLambertMaterial,\r\n    Object3D,\r\n} from \"three\";\r\nimport { Line2 } from \"three/examples/jsm/lines/Line2\";\r\nimport { LineGeometry } from \"three/examples/jsm/lines/LineGeometry\";\r\nimport { LineMaterial } from \"three/examples/jsm/lines/LineMaterial\";\r\nimport { LineSegments2 } from \"three/examples/jsm/lines/LineSegments2\";\r\nimport { LineSegmentsGeometry } from \"three/examples/jsm/lines/LineSegmentsGeometry\";\r\nimport { hilightEdgeMaterial } from \"./common\";\r\nimport { Constants } from \"./constants\";\r\nimport { IHighlightable } from \"./highlightable\";\r\nimport { ThreeGeometryFactory } from \"./threeGeometryFactory\";\r\nimport { ThreeHelper } from \"./threeHelper\";\r\nimport { ThreeVisualContext } from \"./threeVisualContext\";\r\n\r\nconst HighlightFaceMaterial = new MeshLambertMaterial({\r\n    color: ThreeHelper.fromColor(VisualConfig.highlightFaceColor),\r\n    side: DoubleSide,\r\n    transparent: true,\r\n    opacity: 0.56,\r\n});\r\n\r\nexport abstract class ThreeVisualObject extends Object3D implements IVisualObject {\r\n    get transform() {\r\n        return ThreeHelper.toMatrix(this.matrix);\r\n    }\r\n    set transform(value: Matrix4) {\r\n        this.matrix.fromArray(value.toArray());\r\n    }\r\n\r\n    private _node: VisualNode;\r\n    get node(): VisualNode {\r\n        return this._node;\r\n    }\r\n\r\n    worldTransform(): Matrix4 {\r\n        return ThreeHelper.toMatrix(this.matrixWorld);\r\n    }\r\n\r\n    constructor(node: VisualNode) {\r\n        super();\r\n        this._node = node;\r\n        this.matrixAutoUpdate = false;\r\n        this.visible = node.visible && node.parentVisible;\r\n        this.transform = node.transform;\r\n        node.onPropertyChanged(this.handlePropertyChanged);\r\n    }\r\n\r\n    private readonly handlePropertyChanged = (property: keyof VisualNode) => {\r\n        if (property === \"transform\") {\r\n            this.transform = this.node.transform;\r\n        }\r\n    };\r\n\r\n    boundingBox(): BoundingBox | undefined {\r\n        return ThreeHelper.getBoundingBox(this);\r\n    }\r\n\r\n    dispose() {\r\n        this.node.removePropertyChanged(this.handlePropertyChanged);\r\n        this._node = null as any;\r\n    }\r\n\r\n    abstract getSubShapeAndIndex(\r\n        shapeType: \"face\" | \"edge\",\r\n        subVisualIndex: number,\r\n    ): {\r\n        shape: IShape | undefined;\r\n        subShape: ISubShape | undefined;\r\n        index: number;\r\n        transform?: Matrix4;\r\n        groups: ShapeMeshRange[];\r\n    };\r\n\r\n    abstract subShapeVisual(shapeType: ShapeType): (Mesh | LineSegments2)[];\r\n\r\n    abstract wholeVisual(): (Mesh | LineSegments2)[];\r\n}\r\n\r\nexport class ThreeMeshObject extends ThreeVisualObject implements IHighlightable {\r\n    private _mesh: LineSegments2 | Mesh | Line2;\r\n    private material: Material | Material[];\r\n\r\n    get mesh() {\r\n        return this._mesh;\r\n    }\r\n\r\n    constructor(\r\n        readonly context: ThreeVisualContext,\r\n        readonly meshNode: MeshNode,\r\n    ) {\r\n        super(meshNode);\r\n        this._mesh = this.createMesh();\r\n        this.material = this._mesh.material;\r\n        this.add(this._mesh);\r\n        meshNode.onPropertyChanged(this.handleGeometryPropertyChanged);\r\n    }\r\n\r\n    highlight() {\r\n        if (this._mesh instanceof Mesh) {\r\n            this._mesh.material = HighlightFaceMaterial;\r\n        }\r\n\r\n        if (this._mesh instanceof LineSegments2) {\r\n            this._mesh.material = hilightEdgeMaterial;\r\n        }\r\n    }\r\n\r\n    unhighlight() {\r\n        if (this._mesh instanceof Mesh) {\r\n            this._mesh.material = this.material;\r\n        }\r\n\r\n        if (this._mesh instanceof LineSegments2) {\r\n            this._mesh.material = this.material as LineMaterial;\r\n        }\r\n    }\r\n\r\n    getSubShapeAndIndex(\r\n        shapeType: \"face\" | \"edge\",\r\n        subVisualIndex: number,\r\n    ): {\r\n        shape: IShape | undefined;\r\n        subShape: ISubShape | undefined;\r\n        index: number;\r\n        groups: ShapeMeshRange[];\r\n    } {\r\n        return {\r\n            shape: undefined,\r\n            subShape: undefined,\r\n            index: -1,\r\n            groups: [],\r\n        };\r\n    }\r\n\r\n    override subShapeVisual(shapeType: ShapeType): (Mesh | LineSegments2)[] {\r\n        return [];\r\n    }\r\n\r\n    private createMesh() {\r\n        switch (this.meshNode.mesh.meshType) {\r\n            case \"linesegments\":\r\n                return this.newLineSegments();\r\n            case \"surface\":\r\n                return this.newMesh();\r\n            default:\r\n                throw new Error(\"Unknown mesh type\");\r\n        }\r\n    }\r\n\r\n    private readonly handleGeometryPropertyChanged = (property: keyof MeshNode) => {\r\n        if (property === \"mesh\") {\r\n            this.disposeMesh();\r\n            this._mesh = this.createMesh();\r\n            this.add(this._mesh);\r\n        } else if (property === \"materialId\" && this._mesh instanceof Mesh) {\r\n            this.material = this.context.getMaterial(this.meshNode.materialId);\r\n            this._mesh.material = this.material;\r\n        }\r\n    };\r\n\r\n    private newMesh() {\r\n        const buff = new BufferGeometry();\r\n        buff.setAttribute(\"position\", new BufferAttribute(this.meshNode.mesh.position!, 3));\r\n        if (this.meshNode.mesh.normal)\r\n            buff.setAttribute(\"normal\", new BufferAttribute(this.meshNode.mesh.normal, 3));\r\n        if (this.meshNode.mesh.uv) buff.setAttribute(\"uv\", new BufferAttribute(this.meshNode.mesh.uv, 2));\r\n        if (this.meshNode.mesh.index) buff.setIndex(new BufferAttribute(this.meshNode.mesh.index, 1));\r\n        if (this.meshNode.mesh.groups.length > 1) buff.groups = this.meshNode.mesh.groups;\r\n        buff.computeBoundingBox();\r\n        const mesh = new Mesh(buff, this.context.getMaterial(this.meshNode.materialId));\r\n        mesh.layers.set(Constants.Layers.Solid);\r\n        return mesh;\r\n    }\r\n\r\n    private newLineSegments() {\r\n        const material = new LineMaterial({\r\n            linewidth: 1,\r\n            color: this.meshNode.mesh.color as number,\r\n            side: DoubleSide,\r\n        });\r\n        const buff = new LineSegmentsGeometry();\r\n        buff.setPositions(this.meshNode.mesh.position!);\r\n        buff.computeBoundingBox();\r\n        const line = new LineSegments2(buff, material);\r\n        line.layers.set(Constants.Layers.Wireframe);\r\n        return line;\r\n    }\r\n\r\n    private newLine() {\r\n        const material = new LineMaterial({\r\n            linewidth: 1,\r\n            color: this.meshNode.mesh.color as number,\r\n            side: DoubleSide,\r\n        });\r\n        const geometry = new LineGeometry();\r\n        geometry.setPositions(this.meshNode.mesh.position!);\r\n        geometry.computeBoundingBox();\r\n        const line = new Line2(geometry, material);\r\n        line.layers.set(Constants.Layers.Wireframe);\r\n        return line;\r\n    }\r\n\r\n    override wholeVisual() {\r\n        return [this.mesh];\r\n    }\r\n\r\n    private disposeMesh() {\r\n        if (this._mesh instanceof LineSegments2 || this._mesh instanceof Line2) {\r\n            this._mesh.material.dispose();\r\n        }\r\n        this._mesh.geometry?.dispose();\r\n    }\r\n\r\n    override dispose(): void {\r\n        super.dispose();\r\n        this.meshNode.removePropertyChanged(this.handleGeometryPropertyChanged);\r\n        this.disposeMesh();\r\n    }\r\n}\r\n\r\nexport class GroupVisualObject extends Group implements IVisualObject {\r\n    get transform() {\r\n        return ThreeHelper.toMatrix(this.matrix);\r\n    }\r\n    set transform(value: Matrix4) {\r\n        this.matrix.fromArray(value.toArray());\r\n    }\r\n\r\n    worldTransform(): Matrix4 {\r\n        return ThreeHelper.toMatrix(this.matrixWorld);\r\n    }\r\n\r\n    constructor(private readonly groupNode: GroupNode) {\r\n        super();\r\n        this.matrixAutoUpdate = false;\r\n        this.transform = groupNode.transform;\r\n        groupNode.onPropertyChanged(this.handlePropertyChanged);\r\n    }\r\n\r\n    private readonly handlePropertyChanged = (property: keyof GroupNode) => {\r\n        if (property === \"transform\") {\r\n            this.transform = this.groupNode.transform;\r\n        }\r\n    };\r\n\r\n    boundingBox(): BoundingBox | undefined {\r\n        return ThreeHelper.getBoundingBox(this);\r\n    }\r\n\r\n    dispose() {\r\n        this.groupNode.removePropertyChanged(this.handlePropertyChanged);\r\n    }\r\n}\r\n\r\nexport class ThreeComponentObject extends ThreeVisualObject implements IHighlightable {\r\n    private _boundbox?: LineSegments2;\r\n    private _edges?: LineSegments2;\r\n    private _faces?: Mesh;\r\n    private _linesegments?: LineSegments2;\r\n    private _surfaces?: Mesh;\r\n\r\n    get edges() {\r\n        return this._edges;\r\n    }\r\n\r\n    get faces() {\r\n        return this._faces;\r\n    }\r\n\r\n    get linesegments() {\r\n        return this._linesegments;\r\n    }\r\n\r\n    get surfaces() {\r\n        return this._surfaces;\r\n    }\r\n\r\n    private readonly _edgeMaterial = new LineMaterial({\r\n        linewidth: 1,\r\n        color: VisualConfig.defaultEdgeColor,\r\n        side: DoubleSide,\r\n        polygonOffset: true,\r\n        polygonOffsetFactor: -2,\r\n        polygonOffsetUnits: -2,\r\n    });\r\n\r\n    constructor(\r\n        readonly componentNode: ComponentNode,\r\n        readonly context: ThreeVisualContext,\r\n    ) {\r\n        super(componentNode);\r\n        this.initEdges();\r\n        this.initFaces();\r\n        this.initLinesegments();\r\n        this.initSurfaces();\r\n    }\r\n\r\n    private initEdges() {\r\n        const data = this.componentNode.component.mesh.edge;\r\n        if (!data || data.position.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const buff = ThreeGeometryFactory.createEdgeBufferGeometry(data);\r\n        this._edges = new LineSegments2(buff, this._edgeMaterial);\r\n        this._edges.layers.set(Constants.Layers.Wireframe);\r\n        this.add(this._edges);\r\n    }\r\n\r\n    private initFaces() {\r\n        const data = this.componentNode.component.mesh.face;\r\n        if (!data || data.position.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const buff = ThreeGeometryFactory.createFaceBufferGeometry(data);\r\n        if (data.groups.length > 1) buff.groups = data.groups;\r\n        const materials = this.context.getMaterial(this.componentNode.component.mesh.faceMaterials);\r\n        this._faces = new Mesh(buff, materials);\r\n        this._faces.layers.set(Constants.Layers.Solid);\r\n        this.add(this._faces);\r\n    }\r\n\r\n    initSurfaces() {\r\n        const data = this.componentNode.component.mesh.surface;\r\n        if (!data || data.position?.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const buff = ThreeGeometryFactory.createFaceBufferGeometry(data as any);\r\n        if (data.groups.length > 1) buff.groups = data.groups;\r\n        const materials = this.context.getMaterial(this.componentNode.component.mesh.surfaceMaterials);\r\n        this._surfaces = new Mesh(buff, materials);\r\n        this._surfaces.layers.set(Constants.Layers.Solid);\r\n        this.add(this._surfaces);\r\n    }\r\n\r\n    initLinesegments() {\r\n        const data = this.componentNode.component.mesh.linesegments;\r\n        if (!data || data.position?.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let buff = new LineSegmentsGeometry();\r\n        buff.setPositions(data.position!);\r\n        buff.computeBoundingBox();\r\n        this._linesegments = new LineSegments2(buff, this._edgeMaterial);\r\n        this._linesegments.layers.set(Constants.Layers.Wireframe);\r\n        this.add(this._linesegments);\r\n    }\r\n\r\n    override boundingBox(): BoundingBox | undefined {\r\n        return this.componentNode.component.boundingBox;\r\n    }\r\n\r\n    highlight(): void {\r\n        if (!this._boundbox) {\r\n            const box = this.componentNode.component.boundingBox;\r\n            if (!box) {\r\n                return;\r\n            }\r\n\r\n            const geometry = new LineSegmentsGeometry();\r\n            geometry.setPositions(BoundingBox.wireframe(box).position);\r\n            this._boundbox = new LineSegments2(geometry, hilightEdgeMaterial);\r\n            this.add(this._boundbox);\r\n        }\r\n\r\n        this._boundbox.visible = true;\r\n    }\r\n\r\n    unhighlight(): void {\r\n        if (this._boundbox) {\r\n            this._boundbox.visible = false;\r\n        }\r\n    }\r\n\r\n    override getSubShapeAndIndex(shapeType: \"face\" | \"edge\", subVisualIndex: number) {\r\n        const range =\r\n            shapeType === \"face\"\r\n                ? this.componentNode.component.mesh.face.range\r\n                : this.componentNode.component.mesh.edge.range;\r\n        const index = ThreeHelper.findGroupIndex(range, subVisualIndex);\r\n        if (index !== undefined) {\r\n            return {\r\n                shape: range[index].shape,\r\n                subShape: range[index].shape,\r\n                transform: range[index].transform,\r\n                index,\r\n                groups: range,\r\n            };\r\n        }\r\n\r\n        return {\r\n            shape: undefined,\r\n            subShape: undefined,\r\n            transform: undefined,\r\n            index: -1,\r\n            groups: [],\r\n        };\r\n    }\r\n\r\n    override subShapeVisual(shapeType: ShapeType): (Mesh | LineSegments2)[] {\r\n        const shapes: (Mesh | LineSegments2 | undefined)[] = [];\r\n\r\n        const isWhole =\r\n            shapeType === ShapeType.Shape ||\r\n            ShapeType.hasCompound(shapeType) ||\r\n            ShapeType.hasCompoundSolid(shapeType) ||\r\n            ShapeType.hasSolid(shapeType);\r\n\r\n        if (isWhole || ShapeType.hasEdge(shapeType) || ShapeType.hasWire(shapeType)) {\r\n            shapes.push(this.edges);\r\n        }\r\n\r\n        if (isWhole || ShapeType.hasFace(shapeType) || ShapeType.hasShell(shapeType)) {\r\n            shapes.push(this.faces);\r\n        }\r\n\r\n        return shapes.filter((x) => x !== undefined);\r\n    }\r\n\r\n    override wholeVisual(): (Mesh | LineSegments2)[] {\r\n        return [this.edges, this.faces, this.linesegments, this.surfaces].filter((x) => x !== undefined);\r\n    }\r\n}\r\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\r\n// See LICENSE file in the project root for full license information.\r\n\r\nimport {\r\n    BoundingBox,\r\n    EdgeMeshData,\r\n    FaceMeshData,\r\n    GeometryNode,\r\n    IShape,\r\n    ISubShape,\r\n    IVisualGeometry,\r\n    Matrix4,\r\n    ShapeMeshRange,\r\n    ShapeNode,\r\n    ShapeType,\r\n    VisualConfig,\r\n} from \"chili-core\";\r\nimport { MeshUtils } from \"chili-geo\";\r\nimport { DoubleSide, Material, Mesh, MeshLambertMaterial } from \"three\";\r\nimport { LineMaterial } from \"three/examples/jsm/lines/LineMaterial\";\r\nimport { LineSegments2 } from \"three/examples/jsm/lines/LineSegments2\";\r\nimport { LineSegmentsGeometry } from \"three/examples/jsm/lines/LineSegmentsGeometry\";\r\nimport { ThreeGeometryFactory } from \"./threeGeometryFactory\";\r\nimport { ThreeHelper } from \"./threeHelper\";\r\nimport { ThreeVisualContext } from \"./threeVisualContext\";\r\nimport { ThreeVisualObject } from \"./threeVisualObject\";\r\nimport { Constants } from \"./constants\";\r\n\r\nexport class ThreeGeometry extends ThreeVisualObject implements IVisualGeometry {\r\n    private _faceMaterial: Material | Material[];\r\n    private _edgeMaterial = new LineMaterial({\r\n        linewidth: 1,\r\n        color: VisualConfig.defaultEdgeColor,\r\n        side: DoubleSide,\r\n        polygonOffset: true,\r\n        polygonOffsetFactor: -2,\r\n        polygonOffsetUnits: -2,\r\n    });\r\n    private _edges?: LineSegments2;\r\n    private _faces?: Mesh;\r\n\r\n    constructor(\r\n        readonly geometryNode: GeometryNode,\r\n        readonly context: ThreeVisualContext,\r\n    ) {\r\n        super(geometryNode);\r\n        this._faceMaterial = context.getMaterial(geometryNode.materialId);\r\n        this.generateShape();\r\n        geometryNode.onPropertyChanged(this.handleGeometryPropertyChanged);\r\n    }\r\n\r\n    getMainMaterial() {\r\n        return this._faces ? this._faceMaterial : this._edgeMaterial;\r\n    }\r\n\r\n    changeFaceMaterial(material: Material | Material[]) {\r\n        if (this._faces) {\r\n            this._faceMaterial = material;\r\n            this._faces.material = material;\r\n        }\r\n    }\r\n\r\n    box() {\r\n        return this._faces?.geometry.boundingBox ?? this._edges?.geometry.boundingBox;\r\n    }\r\n\r\n    override boundingBox(): BoundingBox | undefined {\r\n        const box = this._faces?.geometry.boundingBox ?? this._edges?.geometry.boundingBox;\r\n        if (!box) return undefined;\r\n\r\n        return {\r\n            min: ThreeHelper.toXYZ(box.min),\r\n            max: ThreeHelper.toXYZ(box.max),\r\n        };\r\n    }\r\n\r\n    private readonly handleGeometryPropertyChanged = (property: keyof GeometryNode) => {\r\n        if (property === \"materialId\") {\r\n            this.changeFaceMaterial(this.context.getMaterial(this.geometryNode.materialId));\r\n        } else if ((property as keyof ShapeNode) === \"shape\") {\r\n            this.removeMeshes();\r\n            this.generateShape();\r\n        }\r\n    };\r\n\r\n    private generateShape() {\r\n        const mesh = this.geometryNode.mesh;\r\n        if (mesh?.faces?.position.length) this.initFaces(mesh.faces);\r\n        if (mesh?.edges?.position.length) this.initEdges(mesh.edges);\r\n    }\r\n\r\n    override dispose() {\r\n        super.dispose();\r\n        this._edges?.material.dispose();\r\n        this._edgeMaterial = null as any;\r\n        this.geometryNode.removePropertyChanged(this.handleGeometryPropertyChanged);\r\n        this.removeMeshes();\r\n    }\r\n\r\n    private removeMeshes() {\r\n        if (this._edges) {\r\n            this.remove(this._edges);\r\n            this._edges.geometry.dispose();\r\n            this._edges = null as any;\r\n        }\r\n        if (this._faces) {\r\n            this.remove(this._faces);\r\n            this._faces.geometry.dispose();\r\n            this._faces = null as any;\r\n        }\r\n    }\r\n\r\n    private initEdges(data: EdgeMeshData) {\r\n        const buff = ThreeGeometryFactory.createEdgeBufferGeometry(data);\r\n        this._edges = new LineSegments2(buff, this._edgeMaterial);\r\n        this._edges.layers.set(Constants.Layers.Wireframe);\r\n        this.add(this._edges);\r\n    }\r\n\r\n    private initFaces(data: FaceMeshData) {\r\n        const buff = ThreeGeometryFactory.createFaceBufferGeometry(data);\r\n        if (data.groups.length > 1) buff.groups = data.groups;\r\n        this._faces = new Mesh(buff, this._faceMaterial);\r\n        this._faces.layers.set(Constants.Layers.Solid);\r\n        this.add(this._faces);\r\n    }\r\n\r\n    setFacesMateiralTemperary(material: MeshLambertMaterial) {\r\n        if (this._faces) this._faces.material = material;\r\n    }\r\n\r\n    setEdgesMateiralTemperary(material: LineMaterial) {\r\n        if (this._edges) this._edges.material = material;\r\n    }\r\n\r\n    removeTemperaryMaterial(): void {\r\n        if (this._edges) this._edges.material = this._edgeMaterial;\r\n        if (this._faces) this._faces.material = this._faceMaterial;\r\n    }\r\n\r\n    cloneSubEdge(index: number) {\r\n        const positions = MeshUtils.subEdge(this.geometryNode.mesh.edges!, index);\r\n        if (!positions) return undefined;\r\n\r\n        const buff = new LineSegmentsGeometry();\r\n        buff.setPositions(positions);\r\n        buff.applyMatrix4(this.matrixWorld);\r\n\r\n        return new LineSegments2(buff, this._edgeMaterial);\r\n    }\r\n\r\n    cloneSubFace(index: number) {\r\n        const mesh = MeshUtils.subFace(this.geometryNode.mesh.faces!, index);\r\n        if (!mesh) return undefined;\r\n\r\n        const buff = ThreeGeometryFactory.createFaceBufferGeometry(mesh);\r\n        buff.applyMatrix4(this.matrixWorld);\r\n\r\n        return new Mesh(buff, this._faceMaterial);\r\n    }\r\n\r\n    faces() {\r\n        return this._faces;\r\n    }\r\n\r\n    edges() {\r\n        return this._edges;\r\n    }\r\n\r\n    override getSubShapeAndIndex(shapeType: \"face\" | \"edge\", subVisualIndex: number) {\r\n        let subShape: ISubShape | undefined = undefined;\r\n        let transform: Matrix4 | undefined = undefined;\r\n        let index: number = -1;\r\n        let groups: ShapeMeshRange[] | undefined = undefined;\r\n        if (shapeType === \"edge\") {\r\n            groups = this.geometryNode.mesh.edges?.range;\r\n            if (groups) {\r\n                index = ThreeHelper.findGroupIndex(groups, subVisualIndex)!;\r\n                subShape = groups[index].shape;\r\n                transform = groups[index].transform;\r\n            }\r\n        } else {\r\n            groups = this.geometryNode.mesh.faces?.range;\r\n            if (groups) {\r\n                index = ThreeHelper.findGroupIndex(groups, subVisualIndex)!;\r\n                subShape = groups[index].shape;\r\n                transform = groups[index].transform;\r\n            }\r\n        }\r\n\r\n        let shape: IShape | undefined = subShape;\r\n        if (this.geometryNode instanceof ShapeNode) {\r\n            shape = this.geometryNode.shape.value;\r\n        }\r\n        return { transform, shape, subShape, index, groups: groups ?? [] };\r\n    }\r\n\r\n    override subShapeVisual(shapeType: ShapeType): (Mesh | LineSegments2)[] {\r\n        const shapes: (Mesh | LineSegments2 | undefined)[] = [];\r\n\r\n        const isWhole =\r\n            shapeType === ShapeType.Shape ||\r\n            ShapeType.hasCompound(shapeType) ||\r\n            ShapeType.hasCompoundSolid(shapeType) ||\r\n            ShapeType.hasSolid(shapeType);\r\n\r\n        if (isWhole || ShapeType.hasEdge(shapeType) || ShapeType.hasWire(shapeType)) {\r\n            shapes.push(this.edges());\r\n        }\r\n\r\n        if (isWhole || ShapeType.hasFace(shapeType) || ShapeType.hasShell(shapeType)) {\r\n            shapes.push(this.faces());\r\n        }\r\n\r\n        return shapes.filter((x) => x !== undefined);\r\n    }\r\n\r\n    override wholeVisual(): (Mesh | LineSegments2)[] {\r\n        return [this.edges(), this.faces()].filter((x) => x !== undefined);\r\n    }\r\n}\r\n","// Part of the Chili3d Project, under the AGPL-3.0 Licensettt.\r\n// See LICENSE file in the project root for full license information.\r\n\r\nexport interface IHighlightable {\r\n    highlight(): void;\r\n    unhighlight(): void;\r\n}\r\n\r\nexport namespace IHighlightable {\r\n    export function is(value: any): value is IHighlightable {\r\n        return value && typeof value.highlight === \"function\" && typeof value.unhighlight === \"function\";\r\n    }\r\n}\r\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\r\n// See LICENSE file in the project root for full license information.\r\n\r\nimport { IDisposable, IHighlighter, ShapeMeshData, ShapeType, VisualState } from \"chili-core\";\r\nimport { MeshUtils } from \"chili-geo\";\r\nimport { Group, Mesh, Points } from \"three\";\r\nimport { LineSegments2 } from \"three/examples/jsm/lines/LineSegments2\";\r\nimport { LineSegmentsGeometry } from \"three/examples/jsm/lines/LineSegmentsGeometry\";\r\nimport { faceTransparentMaterial, hilightEdgeMaterial, selectedEdgeMaterial } from \"./common\";\r\nimport { ThreeGeometry } from \"./threeGeometry\";\r\nimport { ThreeGeometryFactory } from \"./threeGeometryFactory\";\r\nimport { ThreeVisualContext } from \"./threeVisualContext\";\r\nimport { ThreeMeshObject, ThreeVisualObject } from \"./threeVisualObject\";\r\nimport { IHighlightable } from \"./highlightable\";\r\n\r\nexport class GeometryState {\r\n    private readonly _states: Map<string, [VisualState, LineSegments2 | undefined]> = new Map();\r\n\r\n    constructor(\r\n        readonly highlighter: ThreeHighlighter,\r\n        readonly visual: ThreeVisualObject,\r\n    ) {}\r\n\r\n    getState(type: ShapeType, index?: number) {\r\n        const key = this.state_key(type, index);\r\n        return this._states.get(key)?.[0];\r\n    }\r\n\r\n    private state_key(type: ShapeType, index?: number) {\r\n        return `${type}_${index}`;\r\n    }\r\n\r\n    addState(state: VisualState, type: ShapeType, index: number[]) {\r\n        this.updateState(\"add\", state, type, index);\r\n    }\r\n\r\n    removeState(state: VisualState, type: ShapeType, index: number[]) {\r\n        this.updateState(\"remove\", state, type, index);\r\n    }\r\n\r\n    private updateState(method: \"add\" | \"remove\", state: VisualState, type: ShapeType, index: number[]) {\r\n        if (ShapeType.isWhole(type)) {\r\n            this.setWholeState(method, state, type);\r\n        } else if (index.length > 0) {\r\n            this.setSubGeometryState(method, state, type, index);\r\n        }\r\n    }\r\n\r\n    private setWholeState(method: \"add\" | \"remove\", state: VisualState, type: ShapeType) {\r\n        const key = this.state_key(type);\r\n        let [_oldState, newState] = this.updateStates(key, method, state);\r\n        if (this.visual instanceof ThreeGeometry) {\r\n            if (newState === VisualState.normal) {\r\n                this.visual.removeTemperaryMaterial();\r\n            } else if (VisualState.hasState(newState, VisualState.edgeHighlight)) {\r\n                this.visual.setEdgesMateiralTemperary(hilightEdgeMaterial);\r\n            } else if (VisualState.hasState(newState, VisualState.edgeSelected)) {\r\n                this.visual.setEdgesMateiralTemperary(selectedEdgeMaterial);\r\n            } else if (VisualState.hasState(newState, VisualState.faceTransparent)) {\r\n                this.visual.removeTemperaryMaterial();\r\n                this.visual.setFacesMateiralTemperary(faceTransparentMaterial);\r\n            }\r\n        } else if (IHighlightable.is(this.visual)) {\r\n            if (newState !== VisualState.normal) {\r\n                this.visual.highlight();\r\n            } else {\r\n                this.visual.unhighlight();\r\n            }\r\n        }\r\n\r\n        this._states.set(key, [newState, undefined]);\r\n    }\r\n\r\n    private updateStates(\r\n        key: string,\r\n        method: \"add\" | \"remove\",\r\n        state: VisualState,\r\n    ): [VisualState | undefined, VisualState] {\r\n        let oldState = this._states.get(key)?.[0];\r\n        let newState = oldState;\r\n        if (newState === undefined) {\r\n            if (method === \"remove\") return [undefined, VisualState.normal];\r\n            newState = state;\r\n        } else {\r\n            let func = method === \"add\" ? VisualState.addState : VisualState.removeState;\r\n            newState = func(newState, state);\r\n        }\r\n        return [oldState, newState];\r\n    }\r\n\r\n    resetState() {\r\n        this.highlighter.container.children.forEach((x) => {\r\n            (x as any).geometry?.dispose();\r\n        });\r\n        this.highlighter.container.clear();\r\n        if (this.visual instanceof ThreeGeometry) {\r\n            this.visual.removeTemperaryMaterial();\r\n        } else if (this.visual instanceof ThreeMeshObject) {\r\n            this.visual.unhighlight();\r\n        }\r\n        this._states.clear();\r\n    }\r\n\r\n    private setSubGeometryState(\r\n        method: \"add\" | \"remove\",\r\n        state: VisualState,\r\n        type: ShapeType,\r\n        index: number[],\r\n    ) {\r\n        const shouldRemoved: string[] = [];\r\n        index.forEach((i) => {\r\n            const key = this.state_key(type, i);\r\n            const [oldState, newState] = this.updateStates(key, method, state);\r\n            if (oldState !== undefined && newState === VisualState.normal) {\r\n                shouldRemoved.push(key);\r\n            } else {\r\n                this.addSubEdgeState(type, key, i, newState);\r\n            }\r\n        });\r\n\r\n        shouldRemoved.forEach((key) => {\r\n            const item = this._states.get(key)?.[1];\r\n            if (item) {\r\n                this.highlighter.container.remove(item);\r\n                item.geometry?.dispose();\r\n                this._states.delete(key);\r\n            }\r\n        });\r\n    }\r\n\r\n    private addSubEdgeState(type: ShapeType, key: string, i: number, newState: VisualState) {\r\n        const geometry = this.getOrCloneGeometry(type, key, i);\r\n        if (geometry && \"material\" in geometry) {\r\n            let material = VisualState.hasState(newState, VisualState.edgeHighlight)\r\n                ? hilightEdgeMaterial\r\n                : selectedEdgeMaterial;\r\n            geometry.material = material;\r\n            this._states.set(key, [newState, geometry]);\r\n        }\r\n    }\r\n\r\n    private getOrCloneGeometry(type: ShapeType, key: string, index: number) {\r\n        if (!(this.visual instanceof ThreeGeometry)) return undefined;\r\n\r\n        const geometry = this._states.get(key)?.[1];\r\n        if (geometry) return geometry;\r\n\r\n        let points: Float32Array | undefined = undefined;\r\n        if (ShapeType.hasFace(type) || ShapeType.hasShell(type)) {\r\n            points = MeshUtils.subFaceOutlines(this.visual.geometryNode.mesh.faces!, index);\r\n        }\r\n        if (points === undefined && (ShapeType.hasEdge(type) || ShapeType.hasWire(type))) {\r\n            points = MeshUtils.subEdge(this.visual.geometryNode.mesh.edges!, index);\r\n        }\r\n\r\n        if (!points) {\r\n            console.warn(`Invalid type ${type} for ${key}`);\r\n            return undefined;\r\n        }\r\n\r\n        const lineGeometry = new LineSegmentsGeometry();\r\n        lineGeometry.setPositions(points);\r\n        const segment = new LineSegments2(lineGeometry);\r\n        this.highlighter.container.add(segment);\r\n        segment.applyMatrix4(this.visual.matrixWorld);\r\n        return segment;\r\n    }\r\n}\r\n\r\nexport class ThreeHighlighter implements IHighlighter {\r\n    private readonly _stateMap = new Map<ThreeVisualObject, GeometryState>();\r\n    readonly container: Group;\r\n\r\n    constructor(readonly content: ThreeVisualContext) {\r\n        this.container = new Group();\r\n        this.container.name = \"highlighter\";\r\n        this.content.scene.add(this.container);\r\n    }\r\n\r\n    clear(): void {\r\n        this._stateMap.forEach((v, k) => {\r\n            this.resetState(k);\r\n        });\r\n        this._stateMap.clear();\r\n    }\r\n\r\n    resetState(geometry: ThreeVisualObject): void {\r\n        if (!this._stateMap.has(geometry)) return;\r\n        let geometryState = this._stateMap.get(geometry);\r\n        geometryState!.resetState();\r\n        this._stateMap.delete(geometry);\r\n    }\r\n\r\n    getState(shape: ThreeVisualObject, type: ShapeType, index?: number): VisualState | undefined {\r\n        if (this._stateMap.has(shape)) {\r\n            return this._stateMap.get(shape)!.getState(type, index);\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    addState(geometry: ThreeVisualObject, state: VisualState, type: ShapeType, ...index: number[]) {\r\n        let geometryState = this.getOrInitState(geometry);\r\n        geometryState.addState(state, type, index);\r\n    }\r\n\r\n    removeState(geometry: ThreeVisualObject, state: VisualState, type: ShapeType, ...index: number[]) {\r\n        let geometryState = this.getOrInitState(geometry);\r\n        geometryState.removeState(state, type, index);\r\n    }\r\n\r\n    private getOrInitState(geometry: ThreeVisualObject) {\r\n        let geometryState = this._stateMap.get(geometry);\r\n        if (!geometryState) {\r\n            geometryState = new GeometryState(this, geometry);\r\n            this._stateMap.set(geometry, geometryState);\r\n        }\r\n        return geometryState;\r\n    }\r\n\r\n    highlightMesh(...datas: ShapeMeshData[]): number {\r\n        let group = new Group();\r\n        datas.forEach((data) => {\r\n            if (ShapeMeshData.isVertex(data)) {\r\n                group.add(ThreeGeometryFactory.createVertexGeometry(data));\r\n            } else if (ShapeMeshData.isEdge(data)) {\r\n                group.add(ThreeGeometryFactory.createEdgeGeometry(data));\r\n            } else if (ShapeMeshData.isFace(data)) {\r\n                group.add(ThreeGeometryFactory.createFaceGeometry(data));\r\n            }\r\n        });\r\n        this.container.add(group);\r\n        return group.id;\r\n    }\r\n\r\n    removeHighlightMesh(id: number) {\r\n        let shape = this.container.getObjectById(id);\r\n        if (shape === undefined) return;\r\n        shape.children.forEach((x) => {\r\n            if (x instanceof Mesh || x instanceof LineSegments2 || x instanceof Points) {\r\n                x.geometry.dispose();\r\n                x.material.dispose();\r\n            }\r\n            if (IDisposable.isDisposable(x)) {\r\n                x.dispose();\r\n            }\r\n        });\r\n        shape.children.length = 0;\r\n        this.container.remove(shape);\r\n    }\r\n}\r\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\r\n// See LICENSE file in the project root for full license information.\r\n\r\nimport {\r\n    CameraType,\r\n    ICameraController,\r\n    Observable,\r\n    Precision,\r\n    ViewMode,\r\n    VisualNode,\r\n    XYZLike,\r\n} from \"chili-core\";\r\nimport {\r\n    Box3,\r\n    Camera,\r\n    Matrix4,\r\n    OrthographicCamera,\r\n    PerspectiveCamera,\r\n    Raycaster,\r\n    Sphere,\r\n    Vector3,\r\n} from \"three\";\r\nimport { Constants } from \"./constants\";\r\nimport { ThreeGeometry } from \"./threeGeometry\";\r\nimport { ThreeHelper } from \"./threeHelper\";\r\nimport { ThreeView } from \"./threeView\";\r\nimport { ThreeVisualContext } from \"./threeVisualContext\";\r\nimport { ThreeVisualObject } from \"./threeVisualObject\";\r\n\r\nconst DEG_TO_RAD = Math.PI / 180.0;\r\nconst ZOOM_SPEED_FACTOR = 0.1;\r\nconst ROTATE_SPEED = 0.01;\r\nconst PAN_SPEED_FACTOR = 0.002;\r\nconst CAMERA_FOV = 50;\r\nconst CAMERA_NEAR = 0.1;\r\nconst CAMERA_FAR = 1e6;\r\nconst MAX_PITCH_ANGLE = 88 * DEG_TO_RAD;\r\nconst MIN_CARME_TO_TARGET = 100;\r\n\r\nCamera.DEFAULT_UP = new Vector3(0, 0, 1);\r\n\r\nexport class CameraController extends Observable implements ICameraController {\r\n    private _width: number = 100;\r\n    private _height: number = 100;\r\n    private _target: Vector3 = new Vector3();\r\n    private _position: Vector3 = new Vector3(1500, 1500, 1500);\r\n    private _rotateCenter: Vector3 | undefined;\r\n    private _camera: PerspectiveCamera | OrthographicCamera;\r\n\r\n    get cameraType(): CameraType {\r\n        return this.getPrivateValue(\"cameraType\", \"perspective\");\r\n    }\r\n    set cameraType(value: CameraType) {\r\n        if (this.setProperty(\"cameraType\", value)) {\r\n            this._camera = this.createCamera(this._camera.near, this._camera.far);\r\n            if (this.camera instanceof OrthographicCamera) {\r\n                this.updateOrthographicCamera(this.camera);\r\n            }\r\n            this.updateCameraPosionTarget();\r\n        }\r\n    }\r\n\r\n    get target() {\r\n        return this._target;\r\n    }\r\n\r\n    set target(value: Vector3) {\r\n        this._target.copy(value);\r\n    }\r\n\r\n    get cameraPosition() {\r\n        return ThreeHelper.toXYZ(this._position);\r\n    }\r\n\r\n    get cameraTarget() {\r\n        return ThreeHelper.toXYZ(this._target);\r\n    }\r\n\r\n    get cameraUp() {\r\n        return ThreeHelper.toXYZ(this._camera.up);\r\n    }\r\n\r\n    get camera(): PerspectiveCamera | OrthographicCamera {\r\n        return this._camera;\r\n    }\r\n\r\n    constructor(readonly view: ThreeView) {\r\n        super();\r\n        this._camera = this.createCamera(CAMERA_NEAR, CAMERA_FAR);\r\n    }\r\n\r\n    private createCamera(near: number, far: number) {\r\n        let camera: PerspectiveCamera | OrthographicCamera;\r\n        if (this.cameraType === \"perspective\") {\r\n            camera = new PerspectiveCamera(CAMERA_FOV, this._width / this._height, near, far);\r\n        } else {\r\n            camera = new OrthographicCamera(\r\n                -this._width / 2,\r\n                this._width / 2,\r\n                this._height / 2,\r\n                -this._height / 2,\r\n                near,\r\n                far,\r\n            );\r\n        }\r\n        this.setCameraLayer(camera, this.view.mode);\r\n        return camera;\r\n    }\r\n\r\n    setCameraLayer(camera: Camera, mode: ViewMode) {\r\n        if (mode === ViewMode.wireframe) {\r\n            camera.layers.enable(Constants.Layers.Wireframe);\r\n            camera.layers.disable(Constants.Layers.Solid);\r\n        } else if (mode === ViewMode.solid) {\r\n            camera.layers.enable(Constants.Layers.Solid);\r\n            camera.layers.disable(Constants.Layers.Wireframe);\r\n        } else {\r\n            camera.layers.enableAll();\r\n        }\r\n    }\r\n\r\n    pan(dx: number, dy: number): void {\r\n        const ratio = PAN_SPEED_FACTOR * this._target.distanceTo(this._position);\r\n        const direction = this._target.clone().sub(this._position).normalize();\r\n        const hor = direction.clone().cross(this.camera.up).normalize();\r\n        const ver = hor.clone().cross(direction).normalize();\r\n        const vector = hor.multiplyScalar(-dx).add(ver.multiplyScalar(dy)).multiplyScalar(ratio);\r\n        this._target.add(vector);\r\n        this._position.add(vector);\r\n\r\n        this.updateCameraPosionTarget();\r\n    }\r\n\r\n    updateCameraPosionTarget() {\r\n        const direction = this._target.clone().sub(this._position).normalize();\r\n        if (1 - Math.abs(direction.z) < Precision.Float) {\r\n            this._camera.up.set(0, 1, 0);\r\n        } else {\r\n            this._camera.up.copy(Camera.DEFAULT_UP);\r\n        }\r\n\r\n        this._camera.position.copy(this._position);\r\n        this._camera.lookAt(this._target);\r\n        this._camera.updateProjectionMatrix();\r\n    }\r\n\r\n    setSize(width: number, height: number): void {\r\n        this._width = width;\r\n        this._height = height;\r\n        if (this.camera instanceof PerspectiveCamera) {\r\n            this.camera.aspect = width / height;\r\n        } else if (this.camera instanceof OrthographicCamera) {\r\n            this.updateOrthographicCamera(this.camera);\r\n        }\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n    private updateOrthographicCamera(camera: OrthographicCamera) {\r\n        const aspect = this._width / this._height;\r\n        let length = this._position.distanceTo(this._target);\r\n        let frustumHalfHeight = length * Math.tan((CAMERA_FOV * DEG_TO_RAD) / 2);\r\n        camera.left = -frustumHalfHeight * aspect;\r\n        camera.right = frustumHalfHeight * aspect;\r\n        camera.top = frustumHalfHeight;\r\n        camera.bottom = -frustumHalfHeight;\r\n    }\r\n\r\n    startRotate(x: number, y: number): void {\r\n        const box = new Box3();\r\n        const nodes = this.view.document.selection.getSelectedNodes();\r\n        if (nodes.length > 0) {\r\n            for (const node of nodes) {\r\n                const shape = this.view.document.visual.context.getVisual(node) as ThreeVisualObject;\r\n                box.expandByObject(shape);\r\n            }\r\n            this._rotateCenter = box.getCenter(new Vector3());\r\n            return;\r\n        }\r\n\r\n        const shape = this.view.detectVisual(x, y).at(0);\r\n        if (shape instanceof ThreeVisualObject) {\r\n            box.setFromObject(shape);\r\n            this._rotateCenter = box.getCenter(new Vector3());\r\n            return;\r\n        }\r\n\r\n        this._rotateCenter = undefined;\r\n    }\r\n\r\n    rotate(dx: number, dy: number): void {\r\n        const center = this._rotateCenter ?? this._target;\r\n        const direction = this._position.clone().sub(center);\r\n        const hor = this.camera.up.clone().cross(direction).normalize();\r\n\r\n        const matrixX = new Matrix4().makeRotationAxis(\r\n            hor,\r\n            -this.ensureRotateY(direction, dy) * ROTATE_SPEED,\r\n        );\r\n        const matrixY = new Matrix4().makeRotationAxis(this.camera.up, -dx * ROTATE_SPEED);\r\n        const matrix = new Matrix4().multiplyMatrices(matrixY, matrixX);\r\n\r\n        this._position = ThreeHelper.transformVector(matrix, direction).add(center);\r\n        if (this._rotateCenter) {\r\n            const targetToEye = this._target.clone().sub(this._camera.position);\r\n            this._target = ThreeHelper.transformVector(matrix, targetToEye).add(this._position);\r\n        }\r\n\r\n        this.updateCameraPosionTarget();\r\n    }\r\n\r\n    private ensureRotateY(direction: Vector3, dy: number) {\r\n        const currentPitch = Math.PI / 2 - direction.angleTo(Camera.DEFAULT_UP);\r\n        const targetPitch = currentPitch + dy * ROTATE_SPEED;\r\n        if (targetPitch > MAX_PITCH_ANGLE) {\r\n            dy = (MAX_PITCH_ANGLE - currentPitch) / ROTATE_SPEED;\r\n        } else if (targetPitch < -MAX_PITCH_ANGLE) {\r\n            dy = (-MAX_PITCH_ANGLE - currentPitch) / ROTATE_SPEED;\r\n        }\r\n        return dy;\r\n    }\r\n\r\n    fitContent(): void {\r\n        const context = this.view.document.visual.context as ThreeVisualContext;\r\n        const sphere = this.getBoundingSphere(context);\r\n        let fieldOfView = CAMERA_FOV / 2.0;\r\n        if (this._width < this._height) {\r\n            fieldOfView = (fieldOfView * this._width) / this._height;\r\n        }\r\n\r\n        const distance = sphere.radius / Math.sin(fieldOfView * DEG_TO_RAD);\r\n        const direction = this._target.clone().sub(this._position).normalize();\r\n        this._target.copy(sphere.center);\r\n        this._position.copy(this._target.clone().sub(direction.clone().multiplyScalar(distance)));\r\n\r\n        if (this._camera instanceof OrthographicCamera) {\r\n            this.updateOrthographicCamera(this._camera);\r\n        }\r\n\r\n        this.updateCameraNearFar();\r\n        this.updateCameraPosionTarget();\r\n    }\r\n\r\n    private getBoundingSphere(context: ThreeVisualContext) {\r\n        const sphere = new Sphere();\r\n        const shapes = this.view.document.selection\r\n            .getSelectedNodes()\r\n            .filter((x) => x instanceof VisualNode);\r\n        if (shapes.length === 0) {\r\n            new Box3().setFromObject(context.visualShapes).getBoundingSphere(sphere);\r\n            return sphere;\r\n        }\r\n\r\n        const box = new Box3();\r\n        for (let shape of shapes) {\r\n            let threeGeometry = context.getVisual(shape) as ThreeGeometry;\r\n            let boundingBox = new Box3().setFromObject(threeGeometry);\r\n            if (boundingBox) {\r\n                box.union(boundingBox);\r\n            }\r\n        }\r\n        box.getBoundingSphere(sphere);\r\n        return sphere;\r\n    }\r\n\r\n    zoom(x: number, y: number, delta: number): void {\r\n        const vector = this._target.clone().sub(this._position);\r\n\r\n        let zoomFactor = this.caclueZoomFactor(x, y, vector);\r\n        const scale = delta > 0 ? zoomFactor : -zoomFactor;\r\n        let mouse = this.mouseToWorld(x, y);\r\n        if (this._camera instanceof PerspectiveCamera) {\r\n            mouse = this.caculePerspectiveCameraMouse(vector, mouse);\r\n        }\r\n        const targetMoveVector = this._target.clone().sub(mouse).multiplyScalar(scale);\r\n        this._target.add(targetMoveVector);\r\n        this._position.copy(this._target.clone().sub(vector.clone().multiplyScalar(1 + scale)));\r\n        if (vector.length() < MIN_CARME_TO_TARGET) {\r\n            this._target = this._position\r\n                .clone()\r\n                .add(vector.clone().normalize().multiplyScalar(MIN_CARME_TO_TARGET));\r\n        }\r\n\r\n        if (this._camera instanceof OrthographicCamera) {\r\n            this.updateOrthographicCamera(this._camera);\r\n        }\r\n        this.updateCameraNearFar();\r\n        this.updateCameraPosionTarget();\r\n    }\r\n\r\n    private caclueZoomFactor(x: number, y: number, direction: Vector3) {\r\n        const raycaster = new Raycaster();\r\n        raycaster.setFromCamera(this.view.screenToCameraRect(x, y), this.camera);\r\n        const intersect = raycaster.intersectObjects(this.view.content.visualShapes.children).at(0)?.point;\r\n        let zoomFactor = ZOOM_SPEED_FACTOR;\r\n        if (intersect) {\r\n            zoomFactor = (ZOOM_SPEED_FACTOR * this._position.distanceTo(intersect)) / direction.length();\r\n        }\r\n        return zoomFactor;\r\n    }\r\n\r\n    private updateCameraNearFar() {\r\n        const distance = this._position.distanceTo(this._target);\r\n        if (distance < 1000.0) {\r\n            this.camera.near = 0.1;\r\n            this.camera.far = 10000.0;\r\n        } else if (distance < 100000.0) {\r\n            this.camera.near = 10;\r\n            this.camera.far = 1000000.0;\r\n        } else if (distance < 1000000.0) {\r\n            this.camera.near = 1000.0;\r\n            this.camera.far = 10000000.0;\r\n        } else {\r\n            this.camera.near = 10000.0;\r\n            this.camera.far = 100000000.0;\r\n        }\r\n    }\r\n\r\n    private caculePerspectiveCameraMouse(direction: Vector3, mouse: Vector3) {\r\n        const directionNormal = direction.clone().normalize();\r\n        const dot = mouse.clone().sub(this._position).dot(directionNormal);\r\n        const project = this._position.clone().add(directionNormal.clone().multiplyScalar(dot));\r\n        const length = (project.distanceTo(mouse) * direction.length()) / project.distanceTo(this._position);\r\n        const v = mouse.clone().sub(project).normalize().multiplyScalar(length);\r\n        mouse = this._target.clone().add(v);\r\n        return mouse;\r\n    }\r\n\r\n    lookAt(eye: XYZLike, target: XYZLike, up: XYZLike): void {\r\n        this._position.set(eye.x, eye.y, eye.z);\r\n        this._target.set(target.x, target.y, target.z);\r\n        this.camera.up.set(up.x, up.y, up.z);\r\n        this.updateCameraPosionTarget();\r\n    }\r\n\r\n    private mouseToWorld(mx: number, my: number) {\r\n        const x = (2.0 * mx) / this._width - 1;\r\n        const y = (-2.0 * my) / this._height + 1;\r\n        const dist = this._position.distanceTo(this._target);\r\n        const z = (this._camera.far + this._camera.near - 2 * dist) / (this._camera.near - this._camera.far);\r\n\r\n        return new Vector3(x, y, z).unproject(this._camera);\r\n    }\r\n}\r\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\r\n// See LICENSE file in the project root for full license information.\r\n\r\nimport { XYZ } from \"chili-core\";\r\nimport { Matrix4, Vector3 } from \"three\";\r\nimport { CameraController } from \"./cameraController\";\r\nimport { ThreeView } from \"./threeView\";\r\n\r\nconst MOUSE_LEFT = 1;\r\n\r\nconst options = {\r\n    size: 200,\r\n    padding: 16,\r\n    bubbleSizePrimary: 18,\r\n    bubbleSizeSeconday: 10,\r\n    showSecondary: true,\r\n    lineWidth: 2,\r\n    fontSize: \"24px\",\r\n    fontFamily: \"arial\",\r\n    fontColor: \"#151515\",\r\n    fontYAdjust: 0,\r\n    colors: {\r\n        x: [\"#f73c3c\", \"#942424\"],\r\n        y: [\"#6ccb26\", \"#417a17\"],\r\n        z: [\"#178cf0\", \"#0e5490\"],\r\n    },\r\n};\r\n\r\nexport interface Axis {\r\n    axis: string;\r\n    direction: Vector3;\r\n    size: number;\r\n    position: Vector3;\r\n    color: string[];\r\n    lineWidth?: number;\r\n    label?: string;\r\n}\r\n\r\nexport class ViewGizmo extends HTMLElement {\r\n    private readonly _axes: Axis[];\r\n    private readonly _center: Vector3;\r\n    private readonly _canvas: HTMLCanvasElement;\r\n    private readonly _context: CanvasRenderingContext2D;\r\n    readonly cameraController: CameraController;\r\n    private _canClick: boolean = true;\r\n    private _selectedAxis?: Axis;\r\n    private _mouse?: Vector3;\r\n\r\n    constructor(readonly view: ThreeView) {\r\n        super();\r\n        this.cameraController = view.cameraController;\r\n        this._axes = this._initAxes();\r\n        this._center = new Vector3(options.size * 0.5, options.size * 0.5, 0);\r\n        this._canvas = this._initCanvas();\r\n        this._context = this._canvas.getContext(\"2d\")!;\r\n        this._initStyle();\r\n    }\r\n\r\n    private _initStyle() {\r\n        this.style.zIndex = \"999\";\r\n        this.style.position = \"absolute\";\r\n        this.style.top = \"20px\";\r\n        this.style.right = \"20px\";\r\n        this.style.borderRadius = \"100%\";\r\n        this.style.cursor = \"pointer\";\r\n        this.style.userSelect = \"none\";\r\n        this.style.webkitUserSelect = \"none\";\r\n    }\r\n\r\n    private _initCanvas() {\r\n        let canvas = document.createElement(\"canvas\");\r\n        canvas.width = options.size;\r\n        canvas.height = options.size;\r\n        canvas.style.width = `${options.size * 0.5}px`;\r\n        canvas.style.height = `${options.size * 0.5}px`;\r\n        this.append(canvas);\r\n        return canvas;\r\n    }\r\n\r\n    private _initAxes() {\r\n        return [\r\n            {\r\n                axis: \"x\",\r\n                direction: new Vector3(1, 0, 0),\r\n                position: new Vector3(),\r\n                size: options.bubbleSizePrimary,\r\n                color: options.colors.x,\r\n                lineWidth: options.lineWidth,\r\n                label: \"X\",\r\n            },\r\n            {\r\n                axis: \"y\",\r\n                direction: new Vector3(0, 1, 0),\r\n                position: new Vector3(),\r\n                size: options.bubbleSizePrimary,\r\n                color: options.colors.y,\r\n                lineWidth: options.lineWidth,\r\n                label: \"Y\",\r\n            },\r\n            {\r\n                axis: \"z\",\r\n                direction: new Vector3(0, 0, 1),\r\n                position: new Vector3(),\r\n                size: options.bubbleSizePrimary,\r\n                color: options.colors.z,\r\n                lineWidth: options.lineWidth,\r\n                label: \"Z\",\r\n            },\r\n            {\r\n                axis: \"-x\",\r\n                direction: new Vector3(-1, 0, 0),\r\n                position: new Vector3(),\r\n                size: options.bubbleSizeSeconday,\r\n                color: options.colors.x,\r\n            },\r\n            {\r\n                axis: \"-y\",\r\n                direction: new Vector3(0, -1, 0),\r\n                position: new Vector3(),\r\n                size: options.bubbleSizeSeconday,\r\n                color: options.colors.y,\r\n            },\r\n            {\r\n                axis: \"-z\",\r\n                direction: new Vector3(0, 0, -1),\r\n                position: new Vector3(),\r\n                size: options.bubbleSizeSeconday,\r\n                color: options.colors.z,\r\n            },\r\n        ];\r\n    }\r\n\r\n    connectedCallback() {\r\n        this._canvas.addEventListener(\"pointermove\", this._onPointerMove);\r\n        this._canvas.addEventListener(\"pointerenter\", this._onPointerEnter);\r\n        this._canvas.addEventListener(\"pointerout\", this._onPointerOut);\r\n        this._canvas.addEventListener(\"click\", this._onClick);\r\n        this._canvas.addEventListener(\"pointerdown\", this._onPointerDown);\r\n        this._canvas.addEventListener(\"pointerup\", this._onPointerUp);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this._canvas.removeEventListener(\"pointermove\", this._onPointerMove);\r\n        this._canvas.removeEventListener(\"pointerenter\", this._onPointerEnter);\r\n        this._canvas.removeEventListener(\"pointerout\", this._onPointerOut);\r\n        this._canvas.removeEventListener(\"click\", this._onClick);\r\n        this._canvas.removeEventListener(\"pointerdown\", this._onPointerDown);\r\n        this._canvas.removeEventListener(\"pointerup\", this._onPointerUp);\r\n    }\r\n\r\n    private readonly _onPointerMove = (e: PointerEvent) => {\r\n        e.stopPropagation();\r\n        if (e.buttons === MOUSE_LEFT && !(e.movementX === 0 && e.movementY === 0)) {\r\n            this.cameraController.rotate(e.movementX * 4, e.movementY * 4);\r\n            this._canClick = false;\r\n        }\r\n        const rect = this._canvas.getBoundingClientRect();\r\n        this._mouse = new Vector3(e.clientX - rect.left, e.clientY - rect.top, 0).multiplyScalar(2);\r\n        this.view.update();\r\n    };\r\n\r\n    private readonly _onPointerDown = (e: PointerEvent) => {\r\n        e.stopPropagation();\r\n        this._canvas.setPointerCapture(e.pointerId);\r\n    };\r\n\r\n    private readonly _onPointerUp = (e: PointerEvent) => {\r\n        e.stopPropagation();\r\n        this._canvas.releasePointerCapture(e.pointerId);\r\n    };\r\n\r\n    private readonly _onPointerOut = (e: PointerEvent) => {\r\n        e.stopPropagation();\r\n        this._mouse = undefined;\r\n        this.style.backgroundColor = \"transparent\";\r\n    };\r\n\r\n    private readonly _onPointerEnter = (e: PointerEvent) => {\r\n        e.stopPropagation();\r\n        this.style.backgroundColor = \"rgba(66, 66, 66, .9)\";\r\n    };\r\n\r\n    private readonly _onClick = (e: MouseEvent) => {\r\n        e.stopPropagation();\r\n        if (!this._canClick) {\r\n            this._canClick = true;\r\n            return;\r\n        }\r\n        if (this._selectedAxis) {\r\n            const distance = this.cameraController.camera.position.distanceTo(this.cameraController.target);\r\n            const position = this._selectedAxis.direction\r\n                .clone()\r\n                .multiplyScalar(distance)\r\n                .add(this.cameraController.target);\r\n            this.cameraController.camera.position.copy(position);\r\n            let up = new XYZ(0, 0, 1);\r\n            if (this._selectedAxis.axis === \"z\") up = new XYZ(0, 1, 0);\r\n            else if (this._selectedAxis.axis === \"-z\") up = new XYZ(0, -1, 0);\r\n            this.cameraController.lookAt(\r\n                this.cameraController.camera.position,\r\n                this.cameraController.target,\r\n                up,\r\n            );\r\n            this.view.update();\r\n        }\r\n    };\r\n\r\n    clear() {\r\n        this._context.clearRect(0, 0, this._canvas.width, this._canvas.height);\r\n    }\r\n\r\n    update() {\r\n        this.clear();\r\n        const invRotMat = new Matrix4()\r\n            .makeRotationFromEuler(this.cameraController.camera.rotation)\r\n            .invert();\r\n        this._axes.forEach(\r\n            (axis) =>\r\n                (axis.position = this.getBubblePosition(axis.direction.clone().applyMatrix4(invRotMat))),\r\n        );\r\n        this._axes.sort((a, b) => a.position.z - b.position.z);\r\n        this.setSelectedAxis(this._axes);\r\n        this.drawAxes(this._axes);\r\n    }\r\n\r\n    private setSelectedAxis(axes: Axis[]) {\r\n        this._selectedAxis = undefined;\r\n        if (this._mouse && this._canClick) {\r\n            let closestDist = Infinity;\r\n            for (let axis of axes) {\r\n                const distance = this._mouse.distanceTo(axis.position);\r\n                if (distance < closestDist && distance < axis.size) {\r\n                    closestDist = distance;\r\n                    this._selectedAxis = axis;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    drawAxes(axes: Axis[]) {\r\n        for (let axis of axes) {\r\n            const color = this.getAxisColor(axis);\r\n            this.drawCircle(axis.position, axis.size, color);\r\n            this.drawLine(this._center, axis.position, color, axis.lineWidth);\r\n            this.drawLabel(axis);\r\n        }\r\n    }\r\n\r\n    private getAxisColor(axis: Axis) {\r\n        let color;\r\n        if (this._selectedAxis === axis) {\r\n            color = \"#FFFFFF\";\r\n        } else if (axis.position.z >= -0.01) {\r\n            color = axis.color[0];\r\n        } else {\r\n            color = axis.color[1];\r\n        }\r\n        return color;\r\n    }\r\n\r\n    private drawCircle(p: Vector3, radius = 10, color = \"#FF0000\") {\r\n        this._context.beginPath();\r\n        this._context.arc(p.x, p.y, radius, 0, 2 * Math.PI, false);\r\n        this._context.fillStyle = color;\r\n        this._context.fill();\r\n        this._context.closePath();\r\n    }\r\n\r\n    private drawLine(p1: Vector3, p2: Vector3, color: string, width?: number) {\r\n        if (width) {\r\n            this._context.beginPath();\r\n            this._context.moveTo(p1.x, p1.y);\r\n            this._context.lineTo(p2.x, p2.y);\r\n            this._context.lineWidth = width;\r\n            this._context.strokeStyle = color;\r\n            this._context.stroke();\r\n            this._context.closePath();\r\n        }\r\n    }\r\n\r\n    private drawLabel(axis: Axis) {\r\n        if (axis.label) {\r\n            this._context.font = [options.fontSize, options.fontFamily].join(\" \");\r\n            this._context.fillStyle = options.fontColor;\r\n            this._context.textBaseline = \"middle\";\r\n            this._context.textAlign = \"center\";\r\n            this._context.fillText(axis.label, axis.position.x, axis.position.y + options.fontYAdjust);\r\n        }\r\n    }\r\n\r\n    private getBubblePosition(vector: Vector3) {\r\n        return new Vector3(\r\n            vector.x * (this._center.x - options.bubbleSizePrimary / 2 - options.padding) + this._center.x,\r\n            this._center.y - vector.y * (this._center.y - options.bubbleSizePrimary / 2 - options.padding),\r\n            vector.z,\r\n        );\r\n    }\r\n}\r\n\r\ncustomElements.define(\"view-gizmo\", ViewGizmo);\r\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\r\n// See LICENSE file in the project root for full license information.\r\n\r\nimport { div, span, svg } from \"chili-controls\";\r\nimport {\r\n    HtmlTextOptions,\r\n    IDisposable,\r\n    IDocument,\r\n    INodeFilter,\r\n    IShape,\r\n    IShapeFilter,\r\n    ISubShape,\r\n    IView,\r\n    IVisualObject,\r\n    Matrix4,\r\n    MultiShapeNode,\r\n    Observable,\r\n    Plane,\r\n    PubSub,\r\n    Ray,\r\n    ShapeMeshRange,\r\n    ShapeNode,\r\n    ShapeType,\r\n    ViewMode,\r\n    VisualNode,\r\n    VisualShapeData,\r\n    XY,\r\n    XYZ,\r\n    XYZLike,\r\n    debounce,\r\n} from \"chili-core\";\r\nimport {\r\n    DirectionalLight,\r\n    Intersection,\r\n    Mesh,\r\n    Object3D,\r\n    OrthographicCamera,\r\n    PerspectiveCamera,\r\n    Raycaster,\r\n    Scene,\r\n    Vector2,\r\n    Vector3,\r\n    WebGLRenderer,\r\n} from \"three\";\r\nimport { SelectionBox } from \"three/examples/jsm/interactive/SelectionBox\";\r\nimport { LineSegments2 } from \"three/examples/jsm/lines/LineSegments2\";\r\nimport { CSS2DObject, CSS2DRenderer } from \"three/examples/jsm/renderers/CSS2DRenderer\";\r\nimport { CameraController } from \"./cameraController\";\r\nimport { Constants } from \"./constants\";\r\nimport { ThreeGeometry } from \"./threeGeometry\";\r\nimport { ThreeHelper } from \"./threeHelper\";\r\nimport { ThreeHighlighter } from \"./threeHighlighter\";\r\nimport style from \"./threeView.module.css\";\r\nimport { ThreeVisualContext } from \"./threeVisualContext\";\r\nimport { ThreeComponentObject, ThreeMeshObject, ThreeVisualObject } from \"./threeVisualObject\";\r\nimport { ViewGizmo } from \"./viewGizmo\";\r\n\r\nexport class ThreeView extends Observable implements IView {\r\n    private _dom?: HTMLElement;\r\n    private readonly _resizeObserver: ResizeObserver;\r\n\r\n    private readonly _scene: Scene;\r\n    private readonly _renderer: WebGLRenderer;\r\n    private readonly _cssRenderer: CSS2DRenderer;\r\n    private readonly _workplane: Plane;\r\n    private _needsUpdate: boolean = false;\r\n    private readonly _gizmo: ViewGizmo;\r\n    readonly cameraController: CameraController;\r\n    readonly dynamicLight = new DirectionalLight(0xffffff, 2);\r\n\r\n    get name(): string {\r\n        return this.getPrivateValue(\"name\");\r\n    }\r\n    set name(value: string) {\r\n        this.setProperty(\"name\", value);\r\n    }\r\n\r\n    get dom() {\r\n        return this._dom;\r\n    }\r\n\r\n    private _isClosed: boolean = false;\r\n    get isClosed(): boolean {\r\n        return this._isClosed;\r\n    }\r\n\r\n    get camera(): PerspectiveCamera | OrthographicCamera {\r\n        return this.cameraController.camera;\r\n    }\r\n\r\n    get mode(): ViewMode {\r\n        return this.getPrivateValue(\"mode\", ViewMode.solidAndWireframe);\r\n    }\r\n    set mode(value: ViewMode) {\r\n        this.setProperty(\"mode\", value, () => {\r\n            this.cameraController.setCameraLayer(this.camera, this.mode);\r\n        });\r\n    }\r\n\r\n    constructor(\r\n        readonly document: IDocument,\r\n        name: string,\r\n        workplane: Plane,\r\n        readonly highlighter: ThreeHighlighter,\r\n        readonly content: ThreeVisualContext,\r\n    ) {\r\n        super();\r\n        this.setPrivateValue(\"name\", name);\r\n        this._scene = content.scene;\r\n        this._workplane = workplane;\r\n        let resizerObserverCallback = debounce(this._resizerObserverCallback, 100);\r\n        this._resizeObserver = new ResizeObserver(resizerObserverCallback);\r\n        this.cameraController = new CameraController(this);\r\n        this._renderer = this.initRenderer();\r\n        this._cssRenderer = this.initCssRenderer();\r\n        this._scene.add(this.dynamicLight);\r\n        this._gizmo = new ViewGizmo(this);\r\n        this.setPrivateValue(\"mode\", ViewMode.solidAndWireframe);\r\n        this.camera.layers.enableAll();\r\n        this.document.application.views.push(this);\r\n        this.animate();\r\n    }\r\n\r\n    override disposeInternal(): void {\r\n        super.disposeInternal();\r\n        this._resizeObserver.disconnect();\r\n    }\r\n\r\n    close(): void {\r\n        if (this._isClosed) return;\r\n        this._isClosed = true;\r\n        this.document.application.views.remove(this);\r\n        let otherView = this.document.application.views.find((x) => x.document === this.document);\r\n        if (!otherView) {\r\n            this.document.close();\r\n        } else if (this.document.application.activeView === this) {\r\n            this.document.application.activeView = otherView;\r\n        }\r\n        this.dispose();\r\n        PubSub.default.pub(\"viewClosed\", this);\r\n    }\r\n\r\n    private readonly _resizerObserverCallback = (entries: ResizeObserverEntry[]) => {\r\n        for (const entry of entries) {\r\n            if (entry.target === this._dom) {\r\n                this.resize(entry.contentRect.width, entry.contentRect.height);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    get renderer(): WebGLRenderer {\r\n        return this._renderer;\r\n    }\r\n\r\n    protected initRenderer() {\r\n        let renderer = new WebGLRenderer({\r\n            antialias: false,\r\n            alpha: true,\r\n        });\r\n        renderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n        return renderer;\r\n    }\r\n\r\n    private initCssRenderer() {\r\n        let renderer = new CSS2DRenderer();\r\n        return renderer;\r\n    }\r\n\r\n    setDom(element: HTMLElement) {\r\n        if (this._dom) {\r\n            this._resizeObserver.unobserve(this._dom);\r\n        }\r\n        this._dom = element;\r\n        this._gizmo?.remove();\r\n        element.appendChild(this._gizmo);\r\n\r\n        this._renderer.domElement.remove();\r\n        this._renderer.domElement.style.userSelect = \"none\";\r\n        this._renderer.domElement.style.webkitUserSelect = \"none\";\r\n        element.appendChild(this._renderer.domElement);\r\n\r\n        this._cssRenderer.domElement.remove();\r\n        this._cssRenderer.domElement.style.position = \"absolute\";\r\n        this._cssRenderer.domElement.style.top = \"0px\";\r\n        this._cssRenderer.domElement.style.userSelect = \"none\";\r\n        this._cssRenderer.domElement.style.webkitUserSelect = \"none\";\r\n        element.appendChild(this._cssRenderer.domElement);\r\n\r\n        this.resize(element.clientWidth, element.clientHeight);\r\n        this._resizeObserver.observe(element);\r\n        this.cameraController.updateCameraPosionTarget();\r\n    }\r\n\r\n    htmlText(text: string, point: XYZLike, options?: HtmlTextOptions): IDisposable {\r\n        const dispose = () => {\r\n            options?.onDispose?.();\r\n            this.content.cssObjects.remove(cssObject);\r\n            cssObject.element.remove();\r\n        };\r\n        let cssObject = new CSS2DObject(\r\n            div(\r\n                { className: style.htmlText },\r\n                span({ textContent: text }),\r\n                options?.hideDelete === true\r\n                    ? \"\"\r\n                    : svg({\r\n                          className: style.delete,\r\n                          icon: \"icon-times\",\r\n                          onclick: (e) => {\r\n                              e.stopPropagation();\r\n                              dispose();\r\n                          },\r\n                      }),\r\n            ),\r\n        );\r\n        cssObject.position.set(point.x, point.y, point.z);\r\n        if (options?.center) cssObject.center.set(options.center.x, options.center.y);\r\n        this.content.cssObjects.add(cssObject);\r\n        return { dispose };\r\n    }\r\n\r\n    toImage(): string {\r\n        this._renderer.render(this._scene, this.camera);\r\n        return this.renderer.domElement.toDataURL();\r\n    }\r\n\r\n    get workplane(): Plane {\r\n        return this._workplane;\r\n    }\r\n\r\n    set workplane(value: Plane) {\r\n        this.setProperty(\"workplane\", value);\r\n    }\r\n\r\n    update() {\r\n        this._needsUpdate = true;\r\n    }\r\n\r\n    private animate() {\r\n        if (this._isClosed) {\r\n            return;\r\n        }\r\n        requestAnimationFrame(() => {\r\n            this.animate();\r\n        });\r\n        if (!this._needsUpdate) return;\r\n\r\n        let dir = this.camera.position.clone().sub(this.cameraController.target);\r\n        this.dynamicLight.position.copy(dir);\r\n        this._renderer.render(this._scene, this.camera);\r\n        this._cssRenderer.render(this._scene, this.camera);\r\n        this._gizmo?.update();\r\n\r\n        this._needsUpdate = false;\r\n    }\r\n\r\n    resize(width: number, height: number) {\r\n        if (height < 0.00001) {\r\n            return;\r\n        }\r\n        if (this.camera instanceof PerspectiveCamera) {\r\n            this.camera.aspect = width / height;\r\n            this.camera.updateProjectionMatrix();\r\n        } else if (this.camera instanceof OrthographicCamera) {\r\n            this.camera.updateProjectionMatrix();\r\n        }\r\n        this._renderer.setSize(width, height);\r\n        this._cssRenderer.setSize(width, height);\r\n        this.cameraController.setSize(width, height);\r\n        this.update();\r\n    }\r\n\r\n    get width() {\r\n        return this._dom?.clientWidth ?? 1;\r\n    }\r\n\r\n    get height() {\r\n        return this._dom?.clientHeight ?? 1;\r\n    }\r\n\r\n    screenToCameraRect(mx: number, my: number) {\r\n        return new Vector2((mx / this.width) * 2 - 1, -(my / this.height) * 2 + 1);\r\n    }\r\n\r\n    rayAt(mx: number, my: number): Ray {\r\n        const { x, y } = this.screenToCameraRect(mx, my);\r\n\r\n        const origin = new Vector3();\r\n        const direction = new Vector3(x, y, 0.5);\r\n        if (this.camera instanceof PerspectiveCamera) {\r\n            origin.setFromMatrixPosition(this.camera.matrixWorld);\r\n            direction.unproject(this.camera).sub(origin).normalize();\r\n        } else if (this.camera instanceof OrthographicCamera) {\r\n            const z = (this.camera.near + this.camera.far) / (this.camera.near - this.camera.far);\r\n            origin.set(x, y, z).unproject(this.camera);\r\n            direction.set(0, 0, -1).transformDirection(this.camera.matrixWorld);\r\n        } else {\r\n            console.error(\"Unsupported camera type: \" + this.camera);\r\n        }\r\n\r\n        return new Ray(ThreeHelper.toXYZ(origin), ThreeHelper.toXYZ(direction));\r\n    }\r\n\r\n    screenToWorld(mx: number, my: number): XYZ {\r\n        let vec = this.mouseToWorld(mx, my);\r\n        return ThreeHelper.toXYZ(vec);\r\n    }\r\n\r\n    worldToScreen(point: XYZ): XY {\r\n        let cx = this.width / 2;\r\n        let cy = this.height / 2;\r\n        let vec = new Vector3(point.x, point.y, point.z).project(this.camera);\r\n        return new XY(Math.round(cx * vec.x + cx), Math.round(-cy * vec.y + cy));\r\n    }\r\n\r\n    direction(): XYZ {\r\n        const vec = new Vector3();\r\n        this.camera.getWorldDirection(vec);\r\n        return ThreeHelper.toXYZ(vec);\r\n    }\r\n\r\n    up(): XYZ {\r\n        return ThreeHelper.toXYZ(this.camera.up);\r\n    }\r\n\r\n    private mouseToWorld(mx: number, my: number, z: number = 0.5) {\r\n        let { x, y } = this.screenToCameraRect(mx, my);\r\n        return new Vector3(x, y, z).unproject(this.camera);\r\n    }\r\n\r\n    detectVisual(x: number, y: number, nodeFilter?: INodeFilter): IVisualObject[] {\r\n        let visual: IVisualObject[] = [];\r\n        let detecteds = this.findIntersectedNodes(x, y);\r\n        for (const detected of detecteds) {\r\n            let threeObject = detected.object.parent as ThreeVisualObject;\r\n            if (!threeObject) continue;\r\n\r\n            let node = this.getNodeFromObject(threeObject);\r\n            if (node === undefined) continue;\r\n            if (nodeFilter !== undefined && !nodeFilter.allow(node)) {\r\n                continue;\r\n            }\r\n            visual.push(threeObject);\r\n        }\r\n        return visual;\r\n    }\r\n\r\n    detectVisualRect(\r\n        mx1: number,\r\n        my1: number,\r\n        mx2: number,\r\n        my2: number,\r\n        nodeFilter?: INodeFilter,\r\n    ): IVisualObject[] {\r\n        const selectionBox = this.initSelectionBox(mx1, my1, mx2, my2);\r\n        let visual = new Set<IVisualObject>();\r\n        for (const obj of selectionBox.select()) {\r\n            let threeObject = obj.parent as ThreeVisualObject;\r\n            if (!threeObject?.visible) continue;\r\n\r\n            let node = this.getNodeFromObject(threeObject);\r\n            if (node === undefined) continue;\r\n            if (nodeFilter !== undefined && !nodeFilter.allow(node)) {\r\n                continue;\r\n            }\r\n            visual.add(threeObject);\r\n        }\r\n        return Array.from(visual);\r\n    }\r\n\r\n    private getNodeFromObject(threeObject: Object3D) {\r\n        let node: VisualNode | undefined;\r\n        if (threeObject instanceof ThreeMeshObject) {\r\n            node = threeObject.meshNode;\r\n        } else if (threeObject instanceof ThreeGeometry) {\r\n            node = threeObject.geometryNode;\r\n        } else if (threeObject instanceof ThreeComponentObject) {\r\n            node = threeObject.componentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    private initSelectionBox(mx1: number, my1: number, mx2: number, my2: number) {\r\n        const selectionBox = new SelectionBox(this.camera, this._scene);\r\n        const start = this.screenToCameraRect(mx1, my1);\r\n        const end = this.screenToCameraRect(mx2, my2);\r\n        selectionBox.startPoint.set(start.x, start.y, 0.5);\r\n        selectionBox.endPoint.set(end.x, end.y, 0.5);\r\n        return selectionBox;\r\n    }\r\n\r\n    detectShapesRect(\r\n        shapeType: ShapeType,\r\n        mx1: number,\r\n        my1: number,\r\n        mx2: number,\r\n        my2: number,\r\n        shapeFilter?: IShapeFilter,\r\n    ) {\r\n        const selectionBox = this.initSelectionBox(mx1, my1, mx2, my2);\r\n        let detecteds: VisualShapeData[] = [];\r\n        let containsCache = new Set<IShape>();\r\n        for (const obj of selectionBox.select()) {\r\n            this.addDetectedShape(detecteds, containsCache, shapeType, obj, shapeFilter);\r\n        }\r\n        return detecteds;\r\n    }\r\n\r\n    private addDetectedShape(\r\n        detecteds: VisualShapeData[],\r\n        cache: Set<IShape>,\r\n        shapeType: ShapeType,\r\n        obj: Mesh | LineSegments2,\r\n        shapeFilter?: IShapeFilter,\r\n    ) {\r\n        let shape = this.getParentShape(obj);\r\n        if (shape === undefined || cache.has(shape)) return;\r\n\r\n        const addShape = (indexes: number[]) => {\r\n            detecteds.push({\r\n                shape,\r\n                transform: ThreeHelper.toMatrix(obj.parent!.matrixWorld),\r\n                owner: obj.parent as any,\r\n                indexes,\r\n            });\r\n            cache.add(shape);\r\n        };\r\n\r\n        if (shapeType === ShapeType.Shape) {\r\n            addShape([]);\r\n            return;\r\n        }\r\n        if ((shape.shapeType & shapeType) === 0) return;\r\n        if (shapeFilter && !shapeFilter.allow(shape)) return;\r\n\r\n        let groups = obj instanceof LineSegments2 ? shape.mesh.edges?.range : shape.mesh.faces?.range;\r\n        addShape([...Array(groups?.length).keys()]);\r\n    }\r\n\r\n    private getParentShape(obj: Object3D): IShape | undefined {\r\n        if (!obj.parent?.visible || !(obj.parent instanceof ThreeGeometry)) return undefined;\r\n\r\n        return (obj.parent.geometryNode as ShapeNode).shape.unchecked();\r\n    }\r\n\r\n    detectShapes(\r\n        shapeType: ShapeType,\r\n        mx: number,\r\n        my: number,\r\n        shapeFilter?: IShapeFilter,\r\n    ): VisualShapeData[] {\r\n        let intersections = this.findIntersectedShapes(shapeType, mx, my);\r\n        return ShapeType.isWhole(shapeType)\r\n            ? this.detectThreeShapes(intersections, shapeFilter)\r\n            : this.detectSubShapes(shapeType, intersections, shapeFilter);\r\n    }\r\n\r\n    private detectThreeShapes(intersections: Intersection[], shapeFilter?: IShapeFilter): VisualShapeData[] {\r\n        for (const element of intersections) {\r\n            const parent = element.object.parent;\r\n            if (!(parent instanceof ThreeGeometry)) continue;\r\n\r\n            let shape: IShape | undefined;\r\n            if (parent.geometryNode instanceof ShapeNode) {\r\n                shape = parent.geometryNode.shape.unchecked();\r\n            } else if (parent.geometryNode instanceof MultiShapeNode) {\r\n                shape = this.findShapeAndIndex(parent, element).shape;\r\n            }\r\n            if (!shape) continue;\r\n\r\n            if (shapeFilter && !shapeFilter.allow(shape)) {\r\n                continue;\r\n            }\r\n\r\n            return [\r\n                {\r\n                    owner: parent,\r\n                    shape,\r\n                    transform: parent.worldTransform(),\r\n                    point: ThreeHelper.toXYZ(element.pointOnLine ?? element.point),\r\n                    indexes: [],\r\n                },\r\n            ];\r\n        }\r\n        return [];\r\n    }\r\n\r\n    private detectSubShapes(\r\n        shapeType: ShapeType,\r\n        intersections: Intersection<Object3D>[],\r\n        shapeFilter?: IShapeFilter,\r\n    ) {\r\n        let result: VisualShapeData[] = [];\r\n        for (const intersected of intersections) {\r\n            const visualShape = intersected.object.parent;\r\n            if (visualShape instanceof ThreeVisualObject) {\r\n                let { shape, indexes, transform } = this.getSubShapeFromInsection(\r\n                    shapeType,\r\n                    visualShape,\r\n                    intersected,\r\n                );\r\n                if (!shape || (shapeFilter && !shapeFilter.allow(shape))) {\r\n                    continue;\r\n                }\r\n                const nodeWorldTransform = visualShape.worldTransform();\r\n                result.push({\r\n                    owner: visualShape,\r\n                    shape,\r\n                    transform: transform ? nodeWorldTransform.multiply(transform) : nodeWorldTransform,\r\n                    point: ThreeHelper.toXYZ(intersected.pointOnLine ?? intersected.point),\r\n                    indexes,\r\n                });\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private getSubShapeFromInsection(\r\n        shapeType: ShapeType,\r\n        parent: ThreeVisualObject,\r\n        intersection: Intersection,\r\n    ): {\r\n        shape: IShape | undefined;\r\n        transform?: Matrix4;\r\n        indexes: number[];\r\n    } {\r\n        let { shape, subShape, index, groups, transform } = this.findShapeAndIndex(parent, intersection);\r\n        if (!subShape || !shape) return { shape: undefined, indexes: [] };\r\n\r\n        if (ShapeType.hasSolid(shapeType) && subShape.shapeType === ShapeType.Face) {\r\n            let solid = this.getAncestorAndIndex(ShapeType.Solid, subShape, shape, groups);\r\n            if (solid.shape) return solid;\r\n        }\r\n        if (ShapeType.hasShell(shapeType) && subShape.shapeType === ShapeType.Face) {\r\n            let shell = this.getAncestorAndIndex(ShapeType.Shell, subShape, shape, groups);\r\n            if (shell.shape) return shell;\r\n        }\r\n        if (ShapeType.hasWire(shapeType) && subShape.shapeType === ShapeType.Edge) {\r\n            let wire = this.getAncestorAndIndex(ShapeType.Wire, subShape, shape, groups);\r\n            if (wire.shape) return wire;\r\n        }\r\n        if (!ShapeType.hasFace(shapeType) && subShape.shapeType === ShapeType.Face) {\r\n            return { shape: undefined, indexes: [index] };\r\n        }\r\n        if (!ShapeType.hasEdge(shapeType) && subShape.shapeType === ShapeType.Edge) {\r\n            return { shape: undefined, indexes: [index] };\r\n        }\r\n\r\n        return { shape: subShape, indexes: [index], transform };\r\n    }\r\n\r\n    private getAncestorAndIndex(\r\n        type: ShapeType,\r\n        subShape: ISubShape,\r\n        shape: IShape,\r\n        groups: ShapeMeshRange[],\r\n    ) {\r\n        let ancestor = subShape.findAncestor(type, shape).at(0);\r\n        if (!ancestor) return { shape: undefined, indexes: [] };\r\n\r\n        let indexes: number[] = [];\r\n        for (const sub of ancestor.findSubShapes(subShape.shapeType)) {\r\n            this.findIndex(groups, sub, indexes);\r\n        }\r\n        return { shape: ancestor, indexes, subShape, transform: groups.at(0)?.transform };\r\n    }\r\n\r\n    private findIndex(groups: ShapeMeshRange[], shape: IShape, indexes: number[]) {\r\n        for (let i = 0; i < groups.length; i++) {\r\n            if (shape.isEqual(groups[i].shape)) {\r\n                indexes.push(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    private findShapeAndIndex(parent: ThreeVisualObject, element: Intersection) {\r\n        let type: \"edge\" | \"face\" = \"edge\";\r\n        let subVisualIndex = element.faceIndex! * 2;\r\n        if (!element.pointOnLine) {\r\n            type = \"face\";\r\n            subVisualIndex = element.faceIndex! * 3;\r\n        }\r\n\r\n        return parent.getSubShapeAndIndex(type, subVisualIndex);\r\n    }\r\n\r\n    private findIntersectedNodes(mx: number, my: number) {\r\n        let visuals: Object3D[] = [];\r\n        this.document.visual.context.visuals().forEach((x) => {\r\n            if (!x.visible) return;\r\n\r\n            if (x instanceof ThreeVisualObject) {\r\n                visuals.push(...x.wholeVisual());\r\n            }\r\n        });\r\n\r\n        return this.initRaycaster(mx, my).intersectObjects(visuals, false);\r\n    }\r\n\r\n    private findIntersectedShapes(shapeType: ShapeType, mx: number, my: number) {\r\n        let raycaster = this.initRaycaster(mx, my);\r\n        let shapes = this.initIntersectableShapes(shapeType);\r\n        return raycaster.intersectObjects(shapes, false);\r\n    }\r\n\r\n    private initIntersectableShapes(shapeType: ShapeType) {\r\n        let shapes = new Array<Object3D>();\r\n        this.document.visual.context.visuals().forEach((x) => {\r\n            if (!x.visible) return;\r\n            if (x instanceof ThreeVisualObject) shapes.push(...x.subShapeVisual(shapeType));\r\n            // TODO: vertex\r\n        });\r\n        return shapes;\r\n    }\r\n\r\n    private initRaycaster(mx: number, my: number) {\r\n        let threshold = Constants.RaycasterThreshold;\r\n        let { x, y } = this.screenToCameraRect(mx, my);\r\n        let mousePos = new Vector2(x, y);\r\n\r\n        let raycaster = new Raycaster();\r\n        if (this.mode === ViewMode.wireframe) {\r\n            raycaster.layers.disableAll();\r\n            raycaster.layers.enable(Constants.Layers.Wireframe);\r\n        } else if (this.mode === ViewMode.solid) {\r\n            raycaster.layers.disableAll();\r\n            raycaster.layers.enable(Constants.Layers.Solid);\r\n        } else {\r\n            raycaster.layers.enableAll();\r\n        }\r\n        raycaster.setFromCamera(mousePos, this.camera);\r\n        raycaster.params = {\r\n            ...raycaster.params,\r\n            Line2: { threshold },\r\n            Line: { threshold },\r\n            Points: { threshold },\r\n        };\r\n        return raycaster;\r\n    }\r\n}\r\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\r\n// See LICENSE file in the project root for full license information.\r\n\r\nimport {\r\n    BoundingBox,\r\n    CollectionAction,\r\n    CollectionChangedArgs,\r\n    ComponentNode,\r\n    DeepObserver,\r\n    GeometryNode,\r\n    GroupNode,\r\n    IDisposable,\r\n    INode,\r\n    IShapeFilter,\r\n    IVisual,\r\n    IVisualContext,\r\n    IVisualObject,\r\n    Material,\r\n    MeshNode,\r\n    NodeAction,\r\n    NodeRecord,\r\n    ShapeMeshData,\r\n    ShapeNode,\r\n    ShapeType,\r\n    Texture,\r\n    XY,\r\n    XYZ,\r\n} from \"chili-core\";\r\nimport {\r\n    Box3,\r\n    Group,\r\n    LineSegments,\r\n    Mesh,\r\n    Object3D,\r\n    Points,\r\n    Scene,\r\n    Material as ThreeMaterial,\r\n    Vector3,\r\n} from \"three\";\r\nimport { ThreeGeometry } from \"./threeGeometry\";\r\nimport { ThreeGeometryFactory } from \"./threeGeometryFactory\";\r\nimport { ThreeHelper } from \"./threeHelper\";\r\nimport { GroupVisualObject, ThreeComponentObject, ThreeMeshObject } from \"./threeVisualObject\";\r\n\r\nexport class ThreeVisualContext implements IVisualContext {\r\n    private readonly _visualNodeMap = new Map<IVisualObject, INode>();\r\n    private readonly _NodeVisualMap = new Map<INode, IVisualObject & Object3D>();\r\n    readonly materialMap = new Map<string, ThreeMaterial>();\r\n\r\n    readonly visualShapes: Group;\r\n    readonly tempShapes: Group;\r\n    readonly cssObjects: Group;\r\n\r\n    constructor(\r\n        readonly visual: IVisual,\r\n        readonly scene: Scene,\r\n    ) {\r\n        this.visualShapes = new Group();\r\n        this.tempShapes = new Group();\r\n        this.cssObjects = new Group();\r\n        scene.add(this.visualShapes, this.tempShapes, this.cssObjects);\r\n        visual.document.addNodeObserver(this);\r\n        visual.document.materials.onCollectionChanged(this.onMaterialCollectionChanged);\r\n    }\r\n\r\n    private readonly onMaterialCollectionChanged = (args: CollectionChangedArgs) => {\r\n        if (args.action === CollectionAction.add) {\r\n            args.items.forEach(this.createThreeMaterial.bind(this));\r\n        } else if (args.action === CollectionAction.remove) {\r\n            args.items.forEach(this.removeThreeMaterial.bind(this));\r\n        }\r\n    };\r\n\r\n    private createThreeMaterial(material: Material) {\r\n        const result = ThreeHelper.parseToThreeMaterial(material);\r\n        DeepObserver.addDeepPropertyChangedHandler(material, this.onMaterialPropertyChanged);\r\n        this.materialMap.set(material.id, result);\r\n    }\r\n\r\n    private removeThreeMaterial(item: Material) {\r\n        const material = this.materialMap.get(item.id);\r\n        this.materialMap.delete(item.id);\r\n        DeepObserver.removeDeepPropertyChangedHandler(item, this.onMaterialPropertyChanged);\r\n        material?.dispose();\r\n    }\r\n\r\n    private readonly onMaterialPropertyChanged = (path: string, source: any) => {\r\n        const material: any = this.materialMap.get(source?.id);\r\n        if (!material) return;\r\n\r\n        const { isOk, value } = DeepObserver.getPathValue(source, path);\r\n        if (!isOk) return;\r\n\r\n        if (path === \"color\") {\r\n            material.color.set(value);\r\n        } else if (!path.includes(\".\")) {\r\n            material[path] = value instanceof Texture ? ThreeHelper.loadTexture(value) : value;\r\n        } else {\r\n            this.setTextureValue(source, material, path, value);\r\n        }\r\n    };\r\n\r\n    private setTextureValue(material: any, threeMaterial: any, path: string, value: any) {\r\n        const paths = path.split(\".\");\r\n        if (path.endsWith(\".image\") && material[paths[0]] instanceof Texture && paths[0] in threeMaterial) {\r\n            threeMaterial[paths[0]] = ThreeHelper.loadTexture(material[paths[0]]);\r\n            return;\r\n        }\r\n\r\n        let obj = threeMaterial;\r\n        for (let i = 0; i < paths.length - 1; i++) {\r\n            obj = obj[paths[i]];\r\n        }\r\n        if (obj === undefined) return;\r\n\r\n        if (value instanceof XY) {\r\n            obj[paths.at(-1)!].set(value.x, value.y);\r\n        } else {\r\n            obj[paths.at(-1)!] = value;\r\n        }\r\n    }\r\n\r\n    handleNodeChanged = (records: NodeRecord[]) => {\r\n        const adds: INode[] = [];\r\n        const rms: INode[] = [];\r\n        records.forEach((x) => {\r\n            if (\r\n                x.action === NodeAction.add ||\r\n                x.action === NodeAction.insertBefore ||\r\n                x.action === NodeAction.insertAfter\r\n            ) {\r\n                INode.nodeOrChildrenAppendToNodes(adds, x.node);\r\n            } else if (x.action === NodeAction.remove || x.action === NodeAction.transfer) {\r\n                INode.nodeOrChildrenAppendToNodes(rms, x.node);\r\n            } else if (x.action === NodeAction.move && x.newParent) {\r\n                this.moveNode(x.node, x.oldParent!);\r\n            }\r\n        });\r\n\r\n        this.addNode(adds);\r\n        this.removeNode(rms);\r\n    };\r\n\r\n    addVisualObject(object: IVisualObject): void {\r\n        if (object instanceof Object3D) {\r\n            this.visualShapes.add(object);\r\n        }\r\n    }\r\n\r\n    removeVisualObject(object: IVisualObject): void {\r\n        if (object instanceof Object3D) {\r\n            this.visualShapes.remove(object);\r\n        }\r\n    }\r\n\r\n    dispose() {\r\n        this.visualShapes.traverse((x) => {\r\n            if (IDisposable.isDisposable(x)) x.dispose();\r\n        });\r\n        this.visual.document.materials.forEach((x) =>\r\n            x.removePropertyChanged(this.onMaterialPropertyChanged),\r\n        );\r\n        this.visual.document.materials.removeCollectionChanged(this.onMaterialCollectionChanged);\r\n        this.visual.document.removeNodeObserver(this);\r\n        this.materialMap.forEach((x) => x.dispose());\r\n        this.materialMap.clear();\r\n        this.visualShapes.clear();\r\n        this.tempShapes.clear();\r\n        this._visualNodeMap.clear();\r\n        this._NodeVisualMap.clear();\r\n        this.scene.remove(this.visualShapes, this.tempShapes);\r\n    }\r\n\r\n    getNode(visual: IVisualObject): INode | undefined {\r\n        return this._visualNodeMap.get(visual);\r\n    }\r\n\r\n    redrawNode(models: INode[]) {\r\n        this.removeNode(models);\r\n        this.addNode(models);\r\n    }\r\n\r\n    get shapeCount() {\r\n        return this.visualShapes.children.length;\r\n    }\r\n\r\n    getVisual(nodel: INode): IVisualObject | undefined {\r\n        return this._NodeVisualMap.get(nodel);\r\n    }\r\n\r\n    visuals(): IVisualObject[] {\r\n        let shapes = new Array<IVisualObject>();\r\n        this.visualShapes.children.forEach((x) => this._getVisualObject(shapes, x));\r\n        return shapes;\r\n    }\r\n\r\n    boundingBoxIntersectFilter(\r\n        boundingBox: {\r\n            min: XYZ;\r\n            max: XYZ;\r\n        },\r\n        filter?: IShapeFilter,\r\n    ): IVisualObject[] {\r\n        let box = new Box3().setFromPoints([\r\n            ThreeHelper.fromXYZ(boundingBox.min),\r\n            ThreeHelper.fromXYZ(boundingBox.max),\r\n        ]);\r\n        return this.visuals().filter((x) => {\r\n            const node = (x as ThreeGeometry)?.geometryNode;\r\n            const shape = (node as ShapeNode)?.shape.unchecked();\r\n            if (filter && shape && !filter.allow(shape)) {\r\n                return false;\r\n            }\r\n\r\n            let boundingBox = BoundingBox.transformed(x.boundingBox()!, node.worldTransform());\r\n            if (boundingBox === undefined) {\r\n                return false;\r\n            }\r\n\r\n            let testBox = new Box3(\r\n                new Vector3(boundingBox.min.x, boundingBox.min.y, boundingBox.min.z),\r\n                new Vector3(boundingBox.max.x, boundingBox.max.y, boundingBox.max.z),\r\n            );\r\n            return box.intersectsBox(testBox);\r\n        });\r\n    }\r\n\r\n    private _getVisualObject(visuals: Array<IVisualObject>, obj: Object3D) {\r\n        let group = obj as Group;\r\n        if (group.type === \"Group\") {\r\n            group.children.forEach((x) => this._getVisualObject(visuals, x));\r\n        } else if (\r\n            obj instanceof ThreeGeometry ||\r\n            obj instanceof ThreeMeshObject ||\r\n            obj instanceof ThreeComponentObject\r\n        ) {\r\n            visuals.push(obj);\r\n        }\r\n    }\r\n\r\n    displayMesh(...datas: ShapeMeshData[]): number {\r\n        let group = new Group();\r\n        datas.forEach((data) => {\r\n            if (ShapeMeshData.isVertex(data)) {\r\n                group.add(ThreeGeometryFactory.createVertexGeometry(data));\r\n            } else if (ShapeMeshData.isEdge(data)) {\r\n                group.add(ThreeGeometryFactory.createEdgeGeometry(data));\r\n            } else if (ShapeMeshData.isFace(data)) {\r\n                group.add(ThreeGeometryFactory.createFaceGeometry(data));\r\n            }\r\n        });\r\n        this.tempShapes.add(group);\r\n        return group.id;\r\n    }\r\n\r\n    removeMesh(id: number) {\r\n        let shape = this.tempShapes.getObjectById(id);\r\n        if (shape === undefined) return;\r\n        shape.children.forEach((x) => {\r\n            if (x instanceof Mesh || x instanceof LineSegments || x instanceof Points) {\r\n                x.geometry.dispose();\r\n                x.material.dispose();\r\n            }\r\n            if (IDisposable.isDisposable(x)) {\r\n                x.dispose();\r\n            }\r\n        });\r\n        shape.children.length = 0;\r\n        this.tempShapes.remove(shape);\r\n    }\r\n\r\n    setVisible(node: INode, visible: boolean): void {\r\n        let shape = this.getVisual(node);\r\n        if (shape === undefined || shape.visible === visible) return;\r\n        shape.visible = visible;\r\n    }\r\n\r\n    moveNode(node: INode, oldParent: INode): void {\r\n        if (oldParent === node.parent) return;\r\n\r\n        let parentNode = this._NodeVisualMap.get(oldParent) ?? this.visualShapes;\r\n        let newParentNode = (this._NodeVisualMap.get(node.parent!) as any) ?? this.visualShapes;\r\n        if (parentNode === newParentNode) {\r\n            return;\r\n        }\r\n\r\n        if (parentNode instanceof Group) {\r\n            let visual = this._NodeVisualMap.get(node);\r\n            if (visual instanceof Object3D) {\r\n                parentNode.remove(visual);\r\n                newParentNode.add(visual);\r\n            }\r\n        }\r\n    }\r\n\r\n    addNode(nodes: INode[]) {\r\n        nodes.forEach((node) => {\r\n            if (!this._NodeVisualMap.has(node)) {\r\n                this.displayNode(node);\r\n            }\r\n        });\r\n    }\r\n\r\n    private displayNode(node: INode) {\r\n        let visualObject: (IVisualObject & Object3D) | undefined;\r\n        if (node instanceof MeshNode) {\r\n            visualObject = new ThreeMeshObject(this, node);\r\n        } else if (node instanceof GeometryNode) {\r\n            visualObject = new ThreeGeometry(node, this);\r\n        } else if (node instanceof GroupNode) {\r\n            visualObject = new GroupVisualObject(node);\r\n        } else if (node instanceof ComponentNode) {\r\n            visualObject = new ThreeComponentObject(node, this);\r\n        }\r\n\r\n        if (visualObject) {\r\n            const parent = this.getParentVisual(node);\r\n            parent.add(visualObject);\r\n            this._visualNodeMap.set(visualObject, node);\r\n            this._NodeVisualMap.set(node, visualObject);\r\n        }\r\n    }\r\n\r\n    removeNode(models: INode[]) {\r\n        models.forEach((m) => {\r\n            let visual = this._NodeVisualMap.get(m);\r\n            this._NodeVisualMap.delete(m);\r\n            if (!visual) return;\r\n            this._visualNodeMap.delete(visual);\r\n            visual.parent?.remove(visual);\r\n            visual.dispose();\r\n        });\r\n    }\r\n\r\n    private getParentVisual(node: INode): Group {\r\n        let parent = this.visualShapes;\r\n        if (node.parent) {\r\n            let parentNode = this._NodeVisualMap.get(node.parent);\r\n            if (parentNode instanceof Group) {\r\n                parent = parentNode;\r\n            }\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    findShapes(shapeType: ShapeType): Object3D[] {\r\n        if (shapeType === ShapeType.Shape) {\r\n            return [...this.visualShapes.children];\r\n        }\r\n        const shapes: Object3D[] = [];\r\n        this.visualShapes.traverse((child) => {\r\n            if (!(child instanceof ThreeGeometry)) return;\r\n\r\n            if (shapeType === ShapeType.Edge) {\r\n                let wireframe = child.edges();\r\n                if (wireframe) shapes.push(wireframe);\r\n            } else if (shapeType === ShapeType.Face) {\r\n                let faces = child.faces();\r\n                if (faces) shapes.push(faces);\r\n            }\r\n        });\r\n        return shapes;\r\n    }\r\n\r\n    getMaterial(id: string | string[]): ThreeMaterial | ThreeMaterial[] {\r\n        if (Array.isArray(id)) {\r\n            const materials = [];\r\n            for (const i of id) {\r\n                const material = this.materialMap.get(i);\r\n                if (!material) {\r\n                    throw new Error(`Material not found: ${i}`);\r\n                }\r\n                materials.push(material);\r\n            }\r\n            return materials.length === 1 ? materials[0] : materials;\r\n        }\r\n\r\n        const material = this.materialMap.get(id);\r\n        if (!material) {\r\n            throw new Error(`Material not found: ${id}`);\r\n        }\r\n        return material;\r\n    }\r\n}\r\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\r\n// See LICENSE file in the project root for full license information.\r\n\r\nimport { IEventHandler, IView } from \"chili-core\";\r\n\r\ninterface MouseDownData {\r\n    time: number;\r\n    key: number;\r\n}\r\n\r\nconst MOUSE_MIDDLE = 4;\r\n\r\nexport class ThreeViewHandler implements IEventHandler {\r\n    private _lastDown: MouseDownData | undefined;\r\n    private _clearDownId: number | undefined;\r\n    private _offsetPoint: { x: number; y: number } | undefined;\r\n    protected lastPointerEventMap: Map<number, PointerEvent> = new Map();\r\n    protected currentPointerEventMap: Map<number, PointerEvent> = new Map();\r\n\r\n    canRotate: boolean = true;\r\n\r\n    dispose() {\r\n        this.clearTimeout();\r\n        this.lastPointerEventMap.clear();\r\n        this.currentPointerEventMap.clear();\r\n    }\r\n\r\n    mouseWheel(view: IView, event: WheelEvent): void {\r\n        view.cameraController.zoom(event.offsetX, event.offsetY, event.deltaY);\r\n        view.update();\r\n    }\r\n\r\n    pointerMove(view: IView, event: PointerEvent): void {\r\n        if (event.pointerType === \"mouse\") {\r\n            this.handleMouseMove(view, event);\r\n        } else {\r\n            this.handleTouchMove(view, event);\r\n        }\r\n\r\n        view.update();\r\n    }\r\n\r\n    private handleMouseMove(view: IView, event: PointerEvent) {\r\n        if (event.buttons !== MOUSE_MIDDLE) {\r\n            return;\r\n        }\r\n\r\n        let dx = 0;\r\n        let dy = 0;\r\n        if (this._offsetPoint) {\r\n            dx = event.offsetX - this._offsetPoint.x;\r\n            dy = event.offsetY - this._offsetPoint.y;\r\n            this._offsetPoint = { x: event.offsetX, y: event.offsetY };\r\n        }\r\n\r\n        if (event.shiftKey && this.canRotate) {\r\n            view.cameraController.rotate(dx, dy);\r\n        } else if (!event.shiftKey) {\r\n            view.cameraController.pan(dx, dy);\r\n        }\r\n        if (dx !== 0 && dy !== 0) this._lastDown = undefined;\r\n    }\r\n\r\n    private handleTouchMove(view: IView, event: PointerEvent) {\r\n        if (!this.currentPointerEventMap.has(event.pointerId)) {\r\n            this.currentPointerEventMap.set(event.pointerId, event);\r\n            return;\r\n        }\r\n\r\n        if (this.currentPointerEventMap.size === 3 && this.lastPointerEventMap.size === 3) {\r\n            const offset = this.getPrimaryTouchOffset();\r\n            if (offset) view.cameraController.rotate(offset.dx, offset.dy);\r\n        } else if (this.currentPointerEventMap.size === 2 && this.lastPointerEventMap.size === 2) {\r\n            const last = this.getCenterAndDistance(this.lastPointerEventMap);\r\n            const current = this.getCenterAndDistance(this.currentPointerEventMap);\r\n            const dtCenter = this.distance(current.center.x, current.center.y, last.center.x, last.center.y);\r\n            const dtDistance = current.distance - last.distance;\r\n            if (dtCenter > Math.abs(dtDistance) * 0.5) {\r\n                // 0.5 no meaning, just for scale\r\n                view.cameraController.pan(\r\n                    current.center.x - last.center.x,\r\n                    current.center.y - last.center.y,\r\n                );\r\n            } else {\r\n                view.cameraController.zoom(current.center.x, current.center.y, -dtDistance);\r\n            }\r\n        }\r\n\r\n        this.lastPointerEventMap.clear();\r\n        this.lastPointerEventMap = this.currentPointerEventMap;\r\n        this.currentPointerEventMap = new Map();\r\n    }\r\n\r\n    private getPrimaryTouchOffset() {\r\n        const findPrimary = (pointerEvents: Map<number, PointerEvent>) => {\r\n            let primary: PointerEvent | undefined;\r\n            for (const [, event] of pointerEvents) {\r\n                if (event.isPrimary) {\r\n                    primary = event;\r\n                    break;\r\n                }\r\n            }\r\n            return primary;\r\n        };\r\n        const last = findPrimary(this.lastPointerEventMap);\r\n        const current = findPrimary(this.currentPointerEventMap);\r\n        if (last && current) {\r\n            return {\r\n                dx: current.offsetX - last.offsetX,\r\n                dy: current.offsetY - last.offsetY,\r\n            };\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    private getCenterAndDistance(pointerEvents: Map<number, PointerEvent>) {\r\n        const values = pointerEvents.values();\r\n        const first = values.next().value!;\r\n        const second = values.next().value!;\r\n        const center = {\r\n            x: (first.offsetX + second.offsetX) / 2,\r\n            y: (first.offsetY + second.offsetY) / 2,\r\n        };\r\n        const distance = this.distance(first.offsetX, second.offsetX, first.offsetY, second.offsetY);\r\n        return { center, distance };\r\n    }\r\n\r\n    private distance(x1: number, y1: number, x2: number, y2: number) {\r\n        return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\r\n    }\r\n\r\n    pointerDown(view: IView, event: PointerEvent): void {\r\n        this.clearTimeout();\r\n        if (event.pointerType === \"mouse\") {\r\n            this.handleMouseDown(event, view);\r\n        } else {\r\n            this.lastPointerEventMap.set(event.pointerId, event);\r\n        }\r\n    }\r\n\r\n    private handleMouseDown(event: PointerEvent, view: IView) {\r\n        if (this._lastDown && this._lastDown.time + 500 > Date.now() && event.buttons === MOUSE_MIDDLE) {\r\n            this._lastDown = undefined;\r\n            view.cameraController.fitContent();\r\n            view.update();\r\n        } else if (event.buttons === MOUSE_MIDDLE) {\r\n            view.cameraController.startRotate(event.offsetX, event.offsetY);\r\n            this._lastDown = {\r\n                time: Date.now(),\r\n                key: event.buttons,\r\n            };\r\n            this._offsetPoint = { x: event.offsetX, y: event.offsetY };\r\n        }\r\n    }\r\n\r\n    private clearTimeout() {\r\n        if (this._clearDownId) {\r\n            clearTimeout(this._clearDownId);\r\n            this._clearDownId = undefined;\r\n        }\r\n    }\r\n\r\n    pointerOut(view: IView, event: PointerEvent): void {\r\n        this._lastDown = undefined;\r\n        this.lastPointerEventMap.delete(event.pointerId);\r\n        this.currentPointerEventMap.delete(event.pointerId);\r\n    }\r\n\r\n    pointerUp(view: IView, event: PointerEvent): void {\r\n        if (event.buttons === MOUSE_MIDDLE && this._lastDown) {\r\n            this._clearDownId = window.setTimeout(() => {\r\n                this._lastDown = undefined;\r\n                this._clearDownId = undefined;\r\n            }, 500);\r\n        }\r\n        this._offsetPoint = undefined;\r\n        this.lastPointerEventMap.delete(event.pointerId);\r\n        this.currentPointerEventMap.delete(event.pointerId);\r\n    }\r\n\r\n    keyDown(view: IView, event: KeyboardEvent): void {}\r\n}\r\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\r\n// See LICENSE file in the project root for full license information.\r\n\r\nimport { IDisposable, IDocument, IEventHandler, IVisual, Logger, Plane } from \"chili-core\";\r\nimport { NodeSelectionHandler } from \"chili-vis\";\r\nimport { AmbientLight, AxesHelper, Object3D, Scene } from \"three\";\r\nimport { ThreeHighlighter } from \"./threeHighlighter\";\r\nimport { ThreeView } from \"./threeView\";\r\nimport { ThreeVisualContext } from \"./threeVisualContext\";\r\nimport { ThreeViewHandler } from \"./threeViewEventHandler\";\r\n\r\nObject3D.DEFAULT_UP.set(0, 0, 1);\r\n\r\nexport class ThreeVisual implements IVisual {\r\n    readonly defaultEventHandler: IEventHandler;\r\n    readonly context: ThreeVisualContext;\r\n    readonly scene: Scene;\r\n    readonly highlighter: ThreeHighlighter;\r\n    readonly viewHandler: IEventHandler;\r\n    private _eventHandler: IEventHandler;\r\n\r\n    get eventHandler() {\r\n        return this._eventHandler;\r\n    }\r\n\r\n    set eventHandler(value: IEventHandler) {\r\n        if (this._eventHandler === value) return;\r\n        this._eventHandler = value;\r\n        Logger.info(`Changed EventHandler to ${Object.getPrototypeOf(value).constructor.name}`);\r\n    }\r\n\r\n    constructor(readonly document: IDocument) {\r\n        this.scene = this.initScene();\r\n        this.defaultEventHandler = new NodeSelectionHandler(document, true);\r\n        this.viewHandler = new ThreeViewHandler();\r\n        this.context = new ThreeVisualContext(this, this.scene);\r\n        this.highlighter = new ThreeHighlighter(this.context);\r\n        this._eventHandler = this.defaultEventHandler;\r\n    }\r\n\r\n    initScene() {\r\n        let scene = new Scene();\r\n        let envLight = new AmbientLight(0x888888, 4);\r\n        let axisHelper = new AxesHelper(250);\r\n        scene.add(envLight, axisHelper);\r\n        return scene;\r\n    }\r\n\r\n    resetEventHandler() {\r\n        this.eventHandler = this.defaultEventHandler;\r\n    }\r\n\r\n    isExcutingHandler(): boolean {\r\n        return this.eventHandler !== this.defaultEventHandler;\r\n    }\r\n\r\n    createView(name: string, workplane: Plane) {\r\n        return new ThreeView(this.document, name, workplane, this.highlighter, this.context);\r\n    }\r\n\r\n    update(): void {\r\n        this.document.application.views.forEach((view) => {\r\n            if (view.document === this.document) view.update();\r\n        });\r\n    }\r\n\r\n    dispose() {\r\n        this.context.dispose();\r\n        this.defaultEventHandler.dispose();\r\n        this._eventHandler.dispose();\r\n        this.viewHandler.dispose();\r\n        this.scene.traverse((x) => {\r\n            if (IDisposable.isDisposable(x)) x.dispose();\r\n        });\r\n        this.scene.clear();\r\n    }\r\n}\r\n","// Part of the Chili3d Project, under the AGPL-3.0 License.\r\n// See LICENSE file in the project root for full license information.\r\n\r\nimport { IDocument, IVisual, IVisualFactory } from \"chili-core\";\r\n\r\nimport { ThreeVisual } from \"./threeVisual\";\r\n\r\nexport class ThreeVisulFactory implements IVisualFactory {\r\n    readonly kernelName = \"three\";\r\n    create(document: IDocument): IVisual {\r\n        return new ThreeVisual(document);\r\n    }\r\n}\r\n"],"names":["ThreeHelper","matrix","Matrix4","vector","XYZ","Vector3","camera","color","ThreeColor","groups","subIndex","i","array","x","y","z","object","box","Box3","min","max","item","map","TextureLoader","RepeatWrapping","MathUtils","material","ThreePhysicalMaterial","DoubleSide","ThreePhoneMaterial","ThreeLambertMaterial","PhysicalMaterial","PhongMaterial","hilightEdgeMaterial","LineMaterial","VisualConfig","selectedEdgeMaterial","faceTransparentMaterial","MeshLambertMaterial","ThreeGeometryFactory","data","buff","BufferGeometry","BufferAttribute","PointsMaterial","AlwaysDepth","Points","Mesh","buffer","Array","Float32BufferAttribute","linewidth","LineType","LineSegments2","LineSegmentsGeometry","Constants","Object","HighlightFaceMaterial","ThreeVisualObject","Object3D","value","node","property","ThreeMeshObject","context","meshNode","shapeType","subVisualIndex","undefined","Error","mesh","line","geometry","LineGeometry","Line2","GroupVisualObject","Group","groupNode","ThreeComponentObject","componentNode","materials","BoundingBox","range","index","shapes","isWhole","ShapeType","ThreeGeometry","geometryNode","positions","MeshUtils","subShape","transform","shape","ShapeNode","IHighlightable","is","GeometryState","highlighter","visual","Map","type","key","state","method","_oldState","newState","VisualState","oldState","func","shouldRemoved","points","console","lineGeometry","segment","ThreeHighlighter","content","v","k","geometryState","datas","group","ShapeMeshData","id","IDisposable","DEG_TO_RAD","Math","MAX_PITCH_ANGLE","Camera","CameraController","Observable","OrthographicCamera","view","near","far","PerspectiveCamera","mode","ViewMode","dx","dy","ratio","PAN_SPEED_FACTOR","direction","hor","ver","Precision","width","height","aspect","frustumHalfHeight","length","CAMERA_FOV","nodes","center","matrixX","matrixY","targetToEye","currentPitch","targetPitch","sphere","fieldOfView","distance","Sphere","VisualNode","threeGeometry","boundingBox","delta","zoomFactor","scale","mouse","targetMoveVector","raycaster","Raycaster","intersect","ZOOM_SPEED_FACTOR","directionNormal","dot","project","eye","target","up","mx","my","dist","options","ViewGizmo","HTMLElement","e","rect","position","canvas","document","invRotMat","axis","a","b","axes","closestDist","Infinity","p","radius","p1","p2","customElements","ThreeView","name","workplane","DirectionalLight","entries","entry","resizerObserverCallback","debounce","ResizeObserver","otherView","PubSub","renderer","WebGLRenderer","window","CSS2DRenderer","element","text","point","dispose","cssObject","CSS2DObject","div","style","span","svg","requestAnimationFrame","dir","Vector2","origin","Ray","vec","cx","cy","XY","nodeFilter","detected","threeObject","mx1","my1","mx2","my2","selectionBox","Set","obj","SelectionBox","start","end","shapeFilter","detecteds","containsCache","cache","addShape","indexes","intersections","parent","MultiShapeNode","result","intersected","visualShape","nodeWorldTransform","intersection","solid","shell","wire","ancestor","sub","visuals","threshold","mousePos","ThreeVisualContext","scene","args","CollectionAction","path","source","isOk","DeepObserver","Texture","records","adds","rms","NodeAction","INode","threeMaterial","paths","models","nodel","filter","testBox","LineSegments","visible","oldParent","parentNode","newParentNode","visualObject","MeshNode","GeometryNode","GroupNode","ComponentNode","m","child","wireframe","faces","ThreeViewHandler","event","offset","last","current","dtCenter","dtDistance","findPrimary","pointerEvents","primary","values","first","second","x1","y1","x2","y2","Date","clearTimeout","ThreeVisual","Logger","NodeSelectionHandler","Scene","envLight","AmbientLight","axisHelper","AxesHelper","ThreeVisulFactory"],"mappings":"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"}